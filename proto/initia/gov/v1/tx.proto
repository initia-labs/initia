syntax = "proto3";
package initia.gov.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "initia/gov/v1/gov.proto";

option go_package = "github.com/initia-labs/initia/x/gov/types";
option (gogoproto.equal_all) = true;

// Msg defines the gov Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a governance operation for updating the x/gov
  // module parameters. The authority is defined in the keeper.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // AddEmergencySubmitters defines a governance operation for adding emergency proposal submitters.
  rpc AddEmergencySubmitters(MsgAddEmergencySubmitters) returns (MsgAddEmergencySubmittersResponse);

  // RemoveEmergencySubmitters defines a governance operation for removing emergency proposal submitters.
  rpc RemoveEmergencySubmitters(MsgRemoveEmergencySubmitters) returns (MsgRemoveEmergencySubmittersResponse);

  // ActivateEmergencyProposal defines a governance operation for activating an emergency proposal.
  rpc ActivateEmergencyProposal(MsgActivateEmergencyProposal) returns (MsgActivateEmergencyProposalResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "gov/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/gov parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgAddEmergencySubmitters is the Msg/AddEmergencySubmitters request type.
message MsgAddEmergencySubmitters {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "gov/MsgAddEmergencySubmitters";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  repeated string emergency_submitters = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgAddEmergencySubmittersResponse defines the response structure for executing a
// MsgAddEmergencySubmitters message.
message MsgAddEmergencySubmittersResponse {}

// MsgRemoveEmergencySubmitters is the Msg/RemoveEmergencySubmitters request type.
message MsgRemoveEmergencySubmitters {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "gov/MsgRemoveEmergencySubmitters";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  repeated string emergency_submitters = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgRemoveEmergencySubmittersResponse defines the response structure for executing a
// MsgRemoveEmergencySubmitters message.
message MsgRemoveEmergencySubmittersResponse {}

// MsgActivateEmergencyProposal is the Msg/ActivateEmergencyProposal request type.
message MsgActivateEmergencyProposal {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "gov/MsgActivateEmergencyProposal";

  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 proposal_id = 2;
}

// MsgActivateEmergencyProposalResponse defines the response structure for executing a
// MsgActivateEmergencyProposal message.
message MsgActivateEmergencyProposalResponse {}
