syntax = "proto3";
package initia.bank.v1;

import "amino/amino.proto";
import "cosmos/bank/v1beta1/bank.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/initia-labs/initia/x/bank/types";
option (gogoproto.equal_all) = false;

// Msg defines the bank Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // SetDenomMetadata defines a governance operation for updating the x/bank
  // denom metadata. The authority is defined in the keeper.
  rpc SetDenomMetadata(MsgSetDenomMetadata) returns (MsgSetDenomMetadataResponse);
}

// MsgSetDenomMetadata is the Msg/UpdateParams request type.
message MsgSetDenomMetadata {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "bank/MsgSetDenomMetadata";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // metadata defines the x/bank denom metadata to update.
  cosmos.bank.v1beta1.Metadata metadata = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgSetDenomMetadataResponse defines the response structure for executing a
// MsgSetDenomMetadata message.
message MsgSetDenomMetadataResponse {}
