syntax = "proto3";

package ibc.applications.perm.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "ibc/applications/perm/v1/types.proto";

option go_package = "github.com/initia-labs/initia/x/ibc/perm/types";

// Query provides defines the gRPC querier service.
service Query {
  // PermissionedRelayersByChannel queries a set of permissioned ibc relayers for the specific channel.
  rpc PermissionedRelayersByChannel(QueryPermissionedRelayersByChannelRequest)
      returns (QueryPermissionedRelayersByChannelResponse) {
    option (google.api.http).get = "/ibc/apps/perm/v1/relayers/{port_id}/{channel_id}";
  }

  // AllPermissionedRelayers queries all sets of permissioned relayers for all channels.
  rpc AllPermissionedRelayers(QueryAllPermissionedRelayersRequest) returns (QueryAllPermissionedRelayersResponse) {
    option (google.api.http).get = "/ibc/apps/perm/v1/relayers";
  }
}

// QueryPermissionedRelayersOfOneChannelRequest is the request type for the Query/PermissionedRelayer RPC
// method
message QueryPermissionedRelayersByChannelRequest {
  string port_id    = 1;
  string channel_id = 2;
}

// QueryPermissionedRelayerResponse is the response type for the Query/PermissionedRelayer RPC
// method.
message QueryPermissionedRelayersByChannelResponse {
  // class_trace returns the requested class id trace information.
  PermissionedRelayers permissioned_relayers = 1;
}

// QueryAllPermissionedRelayersRequest is the request type for the Query/AllPermissionedRelayers RPC
// method
message QueryAllPermissionedRelayersRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAllPermissionedRelayersResponse is the response type for the Query/AllPermissionedRelayers RPC
// method.
message QueryAllPermissionedRelayersResponse {
  // class_trace returns the requested class id trace information.
  repeated PermissionedRelayers permissioned_relayers = 1 [(gogoproto.nullable) = false];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
