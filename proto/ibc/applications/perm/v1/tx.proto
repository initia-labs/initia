syntax = "proto3";
package ibc.applications.perm.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
option go_package = "github.com/initia-labs/initia/x/ibc/perm/types";

// Msg defines the ibc/perm Msg service
service Msg {
  option (cosmos.msg.v1.service) = true;

  // SetPermissionedRelayers defines a rpc handler method for MsgSetPermissionedRelayers.
  rpc SetPermissionedRelayers(MsgSetPermissionedRelayers) returns (MsgSetPermissionedRelayersResponse);
}

// MsgSetPermissionedRelayers defines msg to set permissioned relyer for
// the specific ibc channel.
message MsgSetPermissionedRelayers {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name)           = "perm/MsgSetPermissionedRelayers";

  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // authority is the address that controls the module
  // (defaults to x/gov unless overwritten).
  string authority  = 1 [(gogoproto.moretags) = "yaml:\"authority\"", (cosmos_proto.scalar) = "cosmos.AddressString"];
  string port_id    = 2 [(gogoproto.moretags) = "yaml:\"port_id\""];
  string channel_id = 3 [(gogoproto.moretags) = "yaml:\"channel_id\""];
  repeated string relayers = 4 [(gogoproto.moretags) = "yaml:\"relayers\""];
}

// MsgSetPermissionedRelayersResponse defines the Msg/SetPermissionedRelayer response type.
message MsgSetPermissionedRelayersResponse {}
