swagger: '2.0'
info:
  title: Connect - REST docs
  description: A REST interface for state queries
  version: 1.0.0
paths:
  /connect/oracle/v2/get_all_tickers:
    get:
      summary: >-
        Get all the currency pairs the x/oracle module is tracking price-data
        for.
      operationId: GetAllCurrencyPairs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              currency_pairs:
                type: array
                items:
                  type: object
                  properties:
                    Base:
                      type: string
                    Quote:
                      type: string
                  title: >-
                    CurrencyPair is the standard representation of a pair of
                    assets, where one

                    (Base) is priced in terms of the other (Quote)
            description: >-
              GetAllCurrencyPairsResponse returns all CurrencyPairs that the
              module is

              currently tracking.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /connect/oracle/v2/get_currency_pair_mapping:
    get:
      summary: >-
        Get the mapping of currency pair ID -> currency pair. This is useful for

        indexers that have access to the ID of a currency pair, but no way to
        get

        the underlying currency pair from it.
      operationId: GetCurrencyPairMapping
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              currency_pair_mapping:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    Base:
                      type: string
                    Quote:
                      type: string
                  title: >-
                    CurrencyPair is the standard representation of a pair of
                    assets, where one

                    (Base) is priced in terms of the other (Quote)
                description: >-
                  currency_pair_mapping is a mapping of the id representing the
                  currency pair

                  to the currency pair itself.
            description: >-
              GetCurrencyPairMappingResponse is the GetCurrencyPairMapping
              response type.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /connect/oracle/v2/get_currency_pair_mapping_list:
    get:
      summary: >-
        Get the mapping of currency pair ID <-> currency pair as a list. This is

        useful for indexers that have access to the ID of a currency pair, but
        no

        way to get the underlying currency pair from it.
      operationId: GetCurrencyPairMappingList
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              mappings:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                      description: >-
                        ID is the unique identifier for this currency pair
                        string.
                    currency_pair:
                      type: object
                      properties:
                        Base:
                          type: string
                        Quote:
                          type: string
                      title: >-
                        CurrencyPair is the standard representation of a pair of
                        assets, where one

                        (Base) is priced in terms of the other (Quote)
                      description: >-
                        CurrencyPair is the human-readable representation of the
                        currency pair.
                description: |-
                  mappings is a list of the id representing the currency pair
                  to the currency pair itself.
            description: >-
              GetCurrencyPairMappingResponse is the GetCurrencyPairMapping
              response type.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /connect/oracle/v2/get_price:
    get:
      summary: >-
        Given a CurrencyPair (or its identifier) return the latest QuotePrice
        for

        that CurrencyPair.
      operationId: GetPrice
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              price:
                title: >-
                  QuotePrice represents the quote-price for the CurrencyPair
                  given in

                  GetPriceRequest (possibly nil if no update has been made)
                type: object
                properties:
                  price:
                    type: string
                  block_timestamp:
                    type: string
                    format: date-time
                    title: >-
                      BlockTimestamp tracks the block height associated with
                      this price update.

                      We include block timestamp alongside the price to ensure
                      that smart

                      contracts and applications are not utilizing stale oracle
                      prices
                  block_height:
                    type: string
                    format: uint64
                    title: BlockHeight is height of block mentioned above
              nonce:
                type: string
                format: uint64
                title: >-
                  nonce represents the nonce for the CurrencyPair if it exists
                  in state
              decimals:
                type: string
                format: uint64
                description: >-
                  decimals represents the number of decimals that the
                  quote-price is

                  represented in. It is used to scale the QuotePrice to its
                  proper value.
              id:
                type: string
                format: uint64
                description: ID represents the identifier for the CurrencyPair.
            description: >-
              GetPriceResponse is the response from the GetPrice grpc method
              exposed from

              the x/oracle query service.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: currency_pair
          description: CurrencyPair represents the pair that the user wishes to query.
          in: query
          required: false
          type: string
      tags:
        - Query
  /connect/oracle/v2/get_prices:
    get:
      operationId: GetPrices
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              prices:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      title: >-
                        QuotePrice represents the quote-price for the
                        CurrencyPair given in

                        GetPriceRequest (possibly nil if no update has been
                        made)
                      type: object
                      properties:
                        price:
                          type: string
                        block_timestamp:
                          type: string
                          format: date-time
                          title: >-
                            BlockTimestamp tracks the block height associated
                            with this price update.

                            We include block timestamp alongside the price to
                            ensure that smart

                            contracts and applications are not utilizing stale
                            oracle prices
                        block_height:
                          type: string
                          format: uint64
                          title: BlockHeight is height of block mentioned above
                    nonce:
                      type: string
                      format: uint64
                      title: >-
                        nonce represents the nonce for the CurrencyPair if it
                        exists in state
                    decimals:
                      type: string
                      format: uint64
                      description: >-
                        decimals represents the number of decimals that the
                        quote-price is

                        represented in. It is used to scale the QuotePrice to
                        its proper value.
                    id:
                      type: string
                      format: uint64
                      description: ID represents the identifier for the CurrencyPair.
                  description: >-
                    GetPriceResponse is the response from the GetPrice grpc
                    method exposed from

                    the x/oracle query service.
            description: >-
              GetPricesResponse is the response from the GetPrices grpc method
              exposed from

              the x/oracle query service.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: currency_pair_ids
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
  /connect/marketmap/v2/last_updated:
    get:
      summary: LastUpdated returns the last height the market map was updated at.
      operationId: LastUpdated
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              last_updated:
                type: string
                format: uint64
            description: >-
              LastUpdatedResponse is the response type for the Query/LastUpdated
              RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /connect/marketmap/v2/market:
    get:
      summary: |-
        Market returns a market stored in the x/marketmap
        module.
      operationId: Market
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              market:
                description: >-
                  Market is the configuration of a single market to be
                  price-fetched for.
                type: object
                properties:
                  ticker:
                    description: >-
                      Ticker represents a price feed for a given asset pair i.e.
                      BTC/USD. The

                      price feed is scaled to a number of decimal places and has
                      a minimum number

                      of providers required to consider the ticker valid.
                    type: object
                    properties:
                      currency_pair:
                        description: CurrencyPair is the currency pair for this ticker.
                        type: object
                        properties:
                          Base:
                            type: string
                          Quote:
                            type: string
                        title: >-
                          CurrencyPair is the standard representation of a pair
                          of assets, where one

                          (Base) is priced in terms of the other (Quote)
                      decimals:
                        type: string
                        format: uint64
                        description: >-
                          Decimals is the number of decimal places for the
                          ticker. The number of

                          decimal places is used to convert the price to a
                          human-readable format.
                      min_provider_count:
                        type: string
                        format: uint64
                        description: >-
                          MinProviderCount is the minimum number of providers
                          required to consider

                          the ticker valid.
                      enabled:
                        type: boolean
                        description: >-
                          Enabled is the flag that denotes if the Ticker is
                          enabled for price

                          fetching by an oracle.
                      metadata_JSON:
                        type: string
                        description: >-
                          MetadataJSON is a string of JSON that encodes any
                          extra configuration

                          for the given ticker.
                  provider_configs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: >-
                            Name corresponds to the name of the provider for
                            which the configuration is

                            being set.
                        off_chain_ticker:
                          type: string
                          description: >-
                            OffChainTicker is the off-chain representation of
                            the ticker i.e. BTC/USD.

                            The off-chain ticker is unique to a given provider
                            and is used to fetch the

                            price of the ticker from the provider.
                        normalize_by_pair:
                          description: >-
                            NormalizeByPair is the currency pair for this ticker
                            to be normalized by.

                            For example, if the desired Ticker is BTC/USD, this
                            market could be reached

                            using: OffChainTicker = BTC/USDT NormalizeByPair =
                            USDT/USD This field is

                            optional and nullable.
                          type: object
                          properties:
                            Base:
                              type: string
                            Quote:
                              type: string
                          title: >-
                            CurrencyPair is the standard representation of a
                            pair of assets, where one

                            (Base) is priced in terms of the other (Quote)
                        invert:
                          type: boolean
                          title: >-
                            Invert is a boolean indicating if the BASE and QUOTE
                            of the market should

                            be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                        metadata_JSON:
                          type: string
                          description: >-
                            MetadataJSON is a string of JSON that encodes any
                            extra configuration

                            for the given provider config.
                    description: >-
                      ProviderConfigs is the list of provider-specific configs
                      for this Market.
            description: MarketResponse is the query response for the Market query.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: currency_pair.Base
          in: query
          required: false
          type: string
        - name: currency_pair.Quote
          in: query
          required: false
          type: string
      tags:
        - Query
  /connect/marketmap/v2/marketmap:
    get:
      summary: |-
        MarketMap returns the full market map stored in the x/marketmap
        module.  NOTE: the value returned by this query is not safe for on-chain
        code.
      operationId: MarketMap
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              market_map:
                description: >-
                  MarketMap defines the global set of market configurations for
                  all providers

                  and markets.
                type: object
                properties:
                  markets:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        ticker:
                          description: >-
                            Ticker represents a price feed for a given asset
                            pair i.e. BTC/USD. The

                            price feed is scaled to a number of decimal places
                            and has a minimum number

                            of providers required to consider the ticker valid.
                          type: object
                          properties:
                            currency_pair:
                              description: >-
                                CurrencyPair is the currency pair for this
                                ticker.
                              type: object
                              properties:
                                Base:
                                  type: string
                                Quote:
                                  type: string
                              title: >-
                                CurrencyPair is the standard representation of a
                                pair of assets, where one

                                (Base) is priced in terms of the other (Quote)
                            decimals:
                              type: string
                              format: uint64
                              description: >-
                                Decimals is the number of decimal places for the
                                ticker. The number of

                                decimal places is used to convert the price to a
                                human-readable format.
                            min_provider_count:
                              type: string
                              format: uint64
                              description: >-
                                MinProviderCount is the minimum number of
                                providers required to consider

                                the ticker valid.
                            enabled:
                              type: boolean
                              description: >-
                                Enabled is the flag that denotes if the Ticker
                                is enabled for price

                                fetching by an oracle.
                            metadata_JSON:
                              type: string
                              description: >-
                                MetadataJSON is a string of JSON that encodes
                                any extra configuration

                                for the given ticker.
                        provider_configs:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: >-
                                  Name corresponds to the name of the provider
                                  for which the configuration is

                                  being set.
                              off_chain_ticker:
                                type: string
                                description: >-
                                  OffChainTicker is the off-chain representation
                                  of the ticker i.e. BTC/USD.

                                  The off-chain ticker is unique to a given
                                  provider and is used to fetch the

                                  price of the ticker from the provider.
                              normalize_by_pair:
                                description: >-
                                  NormalizeByPair is the currency pair for this
                                  ticker to be normalized by.

                                  For example, if the desired Ticker is BTC/USD,
                                  this market could be reached

                                  using: OffChainTicker = BTC/USDT
                                  NormalizeByPair = USDT/USD This field is

                                  optional and nullable.
                                type: object
                                properties:
                                  Base:
                                    type: string
                                  Quote:
                                    type: string
                                title: >-
                                  CurrencyPair is the standard representation of
                                  a pair of assets, where one

                                  (Base) is priced in terms of the other (Quote)
                              invert:
                                type: boolean
                                title: >-
                                  Invert is a boolean indicating if the BASE and
                                  QUOTE of the market should

                                  be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                              metadata_JSON:
                                type: string
                                description: >-
                                  MetadataJSON is a string of JSON that encodes
                                  any extra configuration

                                  for the given provider config.
                          description: >-
                            ProviderConfigs is the list of provider-specific
                            configs for this Market.
                      description: >-
                        Market encapsulates a Ticker and its provider-specific
                        configuration.
                    description: >-
                      Markets is the full list of tickers and their associated
                      configurations

                      to be stored on-chain.
              last_updated:
                type: string
                format: uint64
                description: >-
                  LastUpdated is the last block height that the market map was
                  updated.

                  This field can be used as an optimization for clients checking
                  if there

                  is a new update to the map.
              chain_id:
                type: string
                description: ChainId is the chain identifier for the market map.
            description: MarketMapResponse is the query response for the MarketMap query.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /connect/marketmap/v2/markets:
    get:
      summary: |-
        Market returns all stored in the x/marketmap
        module as a sorted list.
      operationId: Markets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              markets:
                type: array
                items:
                  type: object
                  properties:
                    ticker:
                      description: >-
                        Ticker represents a price feed for a given asset pair
                        i.e. BTC/USD. The

                        price feed is scaled to a number of decimal places and
                        has a minimum number

                        of providers required to consider the ticker valid.
                      type: object
                      properties:
                        currency_pair:
                          description: CurrencyPair is the currency pair for this ticker.
                          type: object
                          properties:
                            Base:
                              type: string
                            Quote:
                              type: string
                          title: >-
                            CurrencyPair is the standard representation of a
                            pair of assets, where one

                            (Base) is priced in terms of the other (Quote)
                        decimals:
                          type: string
                          format: uint64
                          description: >-
                            Decimals is the number of decimal places for the
                            ticker. The number of

                            decimal places is used to convert the price to a
                            human-readable format.
                        min_provider_count:
                          type: string
                          format: uint64
                          description: >-
                            MinProviderCount is the minimum number of providers
                            required to consider

                            the ticker valid.
                        enabled:
                          type: boolean
                          description: >-
                            Enabled is the flag that denotes if the Ticker is
                            enabled for price

                            fetching by an oracle.
                        metadata_JSON:
                          type: string
                          description: >-
                            MetadataJSON is a string of JSON that encodes any
                            extra configuration

                            for the given ticker.
                    provider_configs:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: >-
                              Name corresponds to the name of the provider for
                              which the configuration is

                              being set.
                          off_chain_ticker:
                            type: string
                            description: >-
                              OffChainTicker is the off-chain representation of
                              the ticker i.e. BTC/USD.

                              The off-chain ticker is unique to a given provider
                              and is used to fetch the

                              price of the ticker from the provider.
                          normalize_by_pair:
                            description: >-
                              NormalizeByPair is the currency pair for this
                              ticker to be normalized by.

                              For example, if the desired Ticker is BTC/USD,
                              this market could be reached

                              using: OffChainTicker = BTC/USDT NormalizeByPair =
                              USDT/USD This field is

                              optional and nullable.
                            type: object
                            properties:
                              Base:
                                type: string
                              Quote:
                                type: string
                            title: >-
                              CurrencyPair is the standard representation of a
                              pair of assets, where one

                              (Base) is priced in terms of the other (Quote)
                          invert:
                            type: boolean
                            title: >-
                              Invert is a boolean indicating if the BASE and
                              QUOTE of the market should

                              be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                          metadata_JSON:
                            type: string
                            description: >-
                              MetadataJSON is a string of JSON that encodes any
                              extra configuration

                              for the given provider config.
                      description: >-
                        ProviderConfigs is the list of provider-specific configs
                        for this Market.
                  description: >-
                    Market encapsulates a Ticker and its provider-specific
                    configuration.
                description: Markets is a sorted list of all markets in the module.
            description: MarketsResponse is the query response for the Markets query.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /connect/marketmap/v2/params:
    get:
      summary: Params returns the current x/marketmap module parameters.
      operationId: MarketMapParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  market_authorities:
                    type: array
                    items:
                      type: string
                    description: >-
                      MarketAuthorities is the list of authority accounts that
                      are able to

                      control updating the marketmap.
                  admin:
                    type: string
                    description: >-
                      Admin is an address that can remove addresses from the
                      MarketAuthorities

                      list. Only governance can add to the MarketAuthorities or
                      change the Admin.
                description: Params defines the parameters for the x/marketmap module.
            description: >-
              ParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
definitions:
  connect.oracle.v2.CurrencyPairMapping:
    type: object
    properties:
      id:
        type: string
        format: uint64
        description: ID is the unique identifier for this currency pair string.
      currency_pair:
        type: object
        properties:
          Base:
            type: string
          Quote:
            type: string
        title: >-
          CurrencyPair is the standard representation of a pair of assets, where
          one

          (Base) is priced in terms of the other (Quote)
        description: >-
          CurrencyPair is the human-readable representation of the currency
          pair.
  connect.oracle.v2.GetAllCurrencyPairsResponse:
    type: object
    properties:
      currency_pairs:
        type: array
        items:
          type: object
          properties:
            Base:
              type: string
            Quote:
              type: string
          title: >-
            CurrencyPair is the standard representation of a pair of assets,
            where one

            (Base) is priced in terms of the other (Quote)
    description: |-
      GetAllCurrencyPairsResponse returns all CurrencyPairs that the module is
      currently tracking.
  connect.oracle.v2.GetCurrencyPairMappingListResponse:
    type: object
    properties:
      mappings:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
              description: ID is the unique identifier for this currency pair string.
            currency_pair:
              type: object
              properties:
                Base:
                  type: string
                Quote:
                  type: string
              title: >-
                CurrencyPair is the standard representation of a pair of assets,
                where one

                (Base) is priced in terms of the other (Quote)
              description: >-
                CurrencyPair is the human-readable representation of the
                currency pair.
        description: |-
          mappings is a list of the id representing the currency pair
          to the currency pair itself.
    description: >-
      GetCurrencyPairMappingResponse is the GetCurrencyPairMapping response
      type.
  connect.oracle.v2.GetCurrencyPairMappingResponse:
    type: object
    properties:
      currency_pair_mapping:
        type: object
        additionalProperties:
          type: object
          properties:
            Base:
              type: string
            Quote:
              type: string
          title: >-
            CurrencyPair is the standard representation of a pair of assets,
            where one

            (Base) is priced in terms of the other (Quote)
        description: >-
          currency_pair_mapping is a mapping of the id representing the currency
          pair

          to the currency pair itself.
    description: >-
      GetCurrencyPairMappingResponse is the GetCurrencyPairMapping response
      type.
  connect.oracle.v2.GetPriceResponse:
    type: object
    properties:
      price:
        title: |-
          QuotePrice represents the quote-price for the CurrencyPair given in
          GetPriceRequest (possibly nil if no update has been made)
        type: object
        properties:
          price:
            type: string
          block_timestamp:
            type: string
            format: date-time
            title: >-
              BlockTimestamp tracks the block height associated with this price
              update.

              We include block timestamp alongside the price to ensure that
              smart

              contracts and applications are not utilizing stale oracle prices
          block_height:
            type: string
            format: uint64
            title: BlockHeight is height of block mentioned above
      nonce:
        type: string
        format: uint64
        title: nonce represents the nonce for the CurrencyPair if it exists in state
      decimals:
        type: string
        format: uint64
        description: >-
          decimals represents the number of decimals that the quote-price is

          represented in. It is used to scale the QuotePrice to its proper
          value.
      id:
        type: string
        format: uint64
        description: ID represents the identifier for the CurrencyPair.
    description: >-
      GetPriceResponse is the response from the GetPrice grpc method exposed
      from

      the x/oracle query service.
  connect.oracle.v2.GetPricesResponse:
    type: object
    properties:
      prices:
        type: array
        items:
          type: object
          properties:
            price:
              title: >-
                QuotePrice represents the quote-price for the CurrencyPair given
                in

                GetPriceRequest (possibly nil if no update has been made)
              type: object
              properties:
                price:
                  type: string
                block_timestamp:
                  type: string
                  format: date-time
                  title: >-
                    BlockTimestamp tracks the block height associated with this
                    price update.

                    We include block timestamp alongside the price to ensure
                    that smart

                    contracts and applications are not utilizing stale oracle
                    prices
                block_height:
                  type: string
                  format: uint64
                  title: BlockHeight is height of block mentioned above
            nonce:
              type: string
              format: uint64
              title: >-
                nonce represents the nonce for the CurrencyPair if it exists in
                state
            decimals:
              type: string
              format: uint64
              description: >-
                decimals represents the number of decimals that the quote-price
                is

                represented in. It is used to scale the QuotePrice to its proper
                value.
            id:
              type: string
              format: uint64
              description: ID represents the identifier for the CurrencyPair.
          description: >-
            GetPriceResponse is the response from the GetPrice grpc method
            exposed from

            the x/oracle query service.
    description: >-
      GetPricesResponse is the response from the GetPrices grpc method exposed
      from

      the x/oracle query service.
  connect.oracle.v2.QuotePrice:
    type: object
    properties:
      price:
        type: string
      block_timestamp:
        type: string
        format: date-time
        title: >-
          BlockTimestamp tracks the block height associated with this price
          update.

          We include block timestamp alongside the price to ensure that smart

          contracts and applications are not utilizing stale oracle prices
      block_height:
        type: string
        format: uint64
        title: BlockHeight is height of block mentioned above
    title: >-
      QuotePrice is the representation of the aggregated prices for a
      CurrencyPair,

      where price represents the price of Base in terms of Quote
  connect.types.v2.CurrencyPair:
    type: object
    properties:
      Base:
        type: string
      Quote:
        type: string
    title: |-
      CurrencyPair is the standard representation of a pair of assets, where one
      (Base) is priced in terms of the other (Quote)
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
  connect.marketmap.v2.LastUpdatedResponse:
    type: object
    properties:
      last_updated:
        type: string
        format: uint64
    description: |-
      LastUpdatedResponse is the response type for the Query/LastUpdated RPC
      method.
  connect.marketmap.v2.Market:
    type: object
    properties:
      ticker:
        description: >-
          Ticker represents a price feed for a given asset pair i.e. BTC/USD.
          The

          price feed is scaled to a number of decimal places and has a minimum
          number

          of providers required to consider the ticker valid.
        type: object
        properties:
          currency_pair:
            description: CurrencyPair is the currency pair for this ticker.
            type: object
            properties:
              Base:
                type: string
              Quote:
                type: string
            title: >-
              CurrencyPair is the standard representation of a pair of assets,
              where one

              (Base) is priced in terms of the other (Quote)
          decimals:
            type: string
            format: uint64
            description: >-
              Decimals is the number of decimal places for the ticker. The
              number of

              decimal places is used to convert the price to a human-readable
              format.
          min_provider_count:
            type: string
            format: uint64
            description: >-
              MinProviderCount is the minimum number of providers required to
              consider

              the ticker valid.
          enabled:
            type: boolean
            description: >-
              Enabled is the flag that denotes if the Ticker is enabled for
              price

              fetching by an oracle.
          metadata_JSON:
            type: string
            description: >-
              MetadataJSON is a string of JSON that encodes any extra
              configuration

              for the given ticker.
      provider_configs:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: >-
                Name corresponds to the name of the provider for which the
                configuration is

                being set.
            off_chain_ticker:
              type: string
              description: >-
                OffChainTicker is the off-chain representation of the ticker
                i.e. BTC/USD.

                The off-chain ticker is unique to a given provider and is used
                to fetch the

                price of the ticker from the provider.
            normalize_by_pair:
              description: >-
                NormalizeByPair is the currency pair for this ticker to be
                normalized by.

                For example, if the desired Ticker is BTC/USD, this market could
                be reached

                using: OffChainTicker = BTC/USDT NormalizeByPair = USDT/USD This
                field is

                optional and nullable.
              type: object
              properties:
                Base:
                  type: string
                Quote:
                  type: string
              title: >-
                CurrencyPair is the standard representation of a pair of assets,
                where one

                (Base) is priced in terms of the other (Quote)
            invert:
              type: boolean
              title: >-
                Invert is a boolean indicating if the BASE and QUOTE of the
                market should

                be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
            metadata_JSON:
              type: string
              description: >-
                MetadataJSON is a string of JSON that encodes any extra
                configuration

                for the given provider config.
        description: >-
          ProviderConfigs is the list of provider-specific configs for this
          Market.
    description: Market encapsulates a Ticker and its provider-specific configuration.
  connect.marketmap.v2.MarketMap:
    type: object
    properties:
      markets:
        type: object
        additionalProperties:
          type: object
          properties:
            ticker:
              description: >-
                Ticker represents a price feed for a given asset pair i.e.
                BTC/USD. The

                price feed is scaled to a number of decimal places and has a
                minimum number

                of providers required to consider the ticker valid.
              type: object
              properties:
                currency_pair:
                  description: CurrencyPair is the currency pair for this ticker.
                  type: object
                  properties:
                    Base:
                      type: string
                    Quote:
                      type: string
                  title: >-
                    CurrencyPair is the standard representation of a pair of
                    assets, where one

                    (Base) is priced in terms of the other (Quote)
                decimals:
                  type: string
                  format: uint64
                  description: >-
                    Decimals is the number of decimal places for the ticker. The
                    number of

                    decimal places is used to convert the price to a
                    human-readable format.
                min_provider_count:
                  type: string
                  format: uint64
                  description: >-
                    MinProviderCount is the minimum number of providers required
                    to consider

                    the ticker valid.
                enabled:
                  type: boolean
                  description: >-
                    Enabled is the flag that denotes if the Ticker is enabled
                    for price

                    fetching by an oracle.
                metadata_JSON:
                  type: string
                  description: >-
                    MetadataJSON is a string of JSON that encodes any extra
                    configuration

                    for the given ticker.
            provider_configs:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      Name corresponds to the name of the provider for which the
                      configuration is

                      being set.
                  off_chain_ticker:
                    type: string
                    description: >-
                      OffChainTicker is the off-chain representation of the
                      ticker i.e. BTC/USD.

                      The off-chain ticker is unique to a given provider and is
                      used to fetch the

                      price of the ticker from the provider.
                  normalize_by_pair:
                    description: >-
                      NormalizeByPair is the currency pair for this ticker to be
                      normalized by.

                      For example, if the desired Ticker is BTC/USD, this market
                      could be reached

                      using: OffChainTicker = BTC/USDT NormalizeByPair =
                      USDT/USD This field is

                      optional and nullable.
                    type: object
                    properties:
                      Base:
                        type: string
                      Quote:
                        type: string
                    title: >-
                      CurrencyPair is the standard representation of a pair of
                      assets, where one

                      (Base) is priced in terms of the other (Quote)
                  invert:
                    type: boolean
                    title: >-
                      Invert is a boolean indicating if the BASE and QUOTE of
                      the market should

                      be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                  metadata_JSON:
                    type: string
                    description: >-
                      MetadataJSON is a string of JSON that encodes any extra
                      configuration

                      for the given provider config.
              description: >-
                ProviderConfigs is the list of provider-specific configs for
                this Market.
          description: >-
            Market encapsulates a Ticker and its provider-specific
            configuration.
        description: >-
          Markets is the full list of tickers and their associated
          configurations

          to be stored on-chain.
    description: MarketMap maps ticker strings to their Markets.
  connect.marketmap.v2.MarketMapResponse:
    type: object
    properties:
      market_map:
        description: >-
          MarketMap defines the global set of market configurations for all
          providers

          and markets.
        type: object
        properties:
          markets:
            type: object
            additionalProperties:
              type: object
              properties:
                ticker:
                  description: >-
                    Ticker represents a price feed for a given asset pair i.e.
                    BTC/USD. The

                    price feed is scaled to a number of decimal places and has a
                    minimum number

                    of providers required to consider the ticker valid.
                  type: object
                  properties:
                    currency_pair:
                      description: CurrencyPair is the currency pair for this ticker.
                      type: object
                      properties:
                        Base:
                          type: string
                        Quote:
                          type: string
                      title: >-
                        CurrencyPair is the standard representation of a pair of
                        assets, where one

                        (Base) is priced in terms of the other (Quote)
                    decimals:
                      type: string
                      format: uint64
                      description: >-
                        Decimals is the number of decimal places for the ticker.
                        The number of

                        decimal places is used to convert the price to a
                        human-readable format.
                    min_provider_count:
                      type: string
                      format: uint64
                      description: >-
                        MinProviderCount is the minimum number of providers
                        required to consider

                        the ticker valid.
                    enabled:
                      type: boolean
                      description: >-
                        Enabled is the flag that denotes if the Ticker is
                        enabled for price

                        fetching by an oracle.
                    metadata_JSON:
                      type: string
                      description: >-
                        MetadataJSON is a string of JSON that encodes any extra
                        configuration

                        for the given ticker.
                provider_configs:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          Name corresponds to the name of the provider for which
                          the configuration is

                          being set.
                      off_chain_ticker:
                        type: string
                        description: >-
                          OffChainTicker is the off-chain representation of the
                          ticker i.e. BTC/USD.

                          The off-chain ticker is unique to a given provider and
                          is used to fetch the

                          price of the ticker from the provider.
                      normalize_by_pair:
                        description: >-
                          NormalizeByPair is the currency pair for this ticker
                          to be normalized by.

                          For example, if the desired Ticker is BTC/USD, this
                          market could be reached

                          using: OffChainTicker = BTC/USDT NormalizeByPair =
                          USDT/USD This field is

                          optional and nullable.
                        type: object
                        properties:
                          Base:
                            type: string
                          Quote:
                            type: string
                        title: >-
                          CurrencyPair is the standard representation of a pair
                          of assets, where one

                          (Base) is priced in terms of the other (Quote)
                      invert:
                        type: boolean
                        title: >-
                          Invert is a boolean indicating if the BASE and QUOTE
                          of the market should

                          be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                      metadata_JSON:
                        type: string
                        description: >-
                          MetadataJSON is a string of JSON that encodes any
                          extra configuration

                          for the given provider config.
                  description: >-
                    ProviderConfigs is the list of provider-specific configs for
                    this Market.
              description: >-
                Market encapsulates a Ticker and its provider-specific
                configuration.
            description: >-
              Markets is the full list of tickers and their associated
              configurations

              to be stored on-chain.
      last_updated:
        type: string
        format: uint64
        description: >-
          LastUpdated is the last block height that the market map was updated.

          This field can be used as an optimization for clients checking if
          there

          is a new update to the map.
      chain_id:
        type: string
        description: ChainId is the chain identifier for the market map.
    description: MarketMapResponse is the query response for the MarketMap query.
  connect.marketmap.v2.MarketResponse:
    type: object
    properties:
      market:
        description: >-
          Market is the configuration of a single market to be price-fetched
          for.
        type: object
        properties:
          ticker:
            description: >-
              Ticker represents a price feed for a given asset pair i.e.
              BTC/USD. The

              price feed is scaled to a number of decimal places and has a
              minimum number

              of providers required to consider the ticker valid.
            type: object
            properties:
              currency_pair:
                description: CurrencyPair is the currency pair for this ticker.
                type: object
                properties:
                  Base:
                    type: string
                  Quote:
                    type: string
                title: >-
                  CurrencyPair is the standard representation of a pair of
                  assets, where one

                  (Base) is priced in terms of the other (Quote)
              decimals:
                type: string
                format: uint64
                description: >-
                  Decimals is the number of decimal places for the ticker. The
                  number of

                  decimal places is used to convert the price to a
                  human-readable format.
              min_provider_count:
                type: string
                format: uint64
                description: >-
                  MinProviderCount is the minimum number of providers required
                  to consider

                  the ticker valid.
              enabled:
                type: boolean
                description: >-
                  Enabled is the flag that denotes if the Ticker is enabled for
                  price

                  fetching by an oracle.
              metadata_JSON:
                type: string
                description: >-
                  MetadataJSON is a string of JSON that encodes any extra
                  configuration

                  for the given ticker.
          provider_configs:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    Name corresponds to the name of the provider for which the
                    configuration is

                    being set.
                off_chain_ticker:
                  type: string
                  description: >-
                    OffChainTicker is the off-chain representation of the ticker
                    i.e. BTC/USD.

                    The off-chain ticker is unique to a given provider and is
                    used to fetch the

                    price of the ticker from the provider.
                normalize_by_pair:
                  description: >-
                    NormalizeByPair is the currency pair for this ticker to be
                    normalized by.

                    For example, if the desired Ticker is BTC/USD, this market
                    could be reached

                    using: OffChainTicker = BTC/USDT NormalizeByPair = USDT/USD
                    This field is

                    optional and nullable.
                  type: object
                  properties:
                    Base:
                      type: string
                    Quote:
                      type: string
                  title: >-
                    CurrencyPair is the standard representation of a pair of
                    assets, where one

                    (Base) is priced in terms of the other (Quote)
                invert:
                  type: boolean
                  title: >-
                    Invert is a boolean indicating if the BASE and QUOTE of the
                    market should

                    be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                metadata_JSON:
                  type: string
                  description: >-
                    MetadataJSON is a string of JSON that encodes any extra
                    configuration

                    for the given provider config.
            description: >-
              ProviderConfigs is the list of provider-specific configs for this
              Market.
    description: MarketResponse is the query response for the Market query.
  connect.marketmap.v2.MarketsResponse:
    type: object
    properties:
      markets:
        type: array
        items:
          type: object
          properties:
            ticker:
              description: >-
                Ticker represents a price feed for a given asset pair i.e.
                BTC/USD. The

                price feed is scaled to a number of decimal places and has a
                minimum number

                of providers required to consider the ticker valid.
              type: object
              properties:
                currency_pair:
                  description: CurrencyPair is the currency pair for this ticker.
                  type: object
                  properties:
                    Base:
                      type: string
                    Quote:
                      type: string
                  title: >-
                    CurrencyPair is the standard representation of a pair of
                    assets, where one

                    (Base) is priced in terms of the other (Quote)
                decimals:
                  type: string
                  format: uint64
                  description: >-
                    Decimals is the number of decimal places for the ticker. The
                    number of

                    decimal places is used to convert the price to a
                    human-readable format.
                min_provider_count:
                  type: string
                  format: uint64
                  description: >-
                    MinProviderCount is the minimum number of providers required
                    to consider

                    the ticker valid.
                enabled:
                  type: boolean
                  description: >-
                    Enabled is the flag that denotes if the Ticker is enabled
                    for price

                    fetching by an oracle.
                metadata_JSON:
                  type: string
                  description: >-
                    MetadataJSON is a string of JSON that encodes any extra
                    configuration

                    for the given ticker.
            provider_configs:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      Name corresponds to the name of the provider for which the
                      configuration is

                      being set.
                  off_chain_ticker:
                    type: string
                    description: >-
                      OffChainTicker is the off-chain representation of the
                      ticker i.e. BTC/USD.

                      The off-chain ticker is unique to a given provider and is
                      used to fetch the

                      price of the ticker from the provider.
                  normalize_by_pair:
                    description: >-
                      NormalizeByPair is the currency pair for this ticker to be
                      normalized by.

                      For example, if the desired Ticker is BTC/USD, this market
                      could be reached

                      using: OffChainTicker = BTC/USDT NormalizeByPair =
                      USDT/USD This field is

                      optional and nullable.
                    type: object
                    properties:
                      Base:
                        type: string
                      Quote:
                        type: string
                    title: >-
                      CurrencyPair is the standard representation of a pair of
                      assets, where one

                      (Base) is priced in terms of the other (Quote)
                  invert:
                    type: boolean
                    title: >-
                      Invert is a boolean indicating if the BASE and QUOTE of
                      the market should

                      be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                  metadata_JSON:
                    type: string
                    description: >-
                      MetadataJSON is a string of JSON that encodes any extra
                      configuration

                      for the given provider config.
              description: >-
                ProviderConfigs is the list of provider-specific configs for
                this Market.
          description: >-
            Market encapsulates a Ticker and its provider-specific
            configuration.
        description: Markets is a sorted list of all markets in the module.
    description: MarketsResponse is the query response for the Markets query.
  connect.marketmap.v2.Params:
    type: object
    properties:
      market_authorities:
        type: array
        items:
          type: string
        description: |-
          MarketAuthorities is the list of authority accounts that are able to
          control updating the marketmap.
      admin:
        type: string
        description: >-
          Admin is an address that can remove addresses from the
          MarketAuthorities

          list. Only governance can add to the MarketAuthorities or change the
          Admin.
    description: Params defines the parameters for the x/marketmap module.
  connect.marketmap.v2.ParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          market_authorities:
            type: array
            items:
              type: string
            description: >-
              MarketAuthorities is the list of authority accounts that are able
              to

              control updating the marketmap.
          admin:
            type: string
            description: >-
              Admin is an address that can remove addresses from the
              MarketAuthorities

              list. Only governance can add to the MarketAuthorities or change
              the Admin.
        description: Params defines the parameters for the x/marketmap module.
    description: ParamsResponse is the response type for the Query/Params RPC method.
  connect.marketmap.v2.ProviderConfig:
    type: object
    properties:
      name:
        type: string
        description: >-
          Name corresponds to the name of the provider for which the
          configuration is

          being set.
      off_chain_ticker:
        type: string
        description: >-
          OffChainTicker is the off-chain representation of the ticker i.e.
          BTC/USD.

          The off-chain ticker is unique to a given provider and is used to
          fetch the

          price of the ticker from the provider.
      normalize_by_pair:
        description: >-
          NormalizeByPair is the currency pair for this ticker to be normalized
          by.

          For example, if the desired Ticker is BTC/USD, this market could be
          reached

          using: OffChainTicker = BTC/USDT NormalizeByPair = USDT/USD This field
          is

          optional and nullable.
        type: object
        properties:
          Base:
            type: string
          Quote:
            type: string
        title: >-
          CurrencyPair is the standard representation of a pair of assets, where
          one

          (Base) is priced in terms of the other (Quote)
      invert:
        type: boolean
        title: >-
          Invert is a boolean indicating if the BASE and QUOTE of the market
          should

          be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
      metadata_JSON:
        type: string
        description: |-
          MetadataJSON is a string of JSON that encodes any extra configuration
          for the given provider config.
  connect.marketmap.v2.Ticker:
    type: object
    properties:
      currency_pair:
        description: CurrencyPair is the currency pair for this ticker.
        type: object
        properties:
          Base:
            type: string
          Quote:
            type: string
        title: >-
          CurrencyPair is the standard representation of a pair of assets, where
          one

          (Base) is priced in terms of the other (Quote)
      decimals:
        type: string
        format: uint64
        description: >-
          Decimals is the number of decimal places for the ticker. The number of

          decimal places is used to convert the price to a human-readable
          format.
      min_provider_count:
        type: string
        format: uint64
        description: >-
          MinProviderCount is the minimum number of providers required to
          consider

          the ticker valid.
      enabled:
        type: boolean
        description: |-
          Enabled is the flag that denotes if the Ticker is enabled for price
          fetching by an oracle.
      metadata_JSON:
        type: string
        description: |-
          MetadataJSON is a string of JSON that encodes any extra configuration
          for the given ticker.
    description: >-
      Ticker represents a price feed for a given asset pair i.e. BTC/USD. The
      price

      feed is scaled to a number of decimal places and has a minimum number of

      providers required to consider the ticker valid.
