// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package channelv1

import (
	_ "cosmossdk.io/api/cosmos/msg/v1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	v1 "github.com/initia-labs/initia/api/ibc/core/client/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgChannelOpenInit         protoreflect.MessageDescriptor
	fd_MsgChannelOpenInit_port_id protoreflect.FieldDescriptor
	fd_MsgChannelOpenInit_channel protoreflect.FieldDescriptor
	fd_MsgChannelOpenInit_signer  protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelOpenInit = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelOpenInit")
	fd_MsgChannelOpenInit_port_id = md_MsgChannelOpenInit.Fields().ByName("port_id")
	fd_MsgChannelOpenInit_channel = md_MsgChannelOpenInit.Fields().ByName("channel")
	fd_MsgChannelOpenInit_signer = md_MsgChannelOpenInit.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelOpenInit)(nil)

type fastReflection_MsgChannelOpenInit MsgChannelOpenInit

func (x *MsgChannelOpenInit) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenInit)(x)
}

func (x *MsgChannelOpenInit) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelOpenInit_messageType fastReflection_MsgChannelOpenInit_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelOpenInit_messageType{}

type fastReflection_MsgChannelOpenInit_messageType struct{}

func (x fastReflection_MsgChannelOpenInit_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenInit)(nil)
}
func (x fastReflection_MsgChannelOpenInit_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenInit)
}
func (x fastReflection_MsgChannelOpenInit_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenInit
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelOpenInit) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenInit
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelOpenInit) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelOpenInit_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelOpenInit) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenInit)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelOpenInit) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelOpenInit)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelOpenInit) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelOpenInit_port_id, value) {
			return
		}
	}
	if x.Channel != nil {
		value := protoreflect.ValueOfMessage(x.Channel.ProtoReflect())
		if !f(fd_MsgChannelOpenInit_channel, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelOpenInit_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelOpenInit) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInit.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelOpenInit.channel":
		return x.Channel != nil
	case "ibc.core.channel.v1.MsgChannelOpenInit.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInit does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenInit) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInit.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelOpenInit.channel":
		x.Channel = nil
	case "ibc.core.channel.v1.MsgChannelOpenInit.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInit does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelOpenInit) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInit.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenInit.channel":
		value := x.Channel
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenInit.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInit does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenInit) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInit.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenInit.channel":
		x.Channel = value.Message().Interface().(*Channel)
	case "ibc.core.channel.v1.MsgChannelOpenInit.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInit does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenInit) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInit.channel":
		if x.Channel == nil {
			x.Channel = new(Channel)
		}
		return protoreflect.ValueOfMessage(x.Channel.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenInit.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelOpenInit is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenInit.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelOpenInit is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInit does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelOpenInit) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInit.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenInit.channel":
		m := new(Channel)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenInit.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInit does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelOpenInit) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelOpenInit", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelOpenInit) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenInit) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelOpenInit) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelOpenInit) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelOpenInit)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Channel != nil {
			l = options.Size(x.Channel)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenInit)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Channel != nil {
			encoded, err := options.Marshal(x.Channel)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenInit)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenInit: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenInit: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Channel == nil {
					x.Channel = &Channel{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Channel); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelOpenInitResponse            protoreflect.MessageDescriptor
	fd_MsgChannelOpenInitResponse_channel_id protoreflect.FieldDescriptor
	fd_MsgChannelOpenInitResponse_version    protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelOpenInitResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelOpenInitResponse")
	fd_MsgChannelOpenInitResponse_channel_id = md_MsgChannelOpenInitResponse.Fields().ByName("channel_id")
	fd_MsgChannelOpenInitResponse_version = md_MsgChannelOpenInitResponse.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelOpenInitResponse)(nil)

type fastReflection_MsgChannelOpenInitResponse MsgChannelOpenInitResponse

func (x *MsgChannelOpenInitResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenInitResponse)(x)
}

func (x *MsgChannelOpenInitResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelOpenInitResponse_messageType fastReflection_MsgChannelOpenInitResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelOpenInitResponse_messageType{}

type fastReflection_MsgChannelOpenInitResponse_messageType struct{}

func (x fastReflection_MsgChannelOpenInitResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenInitResponse)(nil)
}
func (x fastReflection_MsgChannelOpenInitResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenInitResponse)
}
func (x fastReflection_MsgChannelOpenInitResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenInitResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelOpenInitResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenInitResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelOpenInitResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelOpenInitResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelOpenInitResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenInitResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelOpenInitResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelOpenInitResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelOpenInitResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelOpenInitResponse_channel_id, value) {
			return
		}
	}
	if x.Version != "" {
		value := protoreflect.ValueOfString(x.Version)
		if !f(fd_MsgChannelOpenInitResponse_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelOpenInitResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.version":
		return x.Version != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInitResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenInitResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.version":
		x.Version = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInitResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelOpenInitResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.version":
		value := x.Version
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInitResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenInitResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.version":
		x.Version = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInitResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenInitResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelOpenInitResponse is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.version":
		panic(fmt.Errorf("field version of message ibc.core.channel.v1.MsgChannelOpenInitResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInitResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelOpenInitResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenInitResponse.version":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenInitResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelOpenInitResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelOpenInitResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelOpenInitResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenInitResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelOpenInitResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelOpenInitResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelOpenInitResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Version)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenInitResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Version) > 0 {
			i -= len(x.Version)
			copy(dAtA[i:], x.Version)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Version)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenInitResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenInitResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenInitResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Version = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelOpenTry                      protoreflect.MessageDescriptor
	fd_MsgChannelOpenTry_port_id              protoreflect.FieldDescriptor
	fd_MsgChannelOpenTry_previous_channel_id  protoreflect.FieldDescriptor
	fd_MsgChannelOpenTry_channel              protoreflect.FieldDescriptor
	fd_MsgChannelOpenTry_counterparty_version protoreflect.FieldDescriptor
	fd_MsgChannelOpenTry_proof_init           protoreflect.FieldDescriptor
	fd_MsgChannelOpenTry_proof_height         protoreflect.FieldDescriptor
	fd_MsgChannelOpenTry_signer               protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelOpenTry = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelOpenTry")
	fd_MsgChannelOpenTry_port_id = md_MsgChannelOpenTry.Fields().ByName("port_id")
	fd_MsgChannelOpenTry_previous_channel_id = md_MsgChannelOpenTry.Fields().ByName("previous_channel_id")
	fd_MsgChannelOpenTry_channel = md_MsgChannelOpenTry.Fields().ByName("channel")
	fd_MsgChannelOpenTry_counterparty_version = md_MsgChannelOpenTry.Fields().ByName("counterparty_version")
	fd_MsgChannelOpenTry_proof_init = md_MsgChannelOpenTry.Fields().ByName("proof_init")
	fd_MsgChannelOpenTry_proof_height = md_MsgChannelOpenTry.Fields().ByName("proof_height")
	fd_MsgChannelOpenTry_signer = md_MsgChannelOpenTry.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelOpenTry)(nil)

type fastReflection_MsgChannelOpenTry MsgChannelOpenTry

func (x *MsgChannelOpenTry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenTry)(x)
}

func (x *MsgChannelOpenTry) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelOpenTry_messageType fastReflection_MsgChannelOpenTry_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelOpenTry_messageType{}

type fastReflection_MsgChannelOpenTry_messageType struct{}

func (x fastReflection_MsgChannelOpenTry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenTry)(nil)
}
func (x fastReflection_MsgChannelOpenTry_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenTry)
}
func (x fastReflection_MsgChannelOpenTry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenTry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelOpenTry) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenTry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelOpenTry) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelOpenTry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelOpenTry) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenTry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelOpenTry) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelOpenTry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelOpenTry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelOpenTry_port_id, value) {
			return
		}
	}
	if x.PreviousChannelId != "" {
		value := protoreflect.ValueOfString(x.PreviousChannelId)
		if !f(fd_MsgChannelOpenTry_previous_channel_id, value) {
			return
		}
	}
	if x.Channel != nil {
		value := protoreflect.ValueOfMessage(x.Channel.ProtoReflect())
		if !f(fd_MsgChannelOpenTry_channel, value) {
			return
		}
	}
	if x.CounterpartyVersion != "" {
		value := protoreflect.ValueOfString(x.CounterpartyVersion)
		if !f(fd_MsgChannelOpenTry_counterparty_version, value) {
			return
		}
	}
	if len(x.ProofInit) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofInit)
		if !f(fd_MsgChannelOpenTry_proof_init, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgChannelOpenTry_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelOpenTry_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelOpenTry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTry.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelOpenTry.previous_channel_id":
		return x.PreviousChannelId != ""
	case "ibc.core.channel.v1.MsgChannelOpenTry.channel":
		return x.Channel != nil
	case "ibc.core.channel.v1.MsgChannelOpenTry.counterparty_version":
		return x.CounterpartyVersion != ""
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_init":
		return len(x.ProofInit) != 0
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgChannelOpenTry.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenTry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTry.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelOpenTry.previous_channel_id":
		x.PreviousChannelId = ""
	case "ibc.core.channel.v1.MsgChannelOpenTry.channel":
		x.Channel = nil
	case "ibc.core.channel.v1.MsgChannelOpenTry.counterparty_version":
		x.CounterpartyVersion = ""
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_init":
		x.ProofInit = nil
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgChannelOpenTry.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelOpenTry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTry.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenTry.previous_channel_id":
		value := x.PreviousChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenTry.channel":
		value := x.Channel
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenTry.counterparty_version":
		value := x.CounterpartyVersion
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_init":
		value := x.ProofInit
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenTry.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenTry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTry.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenTry.previous_channel_id":
		x.PreviousChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenTry.channel":
		x.Channel = value.Message().Interface().(*Channel)
	case "ibc.core.channel.v1.MsgChannelOpenTry.counterparty_version":
		x.CounterpartyVersion = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_init":
		x.ProofInit = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgChannelOpenTry.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenTry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTry.channel":
		if x.Channel == nil {
			x.Channel = new(Channel)
		}
		return protoreflect.ValueOfMessage(x.Channel.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenTry.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelOpenTry is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenTry.previous_channel_id":
		panic(fmt.Errorf("field previous_channel_id of message ibc.core.channel.v1.MsgChannelOpenTry is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenTry.counterparty_version":
		panic(fmt.Errorf("field counterparty_version of message ibc.core.channel.v1.MsgChannelOpenTry is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_init":
		panic(fmt.Errorf("field proof_init of message ibc.core.channel.v1.MsgChannelOpenTry is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenTry.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelOpenTry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelOpenTry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTry.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenTry.previous_channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenTry.channel":
		m := new(Channel)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenTry.counterparty_version":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_init":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelOpenTry.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenTry.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelOpenTry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelOpenTry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelOpenTry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenTry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelOpenTry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelOpenTry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelOpenTry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PreviousChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Channel != nil {
			l = options.Size(x.Channel)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CounterpartyVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofInit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenTry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x3a
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ProofInit) > 0 {
			i -= len(x.ProofInit)
			copy(dAtA[i:], x.ProofInit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofInit)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.CounterpartyVersion) > 0 {
			i -= len(x.CounterpartyVersion)
			copy(dAtA[i:], x.CounterpartyVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CounterpartyVersion)))
			i--
			dAtA[i] = 0x22
		}
		if x.Channel != nil {
			encoded, err := options.Marshal(x.Channel)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.PreviousChannelId) > 0 {
			i -= len(x.PreviousChannelId)
			copy(dAtA[i:], x.PreviousChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PreviousChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenTry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenTry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenTry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Channel == nil {
					x.Channel = &Channel{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Channel); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CounterpartyVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofInit", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofInit = append(x.ProofInit[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofInit == nil {
					x.ProofInit = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelOpenTryResponse            protoreflect.MessageDescriptor
	fd_MsgChannelOpenTryResponse_version    protoreflect.FieldDescriptor
	fd_MsgChannelOpenTryResponse_channel_id protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelOpenTryResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelOpenTryResponse")
	fd_MsgChannelOpenTryResponse_version = md_MsgChannelOpenTryResponse.Fields().ByName("version")
	fd_MsgChannelOpenTryResponse_channel_id = md_MsgChannelOpenTryResponse.Fields().ByName("channel_id")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelOpenTryResponse)(nil)

type fastReflection_MsgChannelOpenTryResponse MsgChannelOpenTryResponse

func (x *MsgChannelOpenTryResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenTryResponse)(x)
}

func (x *MsgChannelOpenTryResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelOpenTryResponse_messageType fastReflection_MsgChannelOpenTryResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelOpenTryResponse_messageType{}

type fastReflection_MsgChannelOpenTryResponse_messageType struct{}

func (x fastReflection_MsgChannelOpenTryResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenTryResponse)(nil)
}
func (x fastReflection_MsgChannelOpenTryResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenTryResponse)
}
func (x fastReflection_MsgChannelOpenTryResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenTryResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelOpenTryResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenTryResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelOpenTryResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelOpenTryResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelOpenTryResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenTryResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelOpenTryResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelOpenTryResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelOpenTryResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Version != "" {
		value := protoreflect.ValueOfString(x.Version)
		if !f(fd_MsgChannelOpenTryResponse_version, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelOpenTryResponse_channel_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelOpenTryResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.version":
		return x.Version != ""
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.channel_id":
		return x.ChannelId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTryResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenTryResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.version":
		x.Version = ""
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.channel_id":
		x.ChannelId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTryResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelOpenTryResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.version":
		value := x.Version
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTryResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenTryResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.version":
		x.Version = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.channel_id":
		x.ChannelId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTryResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenTryResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.version":
		panic(fmt.Errorf("field version of message ibc.core.channel.v1.MsgChannelOpenTryResponse is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelOpenTryResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTryResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelOpenTryResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.version":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenTryResponse.channel_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenTryResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelOpenTryResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelOpenTryResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelOpenTryResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenTryResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelOpenTryResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelOpenTryResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelOpenTryResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Version)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenTryResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Version) > 0 {
			i -= len(x.Version)
			copy(dAtA[i:], x.Version)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Version)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenTryResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenTryResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenTryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Version = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelOpenAck                         protoreflect.MessageDescriptor
	fd_MsgChannelOpenAck_port_id                 protoreflect.FieldDescriptor
	fd_MsgChannelOpenAck_channel_id              protoreflect.FieldDescriptor
	fd_MsgChannelOpenAck_counterparty_channel_id protoreflect.FieldDescriptor
	fd_MsgChannelOpenAck_counterparty_version    protoreflect.FieldDescriptor
	fd_MsgChannelOpenAck_proof_try               protoreflect.FieldDescriptor
	fd_MsgChannelOpenAck_proof_height            protoreflect.FieldDescriptor
	fd_MsgChannelOpenAck_signer                  protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelOpenAck = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelOpenAck")
	fd_MsgChannelOpenAck_port_id = md_MsgChannelOpenAck.Fields().ByName("port_id")
	fd_MsgChannelOpenAck_channel_id = md_MsgChannelOpenAck.Fields().ByName("channel_id")
	fd_MsgChannelOpenAck_counterparty_channel_id = md_MsgChannelOpenAck.Fields().ByName("counterparty_channel_id")
	fd_MsgChannelOpenAck_counterparty_version = md_MsgChannelOpenAck.Fields().ByName("counterparty_version")
	fd_MsgChannelOpenAck_proof_try = md_MsgChannelOpenAck.Fields().ByName("proof_try")
	fd_MsgChannelOpenAck_proof_height = md_MsgChannelOpenAck.Fields().ByName("proof_height")
	fd_MsgChannelOpenAck_signer = md_MsgChannelOpenAck.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelOpenAck)(nil)

type fastReflection_MsgChannelOpenAck MsgChannelOpenAck

func (x *MsgChannelOpenAck) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenAck)(x)
}

func (x *MsgChannelOpenAck) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelOpenAck_messageType fastReflection_MsgChannelOpenAck_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelOpenAck_messageType{}

type fastReflection_MsgChannelOpenAck_messageType struct{}

func (x fastReflection_MsgChannelOpenAck_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenAck)(nil)
}
func (x fastReflection_MsgChannelOpenAck_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenAck)
}
func (x fastReflection_MsgChannelOpenAck_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenAck
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelOpenAck) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenAck
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelOpenAck) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelOpenAck_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelOpenAck) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenAck)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelOpenAck) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelOpenAck)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelOpenAck) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelOpenAck_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelOpenAck_channel_id, value) {
			return
		}
	}
	if x.CounterpartyChannelId != "" {
		value := protoreflect.ValueOfString(x.CounterpartyChannelId)
		if !f(fd_MsgChannelOpenAck_counterparty_channel_id, value) {
			return
		}
	}
	if x.CounterpartyVersion != "" {
		value := protoreflect.ValueOfString(x.CounterpartyVersion)
		if !f(fd_MsgChannelOpenAck_counterparty_version, value) {
			return
		}
	}
	if len(x.ProofTry) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofTry)
		if !f(fd_MsgChannelOpenAck_proof_try, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgChannelOpenAck_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelOpenAck_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelOpenAck) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenAck.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelOpenAck.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_channel_id":
		return x.CounterpartyChannelId != ""
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_version":
		return x.CounterpartyVersion != ""
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_try":
		return len(x.ProofTry) != 0
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgChannelOpenAck.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAck does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenAck) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenAck.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelOpenAck.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_channel_id":
		x.CounterpartyChannelId = ""
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_version":
		x.CounterpartyVersion = ""
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_try":
		x.ProofTry = nil
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgChannelOpenAck.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAck does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelOpenAck) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenAck.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenAck.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_channel_id":
		value := x.CounterpartyChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_version":
		value := x.CounterpartyVersion
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_try":
		value := x.ProofTry
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenAck.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAck does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenAck) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenAck.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenAck.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_channel_id":
		x.CounterpartyChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_version":
		x.CounterpartyVersion = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_try":
		x.ProofTry = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgChannelOpenAck.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAck does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenAck) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenAck.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelOpenAck is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenAck.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelOpenAck is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_channel_id":
		panic(fmt.Errorf("field counterparty_channel_id of message ibc.core.channel.v1.MsgChannelOpenAck is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_version":
		panic(fmt.Errorf("field counterparty_version of message ibc.core.channel.v1.MsgChannelOpenAck is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_try":
		panic(fmt.Errorf("field proof_try of message ibc.core.channel.v1.MsgChannelOpenAck is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenAck.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelOpenAck is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAck does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelOpenAck) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenAck.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenAck.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenAck.counterparty_version":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_try":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelOpenAck.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenAck.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAck does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelOpenAck) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelOpenAck", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelOpenAck) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenAck) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelOpenAck) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelOpenAck) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelOpenAck)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CounterpartyChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CounterpartyVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofTry)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenAck)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x3a
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ProofTry) > 0 {
			i -= len(x.ProofTry)
			copy(dAtA[i:], x.ProofTry)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofTry)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.CounterpartyVersion) > 0 {
			i -= len(x.CounterpartyVersion)
			copy(dAtA[i:], x.CounterpartyVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CounterpartyVersion)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.CounterpartyChannelId) > 0 {
			i -= len(x.CounterpartyChannelId)
			copy(dAtA[i:], x.CounterpartyChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CounterpartyChannelId)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenAck)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenAck: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenAck: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CounterpartyChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CounterpartyVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofTry", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofTry = append(x.ProofTry[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofTry == nil {
					x.ProofTry = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelOpenAckResponse protoreflect.MessageDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelOpenAckResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelOpenAckResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelOpenAckResponse)(nil)

type fastReflection_MsgChannelOpenAckResponse MsgChannelOpenAckResponse

func (x *MsgChannelOpenAckResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenAckResponse)(x)
}

func (x *MsgChannelOpenAckResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelOpenAckResponse_messageType fastReflection_MsgChannelOpenAckResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelOpenAckResponse_messageType{}

type fastReflection_MsgChannelOpenAckResponse_messageType struct{}

func (x fastReflection_MsgChannelOpenAckResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenAckResponse)(nil)
}
func (x fastReflection_MsgChannelOpenAckResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenAckResponse)
}
func (x fastReflection_MsgChannelOpenAckResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenAckResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelOpenAckResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenAckResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelOpenAckResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelOpenAckResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelOpenAckResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenAckResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelOpenAckResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelOpenAckResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelOpenAckResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelOpenAckResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAckResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenAckResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAckResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelOpenAckResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAckResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenAckResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAckResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenAckResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAckResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelOpenAckResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenAckResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelOpenAckResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelOpenAckResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelOpenAckResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenAckResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelOpenAckResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelOpenAckResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelOpenAckResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenAckResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenAckResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenAckResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenAckResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelOpenConfirm              protoreflect.MessageDescriptor
	fd_MsgChannelOpenConfirm_port_id      protoreflect.FieldDescriptor
	fd_MsgChannelOpenConfirm_channel_id   protoreflect.FieldDescriptor
	fd_MsgChannelOpenConfirm_proof_ack    protoreflect.FieldDescriptor
	fd_MsgChannelOpenConfirm_proof_height protoreflect.FieldDescriptor
	fd_MsgChannelOpenConfirm_signer       protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelOpenConfirm = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelOpenConfirm")
	fd_MsgChannelOpenConfirm_port_id = md_MsgChannelOpenConfirm.Fields().ByName("port_id")
	fd_MsgChannelOpenConfirm_channel_id = md_MsgChannelOpenConfirm.Fields().ByName("channel_id")
	fd_MsgChannelOpenConfirm_proof_ack = md_MsgChannelOpenConfirm.Fields().ByName("proof_ack")
	fd_MsgChannelOpenConfirm_proof_height = md_MsgChannelOpenConfirm.Fields().ByName("proof_height")
	fd_MsgChannelOpenConfirm_signer = md_MsgChannelOpenConfirm.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelOpenConfirm)(nil)

type fastReflection_MsgChannelOpenConfirm MsgChannelOpenConfirm

func (x *MsgChannelOpenConfirm) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenConfirm)(x)
}

func (x *MsgChannelOpenConfirm) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelOpenConfirm_messageType fastReflection_MsgChannelOpenConfirm_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelOpenConfirm_messageType{}

type fastReflection_MsgChannelOpenConfirm_messageType struct{}

func (x fastReflection_MsgChannelOpenConfirm_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenConfirm)(nil)
}
func (x fastReflection_MsgChannelOpenConfirm_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenConfirm)
}
func (x fastReflection_MsgChannelOpenConfirm_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenConfirm
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelOpenConfirm) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenConfirm
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelOpenConfirm) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelOpenConfirm_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelOpenConfirm) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenConfirm)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelOpenConfirm) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelOpenConfirm)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelOpenConfirm) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelOpenConfirm_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelOpenConfirm_channel_id, value) {
			return
		}
	}
	if len(x.ProofAck) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofAck)
		if !f(fd_MsgChannelOpenConfirm_proof_ack, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgChannelOpenConfirm_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelOpenConfirm_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelOpenConfirm) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_ack":
		return len(x.ProofAck) != 0
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirm does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenConfirm) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_ack":
		x.ProofAck = nil
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirm does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelOpenConfirm) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_ack":
		value := x.ProofAck
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirm does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenConfirm) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_ack":
		x.ProofAck = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirm does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenConfirm) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelOpenConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelOpenConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_ack":
		panic(fmt.Errorf("field proof_ack of message ibc.core.channel.v1.MsgChannelOpenConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelOpenConfirm is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirm does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelOpenConfirm) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_ack":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelOpenConfirm.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirm does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelOpenConfirm) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelOpenConfirm", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelOpenConfirm) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenConfirm) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelOpenConfirm) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelOpenConfirm) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelOpenConfirm)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofAck)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenConfirm)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x2a
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ProofAck) > 0 {
			i -= len(x.ProofAck)
			copy(dAtA[i:], x.ProofAck)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofAck)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenConfirm)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenConfirm: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenConfirm: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofAck", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofAck = append(x.ProofAck[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofAck == nil {
					x.ProofAck = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelOpenConfirmResponse protoreflect.MessageDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelOpenConfirmResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelOpenConfirmResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelOpenConfirmResponse)(nil)

type fastReflection_MsgChannelOpenConfirmResponse MsgChannelOpenConfirmResponse

func (x *MsgChannelOpenConfirmResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenConfirmResponse)(x)
}

func (x *MsgChannelOpenConfirmResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelOpenConfirmResponse_messageType fastReflection_MsgChannelOpenConfirmResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelOpenConfirmResponse_messageType{}

type fastReflection_MsgChannelOpenConfirmResponse_messageType struct{}

func (x fastReflection_MsgChannelOpenConfirmResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelOpenConfirmResponse)(nil)
}
func (x fastReflection_MsgChannelOpenConfirmResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenConfirmResponse)
}
func (x fastReflection_MsgChannelOpenConfirmResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenConfirmResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelOpenConfirmResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelOpenConfirmResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelOpenConfirmResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelOpenConfirmResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelOpenConfirmResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelOpenConfirmResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelOpenConfirmResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelOpenConfirmResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelOpenConfirmResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelOpenConfirmResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenConfirmResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelOpenConfirmResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirmResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenConfirmResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenConfirmResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelOpenConfirmResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelOpenConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelOpenConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelOpenConfirmResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelOpenConfirmResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelOpenConfirmResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelOpenConfirmResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelOpenConfirmResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelOpenConfirmResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelOpenConfirmResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenConfirmResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelOpenConfirmResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenConfirmResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelOpenConfirmResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelCloseInit            protoreflect.MessageDescriptor
	fd_MsgChannelCloseInit_port_id    protoreflect.FieldDescriptor
	fd_MsgChannelCloseInit_channel_id protoreflect.FieldDescriptor
	fd_MsgChannelCloseInit_signer     protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelCloseInit = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelCloseInit")
	fd_MsgChannelCloseInit_port_id = md_MsgChannelCloseInit.Fields().ByName("port_id")
	fd_MsgChannelCloseInit_channel_id = md_MsgChannelCloseInit.Fields().ByName("channel_id")
	fd_MsgChannelCloseInit_signer = md_MsgChannelCloseInit.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelCloseInit)(nil)

type fastReflection_MsgChannelCloseInit MsgChannelCloseInit

func (x *MsgChannelCloseInit) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelCloseInit)(x)
}

func (x *MsgChannelCloseInit) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelCloseInit_messageType fastReflection_MsgChannelCloseInit_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelCloseInit_messageType{}

type fastReflection_MsgChannelCloseInit_messageType struct{}

func (x fastReflection_MsgChannelCloseInit_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelCloseInit)(nil)
}
func (x fastReflection_MsgChannelCloseInit_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelCloseInit)
}
func (x fastReflection_MsgChannelCloseInit_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelCloseInit
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelCloseInit) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelCloseInit
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelCloseInit) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelCloseInit_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelCloseInit) New() protoreflect.Message {
	return new(fastReflection_MsgChannelCloseInit)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelCloseInit) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelCloseInit)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelCloseInit) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelCloseInit_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelCloseInit_channel_id, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelCloseInit_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelCloseInit) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseInit.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelCloseInit.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelCloseInit.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInit does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseInit) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseInit.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelCloseInit.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelCloseInit.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInit does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelCloseInit) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseInit.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelCloseInit.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelCloseInit.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInit does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseInit) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseInit.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelCloseInit.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelCloseInit.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInit does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseInit) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseInit.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelCloseInit is not mutable"))
	case "ibc.core.channel.v1.MsgChannelCloseInit.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelCloseInit is not mutable"))
	case "ibc.core.channel.v1.MsgChannelCloseInit.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelCloseInit is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInit does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelCloseInit) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseInit.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelCloseInit.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelCloseInit.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInit does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelCloseInit) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelCloseInit", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelCloseInit) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseInit) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelCloseInit) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelCloseInit) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelCloseInit)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelCloseInit)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelCloseInit)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelCloseInit: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelCloseInit: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelCloseInitResponse protoreflect.MessageDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelCloseInitResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelCloseInitResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelCloseInitResponse)(nil)

type fastReflection_MsgChannelCloseInitResponse MsgChannelCloseInitResponse

func (x *MsgChannelCloseInitResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelCloseInitResponse)(x)
}

func (x *MsgChannelCloseInitResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelCloseInitResponse_messageType fastReflection_MsgChannelCloseInitResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelCloseInitResponse_messageType{}

type fastReflection_MsgChannelCloseInitResponse_messageType struct{}

func (x fastReflection_MsgChannelCloseInitResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelCloseInitResponse)(nil)
}
func (x fastReflection_MsgChannelCloseInitResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelCloseInitResponse)
}
func (x fastReflection_MsgChannelCloseInitResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelCloseInitResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelCloseInitResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelCloseInitResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelCloseInitResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelCloseInitResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelCloseInitResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelCloseInitResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelCloseInitResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelCloseInitResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelCloseInitResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelCloseInitResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInitResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseInitResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInitResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelCloseInitResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInitResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseInitResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInitResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseInitResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInitResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelCloseInitResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseInitResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelCloseInitResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelCloseInitResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelCloseInitResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseInitResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelCloseInitResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelCloseInitResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelCloseInitResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelCloseInitResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelCloseInitResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelCloseInitResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelCloseInitResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelCloseConfirm                               protoreflect.MessageDescriptor
	fd_MsgChannelCloseConfirm_port_id                       protoreflect.FieldDescriptor
	fd_MsgChannelCloseConfirm_channel_id                    protoreflect.FieldDescriptor
	fd_MsgChannelCloseConfirm_proof_init                    protoreflect.FieldDescriptor
	fd_MsgChannelCloseConfirm_proof_height                  protoreflect.FieldDescriptor
	fd_MsgChannelCloseConfirm_signer                        protoreflect.FieldDescriptor
	fd_MsgChannelCloseConfirm_counterparty_upgrade_sequence protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelCloseConfirm = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelCloseConfirm")
	fd_MsgChannelCloseConfirm_port_id = md_MsgChannelCloseConfirm.Fields().ByName("port_id")
	fd_MsgChannelCloseConfirm_channel_id = md_MsgChannelCloseConfirm.Fields().ByName("channel_id")
	fd_MsgChannelCloseConfirm_proof_init = md_MsgChannelCloseConfirm.Fields().ByName("proof_init")
	fd_MsgChannelCloseConfirm_proof_height = md_MsgChannelCloseConfirm.Fields().ByName("proof_height")
	fd_MsgChannelCloseConfirm_signer = md_MsgChannelCloseConfirm.Fields().ByName("signer")
	fd_MsgChannelCloseConfirm_counterparty_upgrade_sequence = md_MsgChannelCloseConfirm.Fields().ByName("counterparty_upgrade_sequence")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelCloseConfirm)(nil)

type fastReflection_MsgChannelCloseConfirm MsgChannelCloseConfirm

func (x *MsgChannelCloseConfirm) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelCloseConfirm)(x)
}

func (x *MsgChannelCloseConfirm) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelCloseConfirm_messageType fastReflection_MsgChannelCloseConfirm_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelCloseConfirm_messageType{}

type fastReflection_MsgChannelCloseConfirm_messageType struct{}

func (x fastReflection_MsgChannelCloseConfirm_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelCloseConfirm)(nil)
}
func (x fastReflection_MsgChannelCloseConfirm_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelCloseConfirm)
}
func (x fastReflection_MsgChannelCloseConfirm_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelCloseConfirm
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelCloseConfirm) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelCloseConfirm
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelCloseConfirm) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelCloseConfirm_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelCloseConfirm) New() protoreflect.Message {
	return new(fastReflection_MsgChannelCloseConfirm)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelCloseConfirm) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelCloseConfirm)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelCloseConfirm) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelCloseConfirm_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelCloseConfirm_channel_id, value) {
			return
		}
	}
	if len(x.ProofInit) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofInit)
		if !f(fd_MsgChannelCloseConfirm_proof_init, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgChannelCloseConfirm_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelCloseConfirm_signer, value) {
			return
		}
	}
	if x.CounterpartyUpgradeSequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CounterpartyUpgradeSequence)
		if !f(fd_MsgChannelCloseConfirm_counterparty_upgrade_sequence, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelCloseConfirm) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_init":
		return len(x.ProofInit) != 0
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.signer":
		return x.Signer != ""
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.counterparty_upgrade_sequence":
		return x.CounterpartyUpgradeSequence != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirm does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseConfirm) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_init":
		x.ProofInit = nil
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.signer":
		x.Signer = ""
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.counterparty_upgrade_sequence":
		x.CounterpartyUpgradeSequence = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirm does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelCloseConfirm) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_init":
		value := x.ProofInit
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.counterparty_upgrade_sequence":
		value := x.CounterpartyUpgradeSequence
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirm does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseConfirm) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_init":
		x.ProofInit = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.signer":
		x.Signer = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.counterparty_upgrade_sequence":
		x.CounterpartyUpgradeSequence = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirm does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseConfirm) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelCloseConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelCloseConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_init":
		panic(fmt.Errorf("field proof_init of message ibc.core.channel.v1.MsgChannelCloseConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelCloseConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.counterparty_upgrade_sequence":
		panic(fmt.Errorf("field counterparty_upgrade_sequence of message ibc.core.channel.v1.MsgChannelCloseConfirm is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirm does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelCloseConfirm) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_init":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.signer":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelCloseConfirm.counterparty_upgrade_sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirm does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelCloseConfirm) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelCloseConfirm", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelCloseConfirm) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseConfirm) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelCloseConfirm) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelCloseConfirm) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelCloseConfirm)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofInit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CounterpartyUpgradeSequence != 0 {
			n += 1 + runtime.Sov(uint64(x.CounterpartyUpgradeSequence))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelCloseConfirm)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CounterpartyUpgradeSequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CounterpartyUpgradeSequence))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x2a
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ProofInit) > 0 {
			i -= len(x.ProofInit)
			copy(dAtA[i:], x.ProofInit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofInit)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelCloseConfirm)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelCloseConfirm: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelCloseConfirm: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofInit", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofInit = append(x.ProofInit[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofInit == nil {
					x.ProofInit = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyUpgradeSequence", wireType)
				}
				x.CounterpartyUpgradeSequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CounterpartyUpgradeSequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelCloseConfirmResponse protoreflect.MessageDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelCloseConfirmResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelCloseConfirmResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelCloseConfirmResponse)(nil)

type fastReflection_MsgChannelCloseConfirmResponse MsgChannelCloseConfirmResponse

func (x *MsgChannelCloseConfirmResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelCloseConfirmResponse)(x)
}

func (x *MsgChannelCloseConfirmResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelCloseConfirmResponse_messageType fastReflection_MsgChannelCloseConfirmResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelCloseConfirmResponse_messageType{}

type fastReflection_MsgChannelCloseConfirmResponse_messageType struct{}

func (x fastReflection_MsgChannelCloseConfirmResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelCloseConfirmResponse)(nil)
}
func (x fastReflection_MsgChannelCloseConfirmResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelCloseConfirmResponse)
}
func (x fastReflection_MsgChannelCloseConfirmResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelCloseConfirmResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelCloseConfirmResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelCloseConfirmResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelCloseConfirmResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelCloseConfirmResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelCloseConfirmResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelCloseConfirmResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelCloseConfirmResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelCloseConfirmResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelCloseConfirmResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelCloseConfirmResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseConfirmResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelCloseConfirmResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirmResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseConfirmResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseConfirmResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelCloseConfirmResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelCloseConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelCloseConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelCloseConfirmResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelCloseConfirmResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelCloseConfirmResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelCloseConfirmResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelCloseConfirmResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelCloseConfirmResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelCloseConfirmResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelCloseConfirmResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelCloseConfirmResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelCloseConfirmResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelCloseConfirmResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRecvPacket                  protoreflect.MessageDescriptor
	fd_MsgRecvPacket_packet           protoreflect.FieldDescriptor
	fd_MsgRecvPacket_proof_commitment protoreflect.FieldDescriptor
	fd_MsgRecvPacket_proof_height     protoreflect.FieldDescriptor
	fd_MsgRecvPacket_signer           protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgRecvPacket = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgRecvPacket")
	fd_MsgRecvPacket_packet = md_MsgRecvPacket.Fields().ByName("packet")
	fd_MsgRecvPacket_proof_commitment = md_MsgRecvPacket.Fields().ByName("proof_commitment")
	fd_MsgRecvPacket_proof_height = md_MsgRecvPacket.Fields().ByName("proof_height")
	fd_MsgRecvPacket_signer = md_MsgRecvPacket.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgRecvPacket)(nil)

type fastReflection_MsgRecvPacket MsgRecvPacket

func (x *MsgRecvPacket) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRecvPacket)(x)
}

func (x *MsgRecvPacket) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRecvPacket_messageType fastReflection_MsgRecvPacket_messageType
var _ protoreflect.MessageType = fastReflection_MsgRecvPacket_messageType{}

type fastReflection_MsgRecvPacket_messageType struct{}

func (x fastReflection_MsgRecvPacket_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRecvPacket)(nil)
}
func (x fastReflection_MsgRecvPacket_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRecvPacket)
}
func (x fastReflection_MsgRecvPacket_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRecvPacket
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRecvPacket) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRecvPacket
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRecvPacket) Type() protoreflect.MessageType {
	return _fastReflection_MsgRecvPacket_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRecvPacket) New() protoreflect.Message {
	return new(fastReflection_MsgRecvPacket)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRecvPacket) Interface() protoreflect.ProtoMessage {
	return (*MsgRecvPacket)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRecvPacket) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Packet != nil {
		value := protoreflect.ValueOfMessage(x.Packet.ProtoReflect())
		if !f(fd_MsgRecvPacket_packet, value) {
			return
		}
	}
	if len(x.ProofCommitment) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofCommitment)
		if !f(fd_MsgRecvPacket_proof_commitment, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgRecvPacket_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgRecvPacket_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRecvPacket) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacket.packet":
		return x.Packet != nil
	case "ibc.core.channel.v1.MsgRecvPacket.proof_commitment":
		return len(x.ProofCommitment) != 0
	case "ibc.core.channel.v1.MsgRecvPacket.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgRecvPacket.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacket"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacket does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRecvPacket) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacket.packet":
		x.Packet = nil
	case "ibc.core.channel.v1.MsgRecvPacket.proof_commitment":
		x.ProofCommitment = nil
	case "ibc.core.channel.v1.MsgRecvPacket.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgRecvPacket.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacket"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacket does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRecvPacket) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacket.packet":
		value := x.Packet
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgRecvPacket.proof_commitment":
		value := x.ProofCommitment
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgRecvPacket.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgRecvPacket.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacket"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacket does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRecvPacket) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacket.packet":
		x.Packet = value.Message().Interface().(*Packet)
	case "ibc.core.channel.v1.MsgRecvPacket.proof_commitment":
		x.ProofCommitment = value.Bytes()
	case "ibc.core.channel.v1.MsgRecvPacket.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgRecvPacket.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacket"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacket does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRecvPacket) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacket.packet":
		if x.Packet == nil {
			x.Packet = new(Packet)
		}
		return protoreflect.ValueOfMessage(x.Packet.ProtoReflect())
	case "ibc.core.channel.v1.MsgRecvPacket.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgRecvPacket.proof_commitment":
		panic(fmt.Errorf("field proof_commitment of message ibc.core.channel.v1.MsgRecvPacket is not mutable"))
	case "ibc.core.channel.v1.MsgRecvPacket.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgRecvPacket is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacket"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacket does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRecvPacket) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacket.packet":
		m := new(Packet)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgRecvPacket.proof_commitment":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgRecvPacket.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgRecvPacket.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacket"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacket does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRecvPacket) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgRecvPacket", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRecvPacket) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRecvPacket) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRecvPacket) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRecvPacket) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRecvPacket)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Packet != nil {
			l = options.Size(x.Packet)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofCommitment)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRecvPacket)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x22
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ProofCommitment) > 0 {
			i -= len(x.ProofCommitment)
			copy(dAtA[i:], x.ProofCommitment)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofCommitment)))
			i--
			dAtA[i] = 0x12
		}
		if x.Packet != nil {
			encoded, err := options.Marshal(x.Packet)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRecvPacket)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRecvPacket: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRecvPacket: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Packet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Packet == nil {
					x.Packet = &Packet{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Packet); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofCommitment", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofCommitment = append(x.ProofCommitment[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofCommitment == nil {
					x.ProofCommitment = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRecvPacketResponse        protoreflect.MessageDescriptor
	fd_MsgRecvPacketResponse_result protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgRecvPacketResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgRecvPacketResponse")
	fd_MsgRecvPacketResponse_result = md_MsgRecvPacketResponse.Fields().ByName("result")
}

var _ protoreflect.Message = (*fastReflection_MsgRecvPacketResponse)(nil)

type fastReflection_MsgRecvPacketResponse MsgRecvPacketResponse

func (x *MsgRecvPacketResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRecvPacketResponse)(x)
}

func (x *MsgRecvPacketResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRecvPacketResponse_messageType fastReflection_MsgRecvPacketResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgRecvPacketResponse_messageType{}

type fastReflection_MsgRecvPacketResponse_messageType struct{}

func (x fastReflection_MsgRecvPacketResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRecvPacketResponse)(nil)
}
func (x fastReflection_MsgRecvPacketResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRecvPacketResponse)
}
func (x fastReflection_MsgRecvPacketResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRecvPacketResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRecvPacketResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRecvPacketResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRecvPacketResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgRecvPacketResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRecvPacketResponse) New() protoreflect.Message {
	return new(fastReflection_MsgRecvPacketResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRecvPacketResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgRecvPacketResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRecvPacketResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Result != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Result))
		if !f(fd_MsgRecvPacketResponse_result, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRecvPacketResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacketResponse.result":
		return x.Result != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacketResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacketResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRecvPacketResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacketResponse.result":
		x.Result = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacketResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacketResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRecvPacketResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacketResponse.result":
		value := x.Result
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacketResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacketResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRecvPacketResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacketResponse.result":
		x.Result = (ResponseResultType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacketResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacketResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRecvPacketResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacketResponse.result":
		panic(fmt.Errorf("field result of message ibc.core.channel.v1.MsgRecvPacketResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacketResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacketResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRecvPacketResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgRecvPacketResponse.result":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgRecvPacketResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgRecvPacketResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRecvPacketResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgRecvPacketResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRecvPacketResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRecvPacketResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRecvPacketResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRecvPacketResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRecvPacketResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Result != 0 {
			n += 1 + runtime.Sov(uint64(x.Result))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRecvPacketResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Result != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Result))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRecvPacketResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRecvPacketResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRecvPacketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
				}
				x.Result = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Result |= ResponseResultType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgTimeout                    protoreflect.MessageDescriptor
	fd_MsgTimeout_packet             protoreflect.FieldDescriptor
	fd_MsgTimeout_proof_unreceived   protoreflect.FieldDescriptor
	fd_MsgTimeout_proof_height       protoreflect.FieldDescriptor
	fd_MsgTimeout_next_sequence_recv protoreflect.FieldDescriptor
	fd_MsgTimeout_signer             protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgTimeout = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgTimeout")
	fd_MsgTimeout_packet = md_MsgTimeout.Fields().ByName("packet")
	fd_MsgTimeout_proof_unreceived = md_MsgTimeout.Fields().ByName("proof_unreceived")
	fd_MsgTimeout_proof_height = md_MsgTimeout.Fields().ByName("proof_height")
	fd_MsgTimeout_next_sequence_recv = md_MsgTimeout.Fields().ByName("next_sequence_recv")
	fd_MsgTimeout_signer = md_MsgTimeout.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgTimeout)(nil)

type fastReflection_MsgTimeout MsgTimeout

func (x *MsgTimeout) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgTimeout)(x)
}

func (x *MsgTimeout) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgTimeout_messageType fastReflection_MsgTimeout_messageType
var _ protoreflect.MessageType = fastReflection_MsgTimeout_messageType{}

type fastReflection_MsgTimeout_messageType struct{}

func (x fastReflection_MsgTimeout_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgTimeout)(nil)
}
func (x fastReflection_MsgTimeout_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgTimeout)
}
func (x fastReflection_MsgTimeout_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTimeout
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgTimeout) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTimeout
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgTimeout) Type() protoreflect.MessageType {
	return _fastReflection_MsgTimeout_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgTimeout) New() protoreflect.Message {
	return new(fastReflection_MsgTimeout)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgTimeout) Interface() protoreflect.ProtoMessage {
	return (*MsgTimeout)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgTimeout) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Packet != nil {
		value := protoreflect.ValueOfMessage(x.Packet.ProtoReflect())
		if !f(fd_MsgTimeout_packet, value) {
			return
		}
	}
	if len(x.ProofUnreceived) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofUnreceived)
		if !f(fd_MsgTimeout_proof_unreceived, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgTimeout_proof_height, value) {
			return
		}
	}
	if x.NextSequenceRecv != uint64(0) {
		value := protoreflect.ValueOfUint64(x.NextSequenceRecv)
		if !f(fd_MsgTimeout_next_sequence_recv, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgTimeout_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgTimeout) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeout.packet":
		return x.Packet != nil
	case "ibc.core.channel.v1.MsgTimeout.proof_unreceived":
		return len(x.ProofUnreceived) != 0
	case "ibc.core.channel.v1.MsgTimeout.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgTimeout.next_sequence_recv":
		return x.NextSequenceRecv != uint64(0)
	case "ibc.core.channel.v1.MsgTimeout.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeout does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeout) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeout.packet":
		x.Packet = nil
	case "ibc.core.channel.v1.MsgTimeout.proof_unreceived":
		x.ProofUnreceived = nil
	case "ibc.core.channel.v1.MsgTimeout.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgTimeout.next_sequence_recv":
		x.NextSequenceRecv = uint64(0)
	case "ibc.core.channel.v1.MsgTimeout.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeout does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgTimeout) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgTimeout.packet":
		value := x.Packet
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeout.proof_unreceived":
		value := x.ProofUnreceived
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgTimeout.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeout.next_sequence_recv":
		value := x.NextSequenceRecv
		return protoreflect.ValueOfUint64(value)
	case "ibc.core.channel.v1.MsgTimeout.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeout does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeout) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeout.packet":
		x.Packet = value.Message().Interface().(*Packet)
	case "ibc.core.channel.v1.MsgTimeout.proof_unreceived":
		x.ProofUnreceived = value.Bytes()
	case "ibc.core.channel.v1.MsgTimeout.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgTimeout.next_sequence_recv":
		x.NextSequenceRecv = value.Uint()
	case "ibc.core.channel.v1.MsgTimeout.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeout does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeout) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeout.packet":
		if x.Packet == nil {
			x.Packet = new(Packet)
		}
		return protoreflect.ValueOfMessage(x.Packet.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeout.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeout.proof_unreceived":
		panic(fmt.Errorf("field proof_unreceived of message ibc.core.channel.v1.MsgTimeout is not mutable"))
	case "ibc.core.channel.v1.MsgTimeout.next_sequence_recv":
		panic(fmt.Errorf("field next_sequence_recv of message ibc.core.channel.v1.MsgTimeout is not mutable"))
	case "ibc.core.channel.v1.MsgTimeout.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgTimeout is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeout does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgTimeout) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeout.packet":
		m := new(Packet)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeout.proof_unreceived":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgTimeout.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeout.next_sequence_recv":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.core.channel.v1.MsgTimeout.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeout does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgTimeout) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgTimeout", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgTimeout) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeout) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgTimeout) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgTimeout) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgTimeout)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Packet != nil {
			l = options.Size(x.Packet)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofUnreceived)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NextSequenceRecv != 0 {
			n += 1 + runtime.Sov(uint64(x.NextSequenceRecv))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgTimeout)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x2a
		}
		if x.NextSequenceRecv != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NextSequenceRecv))
			i--
			dAtA[i] = 0x20
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ProofUnreceived) > 0 {
			i -= len(x.ProofUnreceived)
			copy(dAtA[i:], x.ProofUnreceived)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofUnreceived)))
			i--
			dAtA[i] = 0x12
		}
		if x.Packet != nil {
			encoded, err := options.Marshal(x.Packet)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgTimeout)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTimeout: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTimeout: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Packet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Packet == nil {
					x.Packet = &Packet{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Packet); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofUnreceived", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofUnreceived = append(x.ProofUnreceived[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofUnreceived == nil {
					x.ProofUnreceived = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NextSequenceRecv", wireType)
				}
				x.NextSequenceRecv = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NextSequenceRecv |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgTimeoutResponse        protoreflect.MessageDescriptor
	fd_MsgTimeoutResponse_result protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgTimeoutResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgTimeoutResponse")
	fd_MsgTimeoutResponse_result = md_MsgTimeoutResponse.Fields().ByName("result")
}

var _ protoreflect.Message = (*fastReflection_MsgTimeoutResponse)(nil)

type fastReflection_MsgTimeoutResponse MsgTimeoutResponse

func (x *MsgTimeoutResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgTimeoutResponse)(x)
}

func (x *MsgTimeoutResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgTimeoutResponse_messageType fastReflection_MsgTimeoutResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgTimeoutResponse_messageType{}

type fastReflection_MsgTimeoutResponse_messageType struct{}

func (x fastReflection_MsgTimeoutResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgTimeoutResponse)(nil)
}
func (x fastReflection_MsgTimeoutResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgTimeoutResponse)
}
func (x fastReflection_MsgTimeoutResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTimeoutResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgTimeoutResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTimeoutResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgTimeoutResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgTimeoutResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgTimeoutResponse) New() protoreflect.Message {
	return new(fastReflection_MsgTimeoutResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgTimeoutResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgTimeoutResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgTimeoutResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Result != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Result))
		if !f(fd_MsgTimeoutResponse_result, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgTimeoutResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutResponse.result":
		return x.Result != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutResponse.result":
		x.Result = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgTimeoutResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutResponse.result":
		value := x.Result
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutResponse.result":
		x.Result = (ResponseResultType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutResponse.result":
		panic(fmt.Errorf("field result of message ibc.core.channel.v1.MsgTimeoutResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgTimeoutResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutResponse.result":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgTimeoutResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgTimeoutResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgTimeoutResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgTimeoutResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgTimeoutResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgTimeoutResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Result != 0 {
			n += 1 + runtime.Sov(uint64(x.Result))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgTimeoutResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Result != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Result))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgTimeoutResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTimeoutResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTimeoutResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
				}
				x.Result = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Result |= ResponseResultType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgTimeoutOnClose                               protoreflect.MessageDescriptor
	fd_MsgTimeoutOnClose_packet                        protoreflect.FieldDescriptor
	fd_MsgTimeoutOnClose_proof_unreceived              protoreflect.FieldDescriptor
	fd_MsgTimeoutOnClose_proof_close                   protoreflect.FieldDescriptor
	fd_MsgTimeoutOnClose_proof_height                  protoreflect.FieldDescriptor
	fd_MsgTimeoutOnClose_next_sequence_recv            protoreflect.FieldDescriptor
	fd_MsgTimeoutOnClose_signer                        protoreflect.FieldDescriptor
	fd_MsgTimeoutOnClose_counterparty_upgrade_sequence protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgTimeoutOnClose = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgTimeoutOnClose")
	fd_MsgTimeoutOnClose_packet = md_MsgTimeoutOnClose.Fields().ByName("packet")
	fd_MsgTimeoutOnClose_proof_unreceived = md_MsgTimeoutOnClose.Fields().ByName("proof_unreceived")
	fd_MsgTimeoutOnClose_proof_close = md_MsgTimeoutOnClose.Fields().ByName("proof_close")
	fd_MsgTimeoutOnClose_proof_height = md_MsgTimeoutOnClose.Fields().ByName("proof_height")
	fd_MsgTimeoutOnClose_next_sequence_recv = md_MsgTimeoutOnClose.Fields().ByName("next_sequence_recv")
	fd_MsgTimeoutOnClose_signer = md_MsgTimeoutOnClose.Fields().ByName("signer")
	fd_MsgTimeoutOnClose_counterparty_upgrade_sequence = md_MsgTimeoutOnClose.Fields().ByName("counterparty_upgrade_sequence")
}

var _ protoreflect.Message = (*fastReflection_MsgTimeoutOnClose)(nil)

type fastReflection_MsgTimeoutOnClose MsgTimeoutOnClose

func (x *MsgTimeoutOnClose) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgTimeoutOnClose)(x)
}

func (x *MsgTimeoutOnClose) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgTimeoutOnClose_messageType fastReflection_MsgTimeoutOnClose_messageType
var _ protoreflect.MessageType = fastReflection_MsgTimeoutOnClose_messageType{}

type fastReflection_MsgTimeoutOnClose_messageType struct{}

func (x fastReflection_MsgTimeoutOnClose_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgTimeoutOnClose)(nil)
}
func (x fastReflection_MsgTimeoutOnClose_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgTimeoutOnClose)
}
func (x fastReflection_MsgTimeoutOnClose_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTimeoutOnClose
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgTimeoutOnClose) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTimeoutOnClose
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgTimeoutOnClose) Type() protoreflect.MessageType {
	return _fastReflection_MsgTimeoutOnClose_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgTimeoutOnClose) New() protoreflect.Message {
	return new(fastReflection_MsgTimeoutOnClose)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgTimeoutOnClose) Interface() protoreflect.ProtoMessage {
	return (*MsgTimeoutOnClose)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgTimeoutOnClose) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Packet != nil {
		value := protoreflect.ValueOfMessage(x.Packet.ProtoReflect())
		if !f(fd_MsgTimeoutOnClose_packet, value) {
			return
		}
	}
	if len(x.ProofUnreceived) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofUnreceived)
		if !f(fd_MsgTimeoutOnClose_proof_unreceived, value) {
			return
		}
	}
	if len(x.ProofClose) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofClose)
		if !f(fd_MsgTimeoutOnClose_proof_close, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgTimeoutOnClose_proof_height, value) {
			return
		}
	}
	if x.NextSequenceRecv != uint64(0) {
		value := protoreflect.ValueOfUint64(x.NextSequenceRecv)
		if !f(fd_MsgTimeoutOnClose_next_sequence_recv, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgTimeoutOnClose_signer, value) {
			return
		}
	}
	if x.CounterpartyUpgradeSequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CounterpartyUpgradeSequence)
		if !f(fd_MsgTimeoutOnClose_counterparty_upgrade_sequence, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgTimeoutOnClose) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnClose.packet":
		return x.Packet != nil
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_unreceived":
		return len(x.ProofUnreceived) != 0
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_close":
		return len(x.ProofClose) != 0
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgTimeoutOnClose.next_sequence_recv":
		return x.NextSequenceRecv != uint64(0)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.signer":
		return x.Signer != ""
	case "ibc.core.channel.v1.MsgTimeoutOnClose.counterparty_upgrade_sequence":
		return x.CounterpartyUpgradeSequence != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnClose"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnClose does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutOnClose) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnClose.packet":
		x.Packet = nil
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_unreceived":
		x.ProofUnreceived = nil
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_close":
		x.ProofClose = nil
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgTimeoutOnClose.next_sequence_recv":
		x.NextSequenceRecv = uint64(0)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.signer":
		x.Signer = ""
	case "ibc.core.channel.v1.MsgTimeoutOnClose.counterparty_upgrade_sequence":
		x.CounterpartyUpgradeSequence = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnClose"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnClose does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgTimeoutOnClose) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnClose.packet":
		value := x.Packet
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_unreceived":
		value := x.ProofUnreceived
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_close":
		value := x.ProofClose
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeoutOnClose.next_sequence_recv":
		value := x.NextSequenceRecv
		return protoreflect.ValueOfUint64(value)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.counterparty_upgrade_sequence":
		value := x.CounterpartyUpgradeSequence
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnClose"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnClose does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutOnClose) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnClose.packet":
		x.Packet = value.Message().Interface().(*Packet)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_unreceived":
		x.ProofUnreceived = value.Bytes()
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_close":
		x.ProofClose = value.Bytes()
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.next_sequence_recv":
		x.NextSequenceRecv = value.Uint()
	case "ibc.core.channel.v1.MsgTimeoutOnClose.signer":
		x.Signer = value.Interface().(string)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.counterparty_upgrade_sequence":
		x.CounterpartyUpgradeSequence = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnClose"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnClose does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutOnClose) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnClose.packet":
		if x.Packet == nil {
			x.Packet = new(Packet)
		}
		return protoreflect.ValueOfMessage(x.Packet.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_unreceived":
		panic(fmt.Errorf("field proof_unreceived of message ibc.core.channel.v1.MsgTimeoutOnClose is not mutable"))
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_close":
		panic(fmt.Errorf("field proof_close of message ibc.core.channel.v1.MsgTimeoutOnClose is not mutable"))
	case "ibc.core.channel.v1.MsgTimeoutOnClose.next_sequence_recv":
		panic(fmt.Errorf("field next_sequence_recv of message ibc.core.channel.v1.MsgTimeoutOnClose is not mutable"))
	case "ibc.core.channel.v1.MsgTimeoutOnClose.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgTimeoutOnClose is not mutable"))
	case "ibc.core.channel.v1.MsgTimeoutOnClose.counterparty_upgrade_sequence":
		panic(fmt.Errorf("field counterparty_upgrade_sequence of message ibc.core.channel.v1.MsgTimeoutOnClose is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnClose"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnClose does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgTimeoutOnClose) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnClose.packet":
		m := new(Packet)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_unreceived":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_close":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgTimeoutOnClose.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgTimeoutOnClose.next_sequence_recv":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.core.channel.v1.MsgTimeoutOnClose.signer":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgTimeoutOnClose.counterparty_upgrade_sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnClose"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnClose does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgTimeoutOnClose) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgTimeoutOnClose", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgTimeoutOnClose) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutOnClose) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgTimeoutOnClose) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgTimeoutOnClose) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgTimeoutOnClose)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Packet != nil {
			l = options.Size(x.Packet)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofUnreceived)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofClose)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NextSequenceRecv != 0 {
			n += 1 + runtime.Sov(uint64(x.NextSequenceRecv))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CounterpartyUpgradeSequence != 0 {
			n += 1 + runtime.Sov(uint64(x.CounterpartyUpgradeSequence))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgTimeoutOnClose)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CounterpartyUpgradeSequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CounterpartyUpgradeSequence))
			i--
			dAtA[i] = 0x38
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x32
		}
		if x.NextSequenceRecv != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NextSequenceRecv))
			i--
			dAtA[i] = 0x28
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ProofClose) > 0 {
			i -= len(x.ProofClose)
			copy(dAtA[i:], x.ProofClose)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofClose)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ProofUnreceived) > 0 {
			i -= len(x.ProofUnreceived)
			copy(dAtA[i:], x.ProofUnreceived)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofUnreceived)))
			i--
			dAtA[i] = 0x12
		}
		if x.Packet != nil {
			encoded, err := options.Marshal(x.Packet)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgTimeoutOnClose)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTimeoutOnClose: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTimeoutOnClose: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Packet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Packet == nil {
					x.Packet = &Packet{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Packet); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofUnreceived", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofUnreceived = append(x.ProofUnreceived[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofUnreceived == nil {
					x.ProofUnreceived = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofClose", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofClose = append(x.ProofClose[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofClose == nil {
					x.ProofClose = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NextSequenceRecv", wireType)
				}
				x.NextSequenceRecv = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NextSequenceRecv |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyUpgradeSequence", wireType)
				}
				x.CounterpartyUpgradeSequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CounterpartyUpgradeSequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgTimeoutOnCloseResponse        protoreflect.MessageDescriptor
	fd_MsgTimeoutOnCloseResponse_result protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgTimeoutOnCloseResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgTimeoutOnCloseResponse")
	fd_MsgTimeoutOnCloseResponse_result = md_MsgTimeoutOnCloseResponse.Fields().ByName("result")
}

var _ protoreflect.Message = (*fastReflection_MsgTimeoutOnCloseResponse)(nil)

type fastReflection_MsgTimeoutOnCloseResponse MsgTimeoutOnCloseResponse

func (x *MsgTimeoutOnCloseResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgTimeoutOnCloseResponse)(x)
}

func (x *MsgTimeoutOnCloseResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgTimeoutOnCloseResponse_messageType fastReflection_MsgTimeoutOnCloseResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgTimeoutOnCloseResponse_messageType{}

type fastReflection_MsgTimeoutOnCloseResponse_messageType struct{}

func (x fastReflection_MsgTimeoutOnCloseResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgTimeoutOnCloseResponse)(nil)
}
func (x fastReflection_MsgTimeoutOnCloseResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgTimeoutOnCloseResponse)
}
func (x fastReflection_MsgTimeoutOnCloseResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTimeoutOnCloseResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgTimeoutOnCloseResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTimeoutOnCloseResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgTimeoutOnCloseResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgTimeoutOnCloseResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgTimeoutOnCloseResponse) New() protoreflect.Message {
	return new(fastReflection_MsgTimeoutOnCloseResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgTimeoutOnCloseResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgTimeoutOnCloseResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgTimeoutOnCloseResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Result != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Result))
		if !f(fd_MsgTimeoutOnCloseResponse_result, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgTimeoutOnCloseResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnCloseResponse.result":
		return x.Result != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnCloseResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnCloseResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutOnCloseResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnCloseResponse.result":
		x.Result = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnCloseResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnCloseResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgTimeoutOnCloseResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnCloseResponse.result":
		value := x.Result
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnCloseResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnCloseResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutOnCloseResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnCloseResponse.result":
		x.Result = (ResponseResultType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnCloseResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnCloseResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutOnCloseResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnCloseResponse.result":
		panic(fmt.Errorf("field result of message ibc.core.channel.v1.MsgTimeoutOnCloseResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnCloseResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnCloseResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgTimeoutOnCloseResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgTimeoutOnCloseResponse.result":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgTimeoutOnCloseResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgTimeoutOnCloseResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgTimeoutOnCloseResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgTimeoutOnCloseResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgTimeoutOnCloseResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTimeoutOnCloseResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgTimeoutOnCloseResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgTimeoutOnCloseResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgTimeoutOnCloseResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Result != 0 {
			n += 1 + runtime.Sov(uint64(x.Result))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgTimeoutOnCloseResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Result != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Result))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgTimeoutOnCloseResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTimeoutOnCloseResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTimeoutOnCloseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
				}
				x.Result = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Result |= ResponseResultType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAcknowledgement                 protoreflect.MessageDescriptor
	fd_MsgAcknowledgement_packet          protoreflect.FieldDescriptor
	fd_MsgAcknowledgement_acknowledgement protoreflect.FieldDescriptor
	fd_MsgAcknowledgement_proof_acked     protoreflect.FieldDescriptor
	fd_MsgAcknowledgement_proof_height    protoreflect.FieldDescriptor
	fd_MsgAcknowledgement_signer          protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgAcknowledgement = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgAcknowledgement")
	fd_MsgAcknowledgement_packet = md_MsgAcknowledgement.Fields().ByName("packet")
	fd_MsgAcknowledgement_acknowledgement = md_MsgAcknowledgement.Fields().ByName("acknowledgement")
	fd_MsgAcknowledgement_proof_acked = md_MsgAcknowledgement.Fields().ByName("proof_acked")
	fd_MsgAcknowledgement_proof_height = md_MsgAcknowledgement.Fields().ByName("proof_height")
	fd_MsgAcknowledgement_signer = md_MsgAcknowledgement.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgAcknowledgement)(nil)

type fastReflection_MsgAcknowledgement MsgAcknowledgement

func (x *MsgAcknowledgement) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAcknowledgement)(x)
}

func (x *MsgAcknowledgement) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAcknowledgement_messageType fastReflection_MsgAcknowledgement_messageType
var _ protoreflect.MessageType = fastReflection_MsgAcknowledgement_messageType{}

type fastReflection_MsgAcknowledgement_messageType struct{}

func (x fastReflection_MsgAcknowledgement_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAcknowledgement)(nil)
}
func (x fastReflection_MsgAcknowledgement_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAcknowledgement)
}
func (x fastReflection_MsgAcknowledgement_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAcknowledgement
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAcknowledgement) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAcknowledgement
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAcknowledgement) Type() protoreflect.MessageType {
	return _fastReflection_MsgAcknowledgement_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAcknowledgement) New() protoreflect.Message {
	return new(fastReflection_MsgAcknowledgement)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAcknowledgement) Interface() protoreflect.ProtoMessage {
	return (*MsgAcknowledgement)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAcknowledgement) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Packet != nil {
		value := protoreflect.ValueOfMessage(x.Packet.ProtoReflect())
		if !f(fd_MsgAcknowledgement_packet, value) {
			return
		}
	}
	if len(x.Acknowledgement) != 0 {
		value := protoreflect.ValueOfBytes(x.Acknowledgement)
		if !f(fd_MsgAcknowledgement_acknowledgement, value) {
			return
		}
	}
	if len(x.ProofAcked) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofAcked)
		if !f(fd_MsgAcknowledgement_proof_acked, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgAcknowledgement_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgAcknowledgement_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAcknowledgement) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgement.packet":
		return x.Packet != nil
	case "ibc.core.channel.v1.MsgAcknowledgement.acknowledgement":
		return len(x.Acknowledgement) != 0
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_acked":
		return len(x.ProofAcked) != 0
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgAcknowledgement.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgement"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgement does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAcknowledgement) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgement.packet":
		x.Packet = nil
	case "ibc.core.channel.v1.MsgAcknowledgement.acknowledgement":
		x.Acknowledgement = nil
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_acked":
		x.ProofAcked = nil
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgAcknowledgement.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgement"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgement does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAcknowledgement) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgement.packet":
		value := x.Packet
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgAcknowledgement.acknowledgement":
		value := x.Acknowledgement
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_acked":
		value := x.ProofAcked
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgAcknowledgement.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgement"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgement does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAcknowledgement) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgement.packet":
		x.Packet = value.Message().Interface().(*Packet)
	case "ibc.core.channel.v1.MsgAcknowledgement.acknowledgement":
		x.Acknowledgement = value.Bytes()
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_acked":
		x.ProofAcked = value.Bytes()
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgAcknowledgement.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgement"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgement does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAcknowledgement) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgement.packet":
		if x.Packet == nil {
			x.Packet = new(Packet)
		}
		return protoreflect.ValueOfMessage(x.Packet.ProtoReflect())
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgAcknowledgement.acknowledgement":
		panic(fmt.Errorf("field acknowledgement of message ibc.core.channel.v1.MsgAcknowledgement is not mutable"))
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_acked":
		panic(fmt.Errorf("field proof_acked of message ibc.core.channel.v1.MsgAcknowledgement is not mutable"))
	case "ibc.core.channel.v1.MsgAcknowledgement.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgAcknowledgement is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgement"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgement does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAcknowledgement) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgement.packet":
		m := new(Packet)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgAcknowledgement.acknowledgement":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_acked":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgAcknowledgement.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgAcknowledgement.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgement"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgement does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAcknowledgement) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgAcknowledgement", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAcknowledgement) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAcknowledgement) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAcknowledgement) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAcknowledgement) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAcknowledgement)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Packet != nil {
			l = options.Size(x.Packet)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Acknowledgement)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofAcked)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAcknowledgement)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x2a
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ProofAcked) > 0 {
			i -= len(x.ProofAcked)
			copy(dAtA[i:], x.ProofAcked)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofAcked)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Acknowledgement) > 0 {
			i -= len(x.Acknowledgement)
			copy(dAtA[i:], x.Acknowledgement)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Acknowledgement)))
			i--
			dAtA[i] = 0x12
		}
		if x.Packet != nil {
			encoded, err := options.Marshal(x.Packet)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAcknowledgement)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAcknowledgement: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAcknowledgement: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Packet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Packet == nil {
					x.Packet = &Packet{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Packet); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Acknowledgement", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Acknowledgement = append(x.Acknowledgement[:0], dAtA[iNdEx:postIndex]...)
				if x.Acknowledgement == nil {
					x.Acknowledgement = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofAcked", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofAcked = append(x.ProofAcked[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofAcked == nil {
					x.ProofAcked = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAcknowledgementResponse        protoreflect.MessageDescriptor
	fd_MsgAcknowledgementResponse_result protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgAcknowledgementResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgAcknowledgementResponse")
	fd_MsgAcknowledgementResponse_result = md_MsgAcknowledgementResponse.Fields().ByName("result")
}

var _ protoreflect.Message = (*fastReflection_MsgAcknowledgementResponse)(nil)

type fastReflection_MsgAcknowledgementResponse MsgAcknowledgementResponse

func (x *MsgAcknowledgementResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAcknowledgementResponse)(x)
}

func (x *MsgAcknowledgementResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAcknowledgementResponse_messageType fastReflection_MsgAcknowledgementResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgAcknowledgementResponse_messageType{}

type fastReflection_MsgAcknowledgementResponse_messageType struct{}

func (x fastReflection_MsgAcknowledgementResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAcknowledgementResponse)(nil)
}
func (x fastReflection_MsgAcknowledgementResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAcknowledgementResponse)
}
func (x fastReflection_MsgAcknowledgementResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAcknowledgementResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAcknowledgementResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAcknowledgementResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAcknowledgementResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgAcknowledgementResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAcknowledgementResponse) New() protoreflect.Message {
	return new(fastReflection_MsgAcknowledgementResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAcknowledgementResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgAcknowledgementResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAcknowledgementResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Result != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Result))
		if !f(fd_MsgAcknowledgementResponse_result, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAcknowledgementResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgementResponse.result":
		return x.Result != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgementResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgementResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAcknowledgementResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgementResponse.result":
		x.Result = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgementResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgementResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAcknowledgementResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgementResponse.result":
		value := x.Result
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgementResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgementResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAcknowledgementResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgementResponse.result":
		x.Result = (ResponseResultType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgementResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgementResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAcknowledgementResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgementResponse.result":
		panic(fmt.Errorf("field result of message ibc.core.channel.v1.MsgAcknowledgementResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgementResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgementResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAcknowledgementResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgAcknowledgementResponse.result":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgAcknowledgementResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgAcknowledgementResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAcknowledgementResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgAcknowledgementResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAcknowledgementResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAcknowledgementResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAcknowledgementResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAcknowledgementResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAcknowledgementResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Result != 0 {
			n += 1 + runtime.Sov(uint64(x.Result))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAcknowledgementResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Result != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Result))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAcknowledgementResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAcknowledgementResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAcknowledgementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
				}
				x.Result = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Result |= ResponseResultType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeInit            protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeInit_port_id    protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeInit_channel_id protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeInit_fields     protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeInit_signer     protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeInit = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeInit")
	fd_MsgChannelUpgradeInit_port_id = md_MsgChannelUpgradeInit.Fields().ByName("port_id")
	fd_MsgChannelUpgradeInit_channel_id = md_MsgChannelUpgradeInit.Fields().ByName("channel_id")
	fd_MsgChannelUpgradeInit_fields = md_MsgChannelUpgradeInit.Fields().ByName("fields")
	fd_MsgChannelUpgradeInit_signer = md_MsgChannelUpgradeInit.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeInit)(nil)

type fastReflection_MsgChannelUpgradeInit MsgChannelUpgradeInit

func (x *MsgChannelUpgradeInit) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeInit)(x)
}

func (x *MsgChannelUpgradeInit) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeInit_messageType fastReflection_MsgChannelUpgradeInit_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeInit_messageType{}

type fastReflection_MsgChannelUpgradeInit_messageType struct{}

func (x fastReflection_MsgChannelUpgradeInit_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeInit)(nil)
}
func (x fastReflection_MsgChannelUpgradeInit_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeInit)
}
func (x fastReflection_MsgChannelUpgradeInit_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeInit
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeInit) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeInit
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeInit) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeInit_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeInit) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeInit)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeInit) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeInit)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeInit) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelUpgradeInit_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelUpgradeInit_channel_id, value) {
			return
		}
	}
	if x.Fields != nil {
		value := protoreflect.ValueOfMessage(x.Fields.ProtoReflect())
		if !f(fd_MsgChannelUpgradeInit_fields, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelUpgradeInit_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeInit) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.fields":
		return x.Fields != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInit does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeInit) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.fields":
		x.Fields = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInit does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeInit) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.fields":
		value := x.Fields
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInit does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeInit) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.fields":
		x.Fields = value.Message().Interface().(*UpgradeFields)
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInit does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeInit) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.fields":
		if x.Fields == nil {
			x.Fields = new(UpgradeFields)
		}
		return protoreflect.ValueOfMessage(x.Fields.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelUpgradeInit is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelUpgradeInit is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelUpgradeInit is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInit does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeInit) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.fields":
		m := new(UpgradeFields)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeInit.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInit"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInit does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeInit) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeInit", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeInit) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeInit) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeInit) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeInit) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeInit)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Fields != nil {
			l = options.Size(x.Fields)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeInit)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x22
		}
		if x.Fields != nil {
			encoded, err := options.Marshal(x.Fields)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeInit)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeInit: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeInit: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Fields", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Fields == nil {
					x.Fields = &UpgradeFields{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Fields); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeInitResponse                  protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeInitResponse_upgrade          protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeInitResponse_upgrade_sequence protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeInitResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeInitResponse")
	fd_MsgChannelUpgradeInitResponse_upgrade = md_MsgChannelUpgradeInitResponse.Fields().ByName("upgrade")
	fd_MsgChannelUpgradeInitResponse_upgrade_sequence = md_MsgChannelUpgradeInitResponse.Fields().ByName("upgrade_sequence")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeInitResponse)(nil)

type fastReflection_MsgChannelUpgradeInitResponse MsgChannelUpgradeInitResponse

func (x *MsgChannelUpgradeInitResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeInitResponse)(x)
}

func (x *MsgChannelUpgradeInitResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeInitResponse_messageType fastReflection_MsgChannelUpgradeInitResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeInitResponse_messageType{}

type fastReflection_MsgChannelUpgradeInitResponse_messageType struct{}

func (x fastReflection_MsgChannelUpgradeInitResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeInitResponse)(nil)
}
func (x fastReflection_MsgChannelUpgradeInitResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeInitResponse)
}
func (x fastReflection_MsgChannelUpgradeInitResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeInitResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeInitResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeInitResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeInitResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeInitResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeInitResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeInitResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeInitResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeInitResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeInitResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Upgrade != nil {
		value := protoreflect.ValueOfMessage(x.Upgrade.ProtoReflect())
		if !f(fd_MsgChannelUpgradeInitResponse_upgrade, value) {
			return
		}
	}
	if x.UpgradeSequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.UpgradeSequence)
		if !f(fd_MsgChannelUpgradeInitResponse_upgrade_sequence, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeInitResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade":
		return x.Upgrade != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade_sequence":
		return x.UpgradeSequence != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInitResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeInitResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade":
		x.Upgrade = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade_sequence":
		x.UpgradeSequence = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInitResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeInitResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade":
		value := x.Upgrade
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade_sequence":
		value := x.UpgradeSequence
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInitResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeInitResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade":
		x.Upgrade = value.Message().Interface().(*Upgrade)
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade_sequence":
		x.UpgradeSequence = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInitResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeInitResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade":
		if x.Upgrade == nil {
			x.Upgrade = new(Upgrade)
		}
		return protoreflect.ValueOfMessage(x.Upgrade.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade_sequence":
		panic(fmt.Errorf("field upgrade_sequence of message ibc.core.channel.v1.MsgChannelUpgradeInitResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInitResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeInitResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade":
		m := new(Upgrade)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade_sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeInitResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeInitResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeInitResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeInitResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeInitResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeInitResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeInitResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeInitResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeInitResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Upgrade != nil {
			l = options.Size(x.Upgrade)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpgradeSequence != 0 {
			n += 1 + runtime.Sov(uint64(x.UpgradeSequence))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeInitResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.UpgradeSequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.UpgradeSequence))
			i--
			dAtA[i] = 0x10
		}
		if x.Upgrade != nil {
			encoded, err := options.Marshal(x.Upgrade)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeInitResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeInitResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeInitResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Upgrade", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Upgrade == nil {
					x.Upgrade = &Upgrade{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Upgrade); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpgradeSequence", wireType)
				}
				x.UpgradeSequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.UpgradeSequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgChannelUpgradeTry_3_list)(nil)

type _MsgChannelUpgradeTry_3_list struct {
	list *[]string
}

func (x *_MsgChannelUpgradeTry_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgChannelUpgradeTry_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgChannelUpgradeTry_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgChannelUpgradeTry_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgChannelUpgradeTry_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgChannelUpgradeTry at list field ProposedUpgradeConnectionHops as it is not of Message kind"))
}

func (x *_MsgChannelUpgradeTry_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgChannelUpgradeTry_3_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgChannelUpgradeTry_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgChannelUpgradeTry                                  protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeTry_port_id                          protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTry_channel_id                       protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTry_proposed_upgrade_connection_hops protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTry_counterparty_upgrade_fields      protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTry_counterparty_upgrade_sequence    protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTry_proof_channel                    protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTry_proof_upgrade                    protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTry_proof_height                     protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTry_signer                           protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeTry = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeTry")
	fd_MsgChannelUpgradeTry_port_id = md_MsgChannelUpgradeTry.Fields().ByName("port_id")
	fd_MsgChannelUpgradeTry_channel_id = md_MsgChannelUpgradeTry.Fields().ByName("channel_id")
	fd_MsgChannelUpgradeTry_proposed_upgrade_connection_hops = md_MsgChannelUpgradeTry.Fields().ByName("proposed_upgrade_connection_hops")
	fd_MsgChannelUpgradeTry_counterparty_upgrade_fields = md_MsgChannelUpgradeTry.Fields().ByName("counterparty_upgrade_fields")
	fd_MsgChannelUpgradeTry_counterparty_upgrade_sequence = md_MsgChannelUpgradeTry.Fields().ByName("counterparty_upgrade_sequence")
	fd_MsgChannelUpgradeTry_proof_channel = md_MsgChannelUpgradeTry.Fields().ByName("proof_channel")
	fd_MsgChannelUpgradeTry_proof_upgrade = md_MsgChannelUpgradeTry.Fields().ByName("proof_upgrade")
	fd_MsgChannelUpgradeTry_proof_height = md_MsgChannelUpgradeTry.Fields().ByName("proof_height")
	fd_MsgChannelUpgradeTry_signer = md_MsgChannelUpgradeTry.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeTry)(nil)

type fastReflection_MsgChannelUpgradeTry MsgChannelUpgradeTry

func (x *MsgChannelUpgradeTry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeTry)(x)
}

func (x *MsgChannelUpgradeTry) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeTry_messageType fastReflection_MsgChannelUpgradeTry_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeTry_messageType{}

type fastReflection_MsgChannelUpgradeTry_messageType struct{}

func (x fastReflection_MsgChannelUpgradeTry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeTry)(nil)
}
func (x fastReflection_MsgChannelUpgradeTry_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeTry)
}
func (x fastReflection_MsgChannelUpgradeTry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeTry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeTry) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeTry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeTry) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeTry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeTry) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeTry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeTry) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeTry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeTry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelUpgradeTry_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelUpgradeTry_channel_id, value) {
			return
		}
	}
	if len(x.ProposedUpgradeConnectionHops) != 0 {
		value := protoreflect.ValueOfList(&_MsgChannelUpgradeTry_3_list{list: &x.ProposedUpgradeConnectionHops})
		if !f(fd_MsgChannelUpgradeTry_proposed_upgrade_connection_hops, value) {
			return
		}
	}
	if x.CounterpartyUpgradeFields != nil {
		value := protoreflect.ValueOfMessage(x.CounterpartyUpgradeFields.ProtoReflect())
		if !f(fd_MsgChannelUpgradeTry_counterparty_upgrade_fields, value) {
			return
		}
	}
	if x.CounterpartyUpgradeSequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CounterpartyUpgradeSequence)
		if !f(fd_MsgChannelUpgradeTry_counterparty_upgrade_sequence, value) {
			return
		}
	}
	if len(x.ProofChannel) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofChannel)
		if !f(fd_MsgChannelUpgradeTry_proof_channel, value) {
			return
		}
	}
	if len(x.ProofUpgrade) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofUpgrade)
		if !f(fd_MsgChannelUpgradeTry_proof_upgrade, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgChannelUpgradeTry_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelUpgradeTry_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeTry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proposed_upgrade_connection_hops":
		return len(x.ProposedUpgradeConnectionHops) != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_fields":
		return x.CounterpartyUpgradeFields != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_sequence":
		return x.CounterpartyUpgradeSequence != uint64(0)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_channel":
		return len(x.ProofChannel) != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_upgrade":
		return len(x.ProofUpgrade) != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proposed_upgrade_connection_hops":
		x.ProposedUpgradeConnectionHops = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_fields":
		x.CounterpartyUpgradeFields = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_sequence":
		x.CounterpartyUpgradeSequence = uint64(0)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_channel":
		x.ProofChannel = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_upgrade":
		x.ProofUpgrade = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeTry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proposed_upgrade_connection_hops":
		if len(x.ProposedUpgradeConnectionHops) == 0 {
			return protoreflect.ValueOfList(&_MsgChannelUpgradeTry_3_list{})
		}
		listValue := &_MsgChannelUpgradeTry_3_list{list: &x.ProposedUpgradeConnectionHops}
		return protoreflect.ValueOfList(listValue)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_fields":
		value := x.CounterpartyUpgradeFields
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_sequence":
		value := x.CounterpartyUpgradeSequence
		return protoreflect.ValueOfUint64(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_channel":
		value := x.ProofChannel
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_upgrade":
		value := x.ProofUpgrade
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proposed_upgrade_connection_hops":
		lv := value.List()
		clv := lv.(*_MsgChannelUpgradeTry_3_list)
		x.ProposedUpgradeConnectionHops = *clv.list
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_fields":
		x.CounterpartyUpgradeFields = value.Message().Interface().(*UpgradeFields)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_sequence":
		x.CounterpartyUpgradeSequence = value.Uint()
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_channel":
		x.ProofChannel = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_upgrade":
		x.ProofUpgrade = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proposed_upgrade_connection_hops":
		if x.ProposedUpgradeConnectionHops == nil {
			x.ProposedUpgradeConnectionHops = []string{}
		}
		value := &_MsgChannelUpgradeTry_3_list{list: &x.ProposedUpgradeConnectionHops}
		return protoreflect.ValueOfList(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_fields":
		if x.CounterpartyUpgradeFields == nil {
			x.CounterpartyUpgradeFields = new(UpgradeFields)
		}
		return protoreflect.ValueOfMessage(x.CounterpartyUpgradeFields.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelUpgradeTry is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelUpgradeTry is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_sequence":
		panic(fmt.Errorf("field counterparty_upgrade_sequence of message ibc.core.channel.v1.MsgChannelUpgradeTry is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_channel":
		panic(fmt.Errorf("field proof_channel of message ibc.core.channel.v1.MsgChannelUpgradeTry is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_upgrade":
		panic(fmt.Errorf("field proof_upgrade of message ibc.core.channel.v1.MsgChannelUpgradeTry is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelUpgradeTry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeTry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proposed_upgrade_connection_hops":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgChannelUpgradeTry_3_list{list: &list})
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_fields":
		m := new(UpgradeFields)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_channel":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_upgrade":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTry.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTry"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeTry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeTry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeTry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeTry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeTry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeTry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.ProposedUpgradeConnectionHops) > 0 {
			for _, s := range x.ProposedUpgradeConnectionHops {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.CounterpartyUpgradeFields != nil {
			l = options.Size(x.CounterpartyUpgradeFields)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CounterpartyUpgradeSequence != 0 {
			n += 1 + runtime.Sov(uint64(x.CounterpartyUpgradeSequence))
		}
		l = len(x.ProofChannel)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofUpgrade)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeTry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x4a
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.ProofUpgrade) > 0 {
			i -= len(x.ProofUpgrade)
			copy(dAtA[i:], x.ProofUpgrade)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofUpgrade)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.ProofChannel) > 0 {
			i -= len(x.ProofChannel)
			copy(dAtA[i:], x.ProofChannel)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofChannel)))
			i--
			dAtA[i] = 0x32
		}
		if x.CounterpartyUpgradeSequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CounterpartyUpgradeSequence))
			i--
			dAtA[i] = 0x28
		}
		if x.CounterpartyUpgradeFields != nil {
			encoded, err := options.Marshal(x.CounterpartyUpgradeFields)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ProposedUpgradeConnectionHops) > 0 {
			for iNdEx := len(x.ProposedUpgradeConnectionHops) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.ProposedUpgradeConnectionHops[iNdEx])
				copy(dAtA[i:], x.ProposedUpgradeConnectionHops[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProposedUpgradeConnectionHops[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeTry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeTry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeTry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProposedUpgradeConnectionHops", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProposedUpgradeConnectionHops = append(x.ProposedUpgradeConnectionHops, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyUpgradeFields", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CounterpartyUpgradeFields == nil {
					x.CounterpartyUpgradeFields = &UpgradeFields{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CounterpartyUpgradeFields); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyUpgradeSequence", wireType)
				}
				x.CounterpartyUpgradeSequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CounterpartyUpgradeSequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofChannel", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofChannel = append(x.ProofChannel[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofChannel == nil {
					x.ProofChannel = []byte{}
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofUpgrade", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofUpgrade = append(x.ProofUpgrade[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofUpgrade == nil {
					x.ProofUpgrade = []byte{}
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeTryResponse                  protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeTryResponse_upgrade          protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTryResponse_upgrade_sequence protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTryResponse_result           protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeTryResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeTryResponse")
	fd_MsgChannelUpgradeTryResponse_upgrade = md_MsgChannelUpgradeTryResponse.Fields().ByName("upgrade")
	fd_MsgChannelUpgradeTryResponse_upgrade_sequence = md_MsgChannelUpgradeTryResponse.Fields().ByName("upgrade_sequence")
	fd_MsgChannelUpgradeTryResponse_result = md_MsgChannelUpgradeTryResponse.Fields().ByName("result")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeTryResponse)(nil)

type fastReflection_MsgChannelUpgradeTryResponse MsgChannelUpgradeTryResponse

func (x *MsgChannelUpgradeTryResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeTryResponse)(x)
}

func (x *MsgChannelUpgradeTryResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeTryResponse_messageType fastReflection_MsgChannelUpgradeTryResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeTryResponse_messageType{}

type fastReflection_MsgChannelUpgradeTryResponse_messageType struct{}

func (x fastReflection_MsgChannelUpgradeTryResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeTryResponse)(nil)
}
func (x fastReflection_MsgChannelUpgradeTryResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeTryResponse)
}
func (x fastReflection_MsgChannelUpgradeTryResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeTryResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeTryResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeTryResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeTryResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeTryResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeTryResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeTryResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeTryResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeTryResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeTryResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Upgrade != nil {
		value := protoreflect.ValueOfMessage(x.Upgrade.ProtoReflect())
		if !f(fd_MsgChannelUpgradeTryResponse_upgrade, value) {
			return
		}
	}
	if x.UpgradeSequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.UpgradeSequence)
		if !f(fd_MsgChannelUpgradeTryResponse_upgrade_sequence, value) {
			return
		}
	}
	if x.Result != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Result))
		if !f(fd_MsgChannelUpgradeTryResponse_result, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeTryResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade":
		return x.Upgrade != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade_sequence":
		return x.UpgradeSequence != uint64(0)
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.result":
		return x.Result != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTryResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTryResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade":
		x.Upgrade = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade_sequence":
		x.UpgradeSequence = uint64(0)
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.result":
		x.Result = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTryResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeTryResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade":
		value := x.Upgrade
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade_sequence":
		value := x.UpgradeSequence
		return protoreflect.ValueOfUint64(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.result":
		value := x.Result
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTryResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTryResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade":
		x.Upgrade = value.Message().Interface().(*Upgrade)
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade_sequence":
		x.UpgradeSequence = value.Uint()
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.result":
		x.Result = (ResponseResultType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTryResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTryResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade":
		if x.Upgrade == nil {
			x.Upgrade = new(Upgrade)
		}
		return protoreflect.ValueOfMessage(x.Upgrade.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade_sequence":
		panic(fmt.Errorf("field upgrade_sequence of message ibc.core.channel.v1.MsgChannelUpgradeTryResponse is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.result":
		panic(fmt.Errorf("field result of message ibc.core.channel.v1.MsgChannelUpgradeTryResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTryResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeTryResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade":
		m := new(Upgrade)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade_sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.core.channel.v1.MsgChannelUpgradeTryResponse.result":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTryResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTryResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeTryResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeTryResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeTryResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTryResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeTryResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeTryResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeTryResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Upgrade != nil {
			l = options.Size(x.Upgrade)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpgradeSequence != 0 {
			n += 1 + runtime.Sov(uint64(x.UpgradeSequence))
		}
		if x.Result != 0 {
			n += 1 + runtime.Sov(uint64(x.Result))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeTryResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Result != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Result))
			i--
			dAtA[i] = 0x18
		}
		if x.UpgradeSequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.UpgradeSequence))
			i--
			dAtA[i] = 0x10
		}
		if x.Upgrade != nil {
			encoded, err := options.Marshal(x.Upgrade)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeTryResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeTryResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeTryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Upgrade", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Upgrade == nil {
					x.Upgrade = &Upgrade{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Upgrade); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpgradeSequence", wireType)
				}
				x.UpgradeSequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.UpgradeSequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
				}
				x.Result = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Result |= ResponseResultType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeAck                      protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeAck_port_id              protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeAck_channel_id           protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeAck_counterparty_upgrade protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeAck_proof_channel        protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeAck_proof_upgrade        protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeAck_proof_height         protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeAck_signer               protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeAck = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeAck")
	fd_MsgChannelUpgradeAck_port_id = md_MsgChannelUpgradeAck.Fields().ByName("port_id")
	fd_MsgChannelUpgradeAck_channel_id = md_MsgChannelUpgradeAck.Fields().ByName("channel_id")
	fd_MsgChannelUpgradeAck_counterparty_upgrade = md_MsgChannelUpgradeAck.Fields().ByName("counterparty_upgrade")
	fd_MsgChannelUpgradeAck_proof_channel = md_MsgChannelUpgradeAck.Fields().ByName("proof_channel")
	fd_MsgChannelUpgradeAck_proof_upgrade = md_MsgChannelUpgradeAck.Fields().ByName("proof_upgrade")
	fd_MsgChannelUpgradeAck_proof_height = md_MsgChannelUpgradeAck.Fields().ByName("proof_height")
	fd_MsgChannelUpgradeAck_signer = md_MsgChannelUpgradeAck.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeAck)(nil)

type fastReflection_MsgChannelUpgradeAck MsgChannelUpgradeAck

func (x *MsgChannelUpgradeAck) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeAck)(x)
}

func (x *MsgChannelUpgradeAck) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeAck_messageType fastReflection_MsgChannelUpgradeAck_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeAck_messageType{}

type fastReflection_MsgChannelUpgradeAck_messageType struct{}

func (x fastReflection_MsgChannelUpgradeAck_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeAck)(nil)
}
func (x fastReflection_MsgChannelUpgradeAck_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeAck)
}
func (x fastReflection_MsgChannelUpgradeAck_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeAck
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeAck) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeAck
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeAck) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeAck_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeAck) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeAck)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeAck) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeAck)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeAck) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelUpgradeAck_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelUpgradeAck_channel_id, value) {
			return
		}
	}
	if x.CounterpartyUpgrade != nil {
		value := protoreflect.ValueOfMessage(x.CounterpartyUpgrade.ProtoReflect())
		if !f(fd_MsgChannelUpgradeAck_counterparty_upgrade, value) {
			return
		}
	}
	if len(x.ProofChannel) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofChannel)
		if !f(fd_MsgChannelUpgradeAck_proof_channel, value) {
			return
		}
	}
	if len(x.ProofUpgrade) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofUpgrade)
		if !f(fd_MsgChannelUpgradeAck_proof_upgrade, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgChannelUpgradeAck_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelUpgradeAck_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeAck) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.counterparty_upgrade":
		return x.CounterpartyUpgrade != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_channel":
		return len(x.ProofChannel) != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_upgrade":
		return len(x.ProofUpgrade) != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAck does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeAck) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.counterparty_upgrade":
		x.CounterpartyUpgrade = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_channel":
		x.ProofChannel = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_upgrade":
		x.ProofUpgrade = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAck does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeAck) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.counterparty_upgrade":
		value := x.CounterpartyUpgrade
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_channel":
		value := x.ProofChannel
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_upgrade":
		value := x.ProofUpgrade
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAck does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeAck) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.counterparty_upgrade":
		x.CounterpartyUpgrade = value.Message().Interface().(*Upgrade)
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_channel":
		x.ProofChannel = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_upgrade":
		x.ProofUpgrade = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAck does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeAck) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.counterparty_upgrade":
		if x.CounterpartyUpgrade == nil {
			x.CounterpartyUpgrade = new(Upgrade)
		}
		return protoreflect.ValueOfMessage(x.CounterpartyUpgrade.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelUpgradeAck is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelUpgradeAck is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_channel":
		panic(fmt.Errorf("field proof_channel of message ibc.core.channel.v1.MsgChannelUpgradeAck is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_upgrade":
		panic(fmt.Errorf("field proof_upgrade of message ibc.core.channel.v1.MsgChannelUpgradeAck is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelUpgradeAck is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAck does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeAck) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.counterparty_upgrade":
		m := new(Upgrade)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_channel":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_upgrade":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeAck.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAck"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAck does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeAck) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeAck", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeAck) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeAck) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeAck) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeAck) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeAck)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CounterpartyUpgrade != nil {
			l = options.Size(x.CounterpartyUpgrade)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofChannel)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofUpgrade)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeAck)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x3a
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ProofUpgrade) > 0 {
			i -= len(x.ProofUpgrade)
			copy(dAtA[i:], x.ProofUpgrade)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofUpgrade)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ProofChannel) > 0 {
			i -= len(x.ProofChannel)
			copy(dAtA[i:], x.ProofChannel)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofChannel)))
			i--
			dAtA[i] = 0x22
		}
		if x.CounterpartyUpgrade != nil {
			encoded, err := options.Marshal(x.CounterpartyUpgrade)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeAck)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeAck: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeAck: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyUpgrade", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CounterpartyUpgrade == nil {
					x.CounterpartyUpgrade = &Upgrade{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CounterpartyUpgrade); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofChannel", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofChannel = append(x.ProofChannel[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofChannel == nil {
					x.ProofChannel = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofUpgrade", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofUpgrade = append(x.ProofUpgrade[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofUpgrade == nil {
					x.ProofUpgrade = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeAckResponse        protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeAckResponse_result protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeAckResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeAckResponse")
	fd_MsgChannelUpgradeAckResponse_result = md_MsgChannelUpgradeAckResponse.Fields().ByName("result")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeAckResponse)(nil)

type fastReflection_MsgChannelUpgradeAckResponse MsgChannelUpgradeAckResponse

func (x *MsgChannelUpgradeAckResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeAckResponse)(x)
}

func (x *MsgChannelUpgradeAckResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeAckResponse_messageType fastReflection_MsgChannelUpgradeAckResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeAckResponse_messageType{}

type fastReflection_MsgChannelUpgradeAckResponse_messageType struct{}

func (x fastReflection_MsgChannelUpgradeAckResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeAckResponse)(nil)
}
func (x fastReflection_MsgChannelUpgradeAckResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeAckResponse)
}
func (x fastReflection_MsgChannelUpgradeAckResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeAckResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeAckResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeAckResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeAckResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeAckResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeAckResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeAckResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeAckResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeAckResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeAckResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Result != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Result))
		if !f(fd_MsgChannelUpgradeAckResponse_result, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeAckResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAckResponse.result":
		return x.Result != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAckResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeAckResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAckResponse.result":
		x.Result = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAckResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeAckResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAckResponse.result":
		value := x.Result
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAckResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeAckResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAckResponse.result":
		x.Result = (ResponseResultType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAckResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeAckResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAckResponse.result":
		panic(fmt.Errorf("field result of message ibc.core.channel.v1.MsgChannelUpgradeAckResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAckResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeAckResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeAckResponse.result":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeAckResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeAckResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeAckResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeAckResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeAckResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeAckResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeAckResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeAckResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeAckResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Result != 0 {
			n += 1 + runtime.Sov(uint64(x.Result))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeAckResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Result != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Result))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeAckResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeAckResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeAckResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
				}
				x.Result = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Result |= ResponseResultType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeConfirm                            protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeConfirm_port_id                    protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeConfirm_channel_id                 protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeConfirm_counterparty_channel_state protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeConfirm_counterparty_upgrade       protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeConfirm_proof_channel              protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeConfirm_proof_upgrade              protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeConfirm_proof_height               protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeConfirm_signer                     protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeConfirm = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeConfirm")
	fd_MsgChannelUpgradeConfirm_port_id = md_MsgChannelUpgradeConfirm.Fields().ByName("port_id")
	fd_MsgChannelUpgradeConfirm_channel_id = md_MsgChannelUpgradeConfirm.Fields().ByName("channel_id")
	fd_MsgChannelUpgradeConfirm_counterparty_channel_state = md_MsgChannelUpgradeConfirm.Fields().ByName("counterparty_channel_state")
	fd_MsgChannelUpgradeConfirm_counterparty_upgrade = md_MsgChannelUpgradeConfirm.Fields().ByName("counterparty_upgrade")
	fd_MsgChannelUpgradeConfirm_proof_channel = md_MsgChannelUpgradeConfirm.Fields().ByName("proof_channel")
	fd_MsgChannelUpgradeConfirm_proof_upgrade = md_MsgChannelUpgradeConfirm.Fields().ByName("proof_upgrade")
	fd_MsgChannelUpgradeConfirm_proof_height = md_MsgChannelUpgradeConfirm.Fields().ByName("proof_height")
	fd_MsgChannelUpgradeConfirm_signer = md_MsgChannelUpgradeConfirm.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeConfirm)(nil)

type fastReflection_MsgChannelUpgradeConfirm MsgChannelUpgradeConfirm

func (x *MsgChannelUpgradeConfirm) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeConfirm)(x)
}

func (x *MsgChannelUpgradeConfirm) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeConfirm_messageType fastReflection_MsgChannelUpgradeConfirm_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeConfirm_messageType{}

type fastReflection_MsgChannelUpgradeConfirm_messageType struct{}

func (x fastReflection_MsgChannelUpgradeConfirm_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeConfirm)(nil)
}
func (x fastReflection_MsgChannelUpgradeConfirm_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeConfirm)
}
func (x fastReflection_MsgChannelUpgradeConfirm_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeConfirm
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeConfirm) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeConfirm
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeConfirm) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeConfirm_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeConfirm) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeConfirm)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeConfirm) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeConfirm)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeConfirm) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelUpgradeConfirm_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelUpgradeConfirm_channel_id, value) {
			return
		}
	}
	if x.CounterpartyChannelState != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.CounterpartyChannelState))
		if !f(fd_MsgChannelUpgradeConfirm_counterparty_channel_state, value) {
			return
		}
	}
	if x.CounterpartyUpgrade != nil {
		value := protoreflect.ValueOfMessage(x.CounterpartyUpgrade.ProtoReflect())
		if !f(fd_MsgChannelUpgradeConfirm_counterparty_upgrade, value) {
			return
		}
	}
	if len(x.ProofChannel) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofChannel)
		if !f(fd_MsgChannelUpgradeConfirm_proof_channel, value) {
			return
		}
	}
	if len(x.ProofUpgrade) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofUpgrade)
		if !f(fd_MsgChannelUpgradeConfirm_proof_upgrade, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgChannelUpgradeConfirm_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelUpgradeConfirm_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeConfirm) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_channel_state":
		return x.CounterpartyChannelState != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_upgrade":
		return x.CounterpartyUpgrade != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_channel":
		return len(x.ProofChannel) != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_upgrade":
		return len(x.ProofUpgrade) != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirm does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeConfirm) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_channel_state":
		x.CounterpartyChannelState = 0
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_upgrade":
		x.CounterpartyUpgrade = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_channel":
		x.ProofChannel = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_upgrade":
		x.ProofUpgrade = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirm does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeConfirm) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_channel_state":
		value := x.CounterpartyChannelState
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_upgrade":
		value := x.CounterpartyUpgrade
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_channel":
		value := x.ProofChannel
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_upgrade":
		value := x.ProofUpgrade
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirm does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeConfirm) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_channel_state":
		x.CounterpartyChannelState = (State)(value.Enum())
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_upgrade":
		x.CounterpartyUpgrade = value.Message().Interface().(*Upgrade)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_channel":
		x.ProofChannel = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_upgrade":
		x.ProofUpgrade = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirm does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeConfirm) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_upgrade":
		if x.CounterpartyUpgrade == nil {
			x.CounterpartyUpgrade = new(Upgrade)
		}
		return protoreflect.ValueOfMessage(x.CounterpartyUpgrade.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelUpgradeConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelUpgradeConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_channel_state":
		panic(fmt.Errorf("field counterparty_channel_state of message ibc.core.channel.v1.MsgChannelUpgradeConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_channel":
		panic(fmt.Errorf("field proof_channel of message ibc.core.channel.v1.MsgChannelUpgradeConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_upgrade":
		panic(fmt.Errorf("field proof_upgrade of message ibc.core.channel.v1.MsgChannelUpgradeConfirm is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelUpgradeConfirm is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirm does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeConfirm) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_channel_state":
		return protoreflect.ValueOfEnum(0)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_upgrade":
		m := new(Upgrade)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_channel":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_upgrade":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirm.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirm"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirm does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeConfirm) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeConfirm", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeConfirm) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeConfirm) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeConfirm) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeConfirm) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeConfirm)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CounterpartyChannelState != 0 {
			n += 1 + runtime.Sov(uint64(x.CounterpartyChannelState))
		}
		if x.CounterpartyUpgrade != nil {
			l = options.Size(x.CounterpartyUpgrade)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofChannel)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofUpgrade)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeConfirm)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x42
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.ProofUpgrade) > 0 {
			i -= len(x.ProofUpgrade)
			copy(dAtA[i:], x.ProofUpgrade)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofUpgrade)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ProofChannel) > 0 {
			i -= len(x.ProofChannel)
			copy(dAtA[i:], x.ProofChannel)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofChannel)))
			i--
			dAtA[i] = 0x2a
		}
		if x.CounterpartyUpgrade != nil {
			encoded, err := options.Marshal(x.CounterpartyUpgrade)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.CounterpartyChannelState != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CounterpartyChannelState))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeConfirm)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeConfirm: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeConfirm: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyChannelState", wireType)
				}
				x.CounterpartyChannelState = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CounterpartyChannelState |= State(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyUpgrade", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CounterpartyUpgrade == nil {
					x.CounterpartyUpgrade = &Upgrade{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CounterpartyUpgrade); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofChannel", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofChannel = append(x.ProofChannel[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofChannel == nil {
					x.ProofChannel = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofUpgrade", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofUpgrade = append(x.ProofUpgrade[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofUpgrade == nil {
					x.ProofUpgrade = []byte{}
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeConfirmResponse        protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeConfirmResponse_result protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeConfirmResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeConfirmResponse")
	fd_MsgChannelUpgradeConfirmResponse_result = md_MsgChannelUpgradeConfirmResponse.Fields().ByName("result")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeConfirmResponse)(nil)

type fastReflection_MsgChannelUpgradeConfirmResponse MsgChannelUpgradeConfirmResponse

func (x *MsgChannelUpgradeConfirmResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeConfirmResponse)(x)
}

func (x *MsgChannelUpgradeConfirmResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeConfirmResponse_messageType fastReflection_MsgChannelUpgradeConfirmResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeConfirmResponse_messageType{}

type fastReflection_MsgChannelUpgradeConfirmResponse_messageType struct{}

func (x fastReflection_MsgChannelUpgradeConfirmResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeConfirmResponse)(nil)
}
func (x fastReflection_MsgChannelUpgradeConfirmResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeConfirmResponse)
}
func (x fastReflection_MsgChannelUpgradeConfirmResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeConfirmResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeConfirmResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeConfirmResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeConfirmResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeConfirmResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Result != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Result))
		if !f(fd_MsgChannelUpgradeConfirmResponse_result, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse.result":
		return x.Result != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse.result":
		x.Result = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse.result":
		value := x.Result
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse.result":
		x.Result = (ResponseResultType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse.result":
		panic(fmt.Errorf("field result of message ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse.result":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeConfirmResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeConfirmResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Result != 0 {
			n += 1 + runtime.Sov(uint64(x.Result))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeConfirmResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Result != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Result))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeConfirmResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeConfirmResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeConfirmResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
				}
				x.Result = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Result |= ResponseResultType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeOpen                               protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeOpen_port_id                       protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeOpen_channel_id                    protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeOpen_counterparty_channel_state    protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeOpen_counterparty_upgrade_sequence protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeOpen_proof_channel                 protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeOpen_proof_height                  protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeOpen_signer                        protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeOpen = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeOpen")
	fd_MsgChannelUpgradeOpen_port_id = md_MsgChannelUpgradeOpen.Fields().ByName("port_id")
	fd_MsgChannelUpgradeOpen_channel_id = md_MsgChannelUpgradeOpen.Fields().ByName("channel_id")
	fd_MsgChannelUpgradeOpen_counterparty_channel_state = md_MsgChannelUpgradeOpen.Fields().ByName("counterparty_channel_state")
	fd_MsgChannelUpgradeOpen_counterparty_upgrade_sequence = md_MsgChannelUpgradeOpen.Fields().ByName("counterparty_upgrade_sequence")
	fd_MsgChannelUpgradeOpen_proof_channel = md_MsgChannelUpgradeOpen.Fields().ByName("proof_channel")
	fd_MsgChannelUpgradeOpen_proof_height = md_MsgChannelUpgradeOpen.Fields().ByName("proof_height")
	fd_MsgChannelUpgradeOpen_signer = md_MsgChannelUpgradeOpen.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeOpen)(nil)

type fastReflection_MsgChannelUpgradeOpen MsgChannelUpgradeOpen

func (x *MsgChannelUpgradeOpen) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeOpen)(x)
}

func (x *MsgChannelUpgradeOpen) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeOpen_messageType fastReflection_MsgChannelUpgradeOpen_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeOpen_messageType{}

type fastReflection_MsgChannelUpgradeOpen_messageType struct{}

func (x fastReflection_MsgChannelUpgradeOpen_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeOpen)(nil)
}
func (x fastReflection_MsgChannelUpgradeOpen_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeOpen)
}
func (x fastReflection_MsgChannelUpgradeOpen_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeOpen
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeOpen) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeOpen
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeOpen) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeOpen_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeOpen) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeOpen)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeOpen) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeOpen)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeOpen) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelUpgradeOpen_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelUpgradeOpen_channel_id, value) {
			return
		}
	}
	if x.CounterpartyChannelState != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.CounterpartyChannelState))
		if !f(fd_MsgChannelUpgradeOpen_counterparty_channel_state, value) {
			return
		}
	}
	if x.CounterpartyUpgradeSequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CounterpartyUpgradeSequence)
		if !f(fd_MsgChannelUpgradeOpen_counterparty_upgrade_sequence, value) {
			return
		}
	}
	if len(x.ProofChannel) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofChannel)
		if !f(fd_MsgChannelUpgradeOpen_proof_channel, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgChannelUpgradeOpen_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelUpgradeOpen_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeOpen) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_channel_state":
		return x.CounterpartyChannelState != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_upgrade_sequence":
		return x.CounterpartyUpgradeSequence != uint64(0)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_channel":
		return len(x.ProofChannel) != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpen"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpen does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeOpen) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_channel_state":
		x.CounterpartyChannelState = 0
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_upgrade_sequence":
		x.CounterpartyUpgradeSequence = uint64(0)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_channel":
		x.ProofChannel = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpen"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpen does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeOpen) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_channel_state":
		value := x.CounterpartyChannelState
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_upgrade_sequence":
		value := x.CounterpartyUpgradeSequence
		return protoreflect.ValueOfUint64(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_channel":
		value := x.ProofChannel
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpen"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpen does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeOpen) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_channel_state":
		x.CounterpartyChannelState = (State)(value.Enum())
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_upgrade_sequence":
		x.CounterpartyUpgradeSequence = value.Uint()
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_channel":
		x.ProofChannel = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpen"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpen does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeOpen) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelUpgradeOpen is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelUpgradeOpen is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_channel_state":
		panic(fmt.Errorf("field counterparty_channel_state of message ibc.core.channel.v1.MsgChannelUpgradeOpen is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_upgrade_sequence":
		panic(fmt.Errorf("field counterparty_upgrade_sequence of message ibc.core.channel.v1.MsgChannelUpgradeOpen is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_channel":
		panic(fmt.Errorf("field proof_channel of message ibc.core.channel.v1.MsgChannelUpgradeOpen is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelUpgradeOpen is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpen"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpen does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeOpen) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_channel_state":
		return protoreflect.ValueOfEnum(0)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_upgrade_sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_channel":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeOpen.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpen"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpen does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeOpen) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeOpen", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeOpen) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeOpen) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeOpen) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeOpen) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeOpen)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CounterpartyChannelState != 0 {
			n += 1 + runtime.Sov(uint64(x.CounterpartyChannelState))
		}
		if x.CounterpartyUpgradeSequence != 0 {
			n += 1 + runtime.Sov(uint64(x.CounterpartyUpgradeSequence))
		}
		l = len(x.ProofChannel)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeOpen)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x3a
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ProofChannel) > 0 {
			i -= len(x.ProofChannel)
			copy(dAtA[i:], x.ProofChannel)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofChannel)))
			i--
			dAtA[i] = 0x2a
		}
		if x.CounterpartyUpgradeSequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CounterpartyUpgradeSequence))
			i--
			dAtA[i] = 0x20
		}
		if x.CounterpartyChannelState != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CounterpartyChannelState))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeOpen)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeOpen: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeOpen: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyChannelState", wireType)
				}
				x.CounterpartyChannelState = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CounterpartyChannelState |= State(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyUpgradeSequence", wireType)
				}
				x.CounterpartyUpgradeSequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CounterpartyUpgradeSequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofChannel", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofChannel = append(x.ProofChannel[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofChannel == nil {
					x.ProofChannel = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeOpenResponse protoreflect.MessageDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeOpenResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeOpenResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeOpenResponse)(nil)

type fastReflection_MsgChannelUpgradeOpenResponse MsgChannelUpgradeOpenResponse

func (x *MsgChannelUpgradeOpenResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeOpenResponse)(x)
}

func (x *MsgChannelUpgradeOpenResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeOpenResponse_messageType fastReflection_MsgChannelUpgradeOpenResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeOpenResponse_messageType{}

type fastReflection_MsgChannelUpgradeOpenResponse_messageType struct{}

func (x fastReflection_MsgChannelUpgradeOpenResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeOpenResponse)(nil)
}
func (x fastReflection_MsgChannelUpgradeOpenResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeOpenResponse)
}
func (x fastReflection_MsgChannelUpgradeOpenResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeOpenResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeOpenResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeOpenResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeOpenResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeOpenResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpenResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpenResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpenResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpenResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpenResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpenResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpenResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpenResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpenResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpenResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeOpenResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeOpenResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeOpenResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeOpenResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeOpenResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeOpenResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeOpenResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeOpenResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeOpenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeTimeout                      protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeTimeout_port_id              protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTimeout_channel_id           protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTimeout_counterparty_channel protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTimeout_proof_channel        protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTimeout_proof_height         protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeTimeout_signer               protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeTimeout = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeTimeout")
	fd_MsgChannelUpgradeTimeout_port_id = md_MsgChannelUpgradeTimeout.Fields().ByName("port_id")
	fd_MsgChannelUpgradeTimeout_channel_id = md_MsgChannelUpgradeTimeout.Fields().ByName("channel_id")
	fd_MsgChannelUpgradeTimeout_counterparty_channel = md_MsgChannelUpgradeTimeout.Fields().ByName("counterparty_channel")
	fd_MsgChannelUpgradeTimeout_proof_channel = md_MsgChannelUpgradeTimeout.Fields().ByName("proof_channel")
	fd_MsgChannelUpgradeTimeout_proof_height = md_MsgChannelUpgradeTimeout.Fields().ByName("proof_height")
	fd_MsgChannelUpgradeTimeout_signer = md_MsgChannelUpgradeTimeout.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeTimeout)(nil)

type fastReflection_MsgChannelUpgradeTimeout MsgChannelUpgradeTimeout

func (x *MsgChannelUpgradeTimeout) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeTimeout)(x)
}

func (x *MsgChannelUpgradeTimeout) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeTimeout_messageType fastReflection_MsgChannelUpgradeTimeout_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeTimeout_messageType{}

type fastReflection_MsgChannelUpgradeTimeout_messageType struct{}

func (x fastReflection_MsgChannelUpgradeTimeout_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeTimeout)(nil)
}
func (x fastReflection_MsgChannelUpgradeTimeout_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeTimeout)
}
func (x fastReflection_MsgChannelUpgradeTimeout_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeTimeout
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeTimeout) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeTimeout
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeTimeout) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeTimeout_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeTimeout) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeTimeout)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeTimeout) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeTimeout)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeTimeout) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelUpgradeTimeout_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelUpgradeTimeout_channel_id, value) {
			return
		}
	}
	if x.CounterpartyChannel != nil {
		value := protoreflect.ValueOfMessage(x.CounterpartyChannel.ProtoReflect())
		if !f(fd_MsgChannelUpgradeTimeout_counterparty_channel, value) {
			return
		}
	}
	if len(x.ProofChannel) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofChannel)
		if !f(fd_MsgChannelUpgradeTimeout_proof_channel, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgChannelUpgradeTimeout_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelUpgradeTimeout_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeTimeout) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.counterparty_channel":
		return x.CounterpartyChannel != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_channel":
		return len(x.ProofChannel) != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeout does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTimeout) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.counterparty_channel":
		x.CounterpartyChannel = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_channel":
		x.ProofChannel = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeout does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeTimeout) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.counterparty_channel":
		value := x.CounterpartyChannel
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_channel":
		value := x.ProofChannel
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeout does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTimeout) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.counterparty_channel":
		x.CounterpartyChannel = value.Message().Interface().(*Channel)
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_channel":
		x.ProofChannel = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeout does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTimeout) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.counterparty_channel":
		if x.CounterpartyChannel == nil {
			x.CounterpartyChannel = new(Channel)
		}
		return protoreflect.ValueOfMessage(x.CounterpartyChannel.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelUpgradeTimeout is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelUpgradeTimeout is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_channel":
		panic(fmt.Errorf("field proof_channel of message ibc.core.channel.v1.MsgChannelUpgradeTimeout is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelUpgradeTimeout is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeout does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeTimeout) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.counterparty_channel":
		m := new(Channel)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_channel":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeTimeout.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeout"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeout does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeTimeout) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeTimeout", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeTimeout) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTimeout) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeTimeout) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeTimeout) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeTimeout)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CounterpartyChannel != nil {
			l = options.Size(x.CounterpartyChannel)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofChannel)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeTimeout)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x32
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ProofChannel) > 0 {
			i -= len(x.ProofChannel)
			copy(dAtA[i:], x.ProofChannel)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofChannel)))
			i--
			dAtA[i] = 0x22
		}
		if x.CounterpartyChannel != nil {
			encoded, err := options.Marshal(x.CounterpartyChannel)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeTimeout)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeTimeout: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeTimeout: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CounterpartyChannel", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CounterpartyChannel == nil {
					x.CounterpartyChannel = &Channel{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CounterpartyChannel); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofChannel", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofChannel = append(x.ProofChannel[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofChannel == nil {
					x.ProofChannel = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeTimeoutResponse protoreflect.MessageDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeTimeoutResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeTimeoutResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeTimeoutResponse)(nil)

type fastReflection_MsgChannelUpgradeTimeoutResponse MsgChannelUpgradeTimeoutResponse

func (x *MsgChannelUpgradeTimeoutResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeTimeoutResponse)(x)
}

func (x *MsgChannelUpgradeTimeoutResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeTimeoutResponse_messageType fastReflection_MsgChannelUpgradeTimeoutResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeTimeoutResponse_messageType{}

type fastReflection_MsgChannelUpgradeTimeoutResponse_messageType struct{}

func (x fastReflection_MsgChannelUpgradeTimeoutResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeTimeoutResponse)(nil)
}
func (x fastReflection_MsgChannelUpgradeTimeoutResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeTimeoutResponse)
}
func (x fastReflection_MsgChannelUpgradeTimeoutResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeTimeoutResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeTimeoutResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeTimeoutResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeTimeoutResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeTimeoutResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeTimeoutResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeTimeoutResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeTimeoutResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeTimeoutResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeTimeoutResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeTimeoutResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeCancel                     protoreflect.MessageDescriptor
	fd_MsgChannelUpgradeCancel_port_id             protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeCancel_channel_id          protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeCancel_error_receipt       protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeCancel_proof_error_receipt protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeCancel_proof_height        protoreflect.FieldDescriptor
	fd_MsgChannelUpgradeCancel_signer              protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeCancel = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeCancel")
	fd_MsgChannelUpgradeCancel_port_id = md_MsgChannelUpgradeCancel.Fields().ByName("port_id")
	fd_MsgChannelUpgradeCancel_channel_id = md_MsgChannelUpgradeCancel.Fields().ByName("channel_id")
	fd_MsgChannelUpgradeCancel_error_receipt = md_MsgChannelUpgradeCancel.Fields().ByName("error_receipt")
	fd_MsgChannelUpgradeCancel_proof_error_receipt = md_MsgChannelUpgradeCancel.Fields().ByName("proof_error_receipt")
	fd_MsgChannelUpgradeCancel_proof_height = md_MsgChannelUpgradeCancel.Fields().ByName("proof_height")
	fd_MsgChannelUpgradeCancel_signer = md_MsgChannelUpgradeCancel.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeCancel)(nil)

type fastReflection_MsgChannelUpgradeCancel MsgChannelUpgradeCancel

func (x *MsgChannelUpgradeCancel) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeCancel)(x)
}

func (x *MsgChannelUpgradeCancel) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeCancel_messageType fastReflection_MsgChannelUpgradeCancel_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeCancel_messageType{}

type fastReflection_MsgChannelUpgradeCancel_messageType struct{}

func (x fastReflection_MsgChannelUpgradeCancel_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeCancel)(nil)
}
func (x fastReflection_MsgChannelUpgradeCancel_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeCancel)
}
func (x fastReflection_MsgChannelUpgradeCancel_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeCancel
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeCancel) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeCancel
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeCancel) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeCancel_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeCancel) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeCancel)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeCancel) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeCancel)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeCancel) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgChannelUpgradeCancel_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgChannelUpgradeCancel_channel_id, value) {
			return
		}
	}
	if x.ErrorReceipt != nil {
		value := protoreflect.ValueOfMessage(x.ErrorReceipt.ProtoReflect())
		if !f(fd_MsgChannelUpgradeCancel_error_receipt, value) {
			return
		}
	}
	if len(x.ProofErrorReceipt) != 0 {
		value := protoreflect.ValueOfBytes(x.ProofErrorReceipt)
		if !f(fd_MsgChannelUpgradeCancel_proof_error_receipt, value) {
			return
		}
	}
	if x.ProofHeight != nil {
		value := protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
		if !f(fd_MsgChannelUpgradeCancel_proof_height, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgChannelUpgradeCancel_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeCancel) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.error_receipt":
		return x.ErrorReceipt != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_error_receipt":
		return len(x.ProofErrorReceipt) != 0
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_height":
		return x.ProofHeight != nil
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancel"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancel does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeCancel) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.error_receipt":
		x.ErrorReceipt = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_error_receipt":
		x.ProofErrorReceipt = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_height":
		x.ProofHeight = nil
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancel"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancel does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeCancel) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.error_receipt":
		value := x.ErrorReceipt
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_error_receipt":
		value := x.ProofErrorReceipt
		return protoreflect.ValueOfBytes(value)
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_height":
		value := x.ProofHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancel"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancel does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeCancel) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.error_receipt":
		x.ErrorReceipt = value.Message().Interface().(*ErrorReceipt)
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_error_receipt":
		x.ProofErrorReceipt = value.Bytes()
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_height":
		x.ProofHeight = value.Message().Interface().(*v1.Height)
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancel"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancel does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeCancel) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.error_receipt":
		if x.ErrorReceipt == nil {
			x.ErrorReceipt = new(ErrorReceipt)
		}
		return protoreflect.ValueOfMessage(x.ErrorReceipt.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_height":
		if x.ProofHeight == nil {
			x.ProofHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.ProofHeight.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgChannelUpgradeCancel is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgChannelUpgradeCancel is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_error_receipt":
		panic(fmt.Errorf("field proof_error_receipt of message ibc.core.channel.v1.MsgChannelUpgradeCancel is not mutable"))
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgChannelUpgradeCancel is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancel"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancel does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeCancel) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.error_receipt":
		m := new(ErrorReceipt)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_error_receipt":
		return protoreflect.ValueOfBytes(nil)
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.MsgChannelUpgradeCancel.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancel"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancel does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeCancel) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeCancel", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeCancel) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeCancel) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeCancel) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeCancel) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeCancel)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ErrorReceipt != nil {
			l = options.Size(x.ErrorReceipt)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProofErrorReceipt)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofHeight != nil {
			l = options.Size(x.ProofHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeCancel)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x32
		}
		if x.ProofHeight != nil {
			encoded, err := options.Marshal(x.ProofHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ProofErrorReceipt) > 0 {
			i -= len(x.ProofErrorReceipt)
			copy(dAtA[i:], x.ProofErrorReceipt)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProofErrorReceipt)))
			i--
			dAtA[i] = 0x22
		}
		if x.ErrorReceipt != nil {
			encoded, err := options.Marshal(x.ErrorReceipt)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeCancel)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeCancel: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeCancel: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ErrorReceipt", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ErrorReceipt == nil {
					x.ErrorReceipt = &ErrorReceipt{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ErrorReceipt); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofErrorReceipt", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofErrorReceipt = append(x.ProofErrorReceipt[:0], dAtA[iNdEx:postIndex]...)
				if x.ProofErrorReceipt == nil {
					x.ProofErrorReceipt = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofHeight == nil {
					x.ProofHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChannelUpgradeCancelResponse protoreflect.MessageDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgChannelUpgradeCancelResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgChannelUpgradeCancelResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgChannelUpgradeCancelResponse)(nil)

type fastReflection_MsgChannelUpgradeCancelResponse MsgChannelUpgradeCancelResponse

func (x *MsgChannelUpgradeCancelResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeCancelResponse)(x)
}

func (x *MsgChannelUpgradeCancelResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChannelUpgradeCancelResponse_messageType fastReflection_MsgChannelUpgradeCancelResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChannelUpgradeCancelResponse_messageType{}

type fastReflection_MsgChannelUpgradeCancelResponse_messageType struct{}

func (x fastReflection_MsgChannelUpgradeCancelResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChannelUpgradeCancelResponse)(nil)
}
func (x fastReflection_MsgChannelUpgradeCancelResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeCancelResponse)
}
func (x fastReflection_MsgChannelUpgradeCancelResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeCancelResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChannelUpgradeCancelResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChannelUpgradeCancelResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChannelUpgradeCancelResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChannelUpgradeCancelResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancelResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancelResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancelResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancelResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancelResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancelResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancelResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancelResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancelResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancelResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgChannelUpgradeCancelResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgChannelUpgradeCancelResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgChannelUpgradeCancelResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChannelUpgradeCancelResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChannelUpgradeCancelResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeCancelResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChannelUpgradeCancelResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeCancelResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChannelUpgradeCancelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateParams           protoreflect.MessageDescriptor
	fd_MsgUpdateParams_authority protoreflect.FieldDescriptor
	fd_MsgUpdateParams_params    protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgUpdateParams = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgUpdateParams")
	fd_MsgUpdateParams_authority = md_MsgUpdateParams.Fields().ByName("authority")
	fd_MsgUpdateParams_params = md_MsgUpdateParams.Fields().ByName("params")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParams)(nil)

type fastReflection_MsgUpdateParams MsgUpdateParams

func (x *MsgUpdateParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(x)
}

func (x *MsgUpdateParams) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParams_messageType fastReflection_MsgUpdateParams_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParams_messageType{}

type fastReflection_MsgUpdateParams_messageType struct{}

func (x fastReflection_MsgUpdateParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParams)(nil)
}
func (x fastReflection_MsgUpdateParams_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}
func (x fastReflection_MsgUpdateParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParams) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParams) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParams) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParams) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgUpdateParams_authority, value) {
			return
		}
	}
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_MsgUpdateParams_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgUpdateParams.authority":
		return x.Authority != ""
	case "ibc.core.channel.v1.MsgUpdateParams.params":
		return x.Params != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgUpdateParams.authority":
		x.Authority = ""
	case "ibc.core.channel.v1.MsgUpdateParams.params":
		x.Params = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgUpdateParams.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgUpdateParams.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgUpdateParams.authority":
		x.Authority = value.Interface().(string)
	case "ibc.core.channel.v1.MsgUpdateParams.params":
		x.Params = value.Message().Interface().(*Params)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgUpdateParams.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "ibc.core.channel.v1.MsgUpdateParams.authority":
		panic(fmt.Errorf("field authority of message ibc.core.channel.v1.MsgUpdateParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgUpdateParams.authority":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgUpdateParams.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParams"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgUpdateParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateParamsResponse protoreflect.MessageDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgUpdateParamsResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgUpdateParamsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateParamsResponse)(nil)

type fastReflection_MsgUpdateParamsResponse MsgUpdateParamsResponse

func (x *MsgUpdateParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(x)
}

func (x *MsgUpdateParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateParamsResponse_messageType fastReflection_MsgUpdateParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateParamsResponse_messageType{}

type fastReflection_MsgUpdateParamsResponse_messageType struct{}

func (x fastReflection_MsgUpdateParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateParamsResponse)(nil)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}
func (x fastReflection_MsgUpdateParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateParamsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgUpdateParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgPruneAcknowledgements            protoreflect.MessageDescriptor
	fd_MsgPruneAcknowledgements_port_id    protoreflect.FieldDescriptor
	fd_MsgPruneAcknowledgements_channel_id protoreflect.FieldDescriptor
	fd_MsgPruneAcknowledgements_limit      protoreflect.FieldDescriptor
	fd_MsgPruneAcknowledgements_signer     protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgPruneAcknowledgements = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgPruneAcknowledgements")
	fd_MsgPruneAcknowledgements_port_id = md_MsgPruneAcknowledgements.Fields().ByName("port_id")
	fd_MsgPruneAcknowledgements_channel_id = md_MsgPruneAcknowledgements.Fields().ByName("channel_id")
	fd_MsgPruneAcknowledgements_limit = md_MsgPruneAcknowledgements.Fields().ByName("limit")
	fd_MsgPruneAcknowledgements_signer = md_MsgPruneAcknowledgements.Fields().ByName("signer")
}

var _ protoreflect.Message = (*fastReflection_MsgPruneAcknowledgements)(nil)

type fastReflection_MsgPruneAcknowledgements MsgPruneAcknowledgements

func (x *MsgPruneAcknowledgements) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgPruneAcknowledgements)(x)
}

func (x *MsgPruneAcknowledgements) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgPruneAcknowledgements_messageType fastReflection_MsgPruneAcknowledgements_messageType
var _ protoreflect.MessageType = fastReflection_MsgPruneAcknowledgements_messageType{}

type fastReflection_MsgPruneAcknowledgements_messageType struct{}

func (x fastReflection_MsgPruneAcknowledgements_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgPruneAcknowledgements)(nil)
}
func (x fastReflection_MsgPruneAcknowledgements_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgPruneAcknowledgements)
}
func (x fastReflection_MsgPruneAcknowledgements_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgPruneAcknowledgements
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgPruneAcknowledgements) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgPruneAcknowledgements
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgPruneAcknowledgements) Type() protoreflect.MessageType {
	return _fastReflection_MsgPruneAcknowledgements_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgPruneAcknowledgements) New() protoreflect.Message {
	return new(fastReflection_MsgPruneAcknowledgements)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgPruneAcknowledgements) Interface() protoreflect.ProtoMessage {
	return (*MsgPruneAcknowledgements)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgPruneAcknowledgements) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PortId != "" {
		value := protoreflect.ValueOfString(x.PortId)
		if !f(fd_MsgPruneAcknowledgements_port_id, value) {
			return
		}
	}
	if x.ChannelId != "" {
		value := protoreflect.ValueOfString(x.ChannelId)
		if !f(fd_MsgPruneAcknowledgements_channel_id, value) {
			return
		}
	}
	if x.Limit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Limit)
		if !f(fd_MsgPruneAcknowledgements_limit, value) {
			return
		}
	}
	if x.Signer != "" {
		value := protoreflect.ValueOfString(x.Signer)
		if !f(fd_MsgPruneAcknowledgements_signer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgPruneAcknowledgements) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.port_id":
		return x.PortId != ""
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.channel_id":
		return x.ChannelId != ""
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.limit":
		return x.Limit != uint64(0)
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.signer":
		return x.Signer != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgements"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgements does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPruneAcknowledgements) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.port_id":
		x.PortId = ""
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.channel_id":
		x.ChannelId = ""
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.limit":
		x.Limit = uint64(0)
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.signer":
		x.Signer = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgements"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgements does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgPruneAcknowledgements) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.port_id":
		value := x.PortId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.channel_id":
		value := x.ChannelId
		return protoreflect.ValueOfString(value)
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.limit":
		value := x.Limit
		return protoreflect.ValueOfUint64(value)
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.signer":
		value := x.Signer
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgements"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgements does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPruneAcknowledgements) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.port_id":
		x.PortId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.channel_id":
		x.ChannelId = value.Interface().(string)
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.limit":
		x.Limit = value.Uint()
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.signer":
		x.Signer = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgements"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgements does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPruneAcknowledgements) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.port_id":
		panic(fmt.Errorf("field port_id of message ibc.core.channel.v1.MsgPruneAcknowledgements is not mutable"))
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.channel_id":
		panic(fmt.Errorf("field channel_id of message ibc.core.channel.v1.MsgPruneAcknowledgements is not mutable"))
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.limit":
		panic(fmt.Errorf("field limit of message ibc.core.channel.v1.MsgPruneAcknowledgements is not mutable"))
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.signer":
		panic(fmt.Errorf("field signer of message ibc.core.channel.v1.MsgPruneAcknowledgements is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgements"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgements does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgPruneAcknowledgements) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.port_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.channel_id":
		return protoreflect.ValueOfString("")
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.limit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.core.channel.v1.MsgPruneAcknowledgements.signer":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgements"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgements does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgPruneAcknowledgements) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgPruneAcknowledgements", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgPruneAcknowledgements) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPruneAcknowledgements) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgPruneAcknowledgements) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgPruneAcknowledgements) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgPruneAcknowledgements)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Limit != 0 {
			n += 1 + runtime.Sov(uint64(x.Limit))
		}
		l = len(x.Signer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgPruneAcknowledgements)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signer) > 0 {
			i -= len(x.Signer)
			copy(dAtA[i:], x.Signer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signer)))
			i--
			dAtA[i] = 0x22
		}
		if x.Limit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Limit))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ChannelId) > 0 {
			i -= len(x.ChannelId)
			copy(dAtA[i:], x.ChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChannelId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PortId) > 0 {
			i -= len(x.PortId)
			copy(dAtA[i:], x.PortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PortId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgPruneAcknowledgements)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgPruneAcknowledgements: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgPruneAcknowledgements: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
				}
				x.Limit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Limit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgPruneAcknowledgementsResponse                           protoreflect.MessageDescriptor
	fd_MsgPruneAcknowledgementsResponse_total_pruned_sequences    protoreflect.FieldDescriptor
	fd_MsgPruneAcknowledgementsResponse_total_remaining_sequences protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_tx_proto_init()
	md_MsgPruneAcknowledgementsResponse = File_ibc_core_channel_v1_tx_proto.Messages().ByName("MsgPruneAcknowledgementsResponse")
	fd_MsgPruneAcknowledgementsResponse_total_pruned_sequences = md_MsgPruneAcknowledgementsResponse.Fields().ByName("total_pruned_sequences")
	fd_MsgPruneAcknowledgementsResponse_total_remaining_sequences = md_MsgPruneAcknowledgementsResponse.Fields().ByName("total_remaining_sequences")
}

var _ protoreflect.Message = (*fastReflection_MsgPruneAcknowledgementsResponse)(nil)

type fastReflection_MsgPruneAcknowledgementsResponse MsgPruneAcknowledgementsResponse

func (x *MsgPruneAcknowledgementsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgPruneAcknowledgementsResponse)(x)
}

func (x *MsgPruneAcknowledgementsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgPruneAcknowledgementsResponse_messageType fastReflection_MsgPruneAcknowledgementsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgPruneAcknowledgementsResponse_messageType{}

type fastReflection_MsgPruneAcknowledgementsResponse_messageType struct{}

func (x fastReflection_MsgPruneAcknowledgementsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgPruneAcknowledgementsResponse)(nil)
}
func (x fastReflection_MsgPruneAcknowledgementsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgPruneAcknowledgementsResponse)
}
func (x fastReflection_MsgPruneAcknowledgementsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgPruneAcknowledgementsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgPruneAcknowledgementsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgPruneAcknowledgementsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgPruneAcknowledgementsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgPruneAcknowledgementsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TotalPrunedSequences != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalPrunedSequences)
		if !f(fd_MsgPruneAcknowledgementsResponse_total_pruned_sequences, value) {
			return
		}
	}
	if x.TotalRemainingSequences != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TotalRemainingSequences)
		if !f(fd_MsgPruneAcknowledgementsResponse_total_remaining_sequences, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_pruned_sequences":
		return x.TotalPrunedSequences != uint64(0)
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_remaining_sequences":
		return x.TotalRemainingSequences != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgementsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgementsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_pruned_sequences":
		x.TotalPrunedSequences = uint64(0)
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_remaining_sequences":
		x.TotalRemainingSequences = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgementsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgementsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_pruned_sequences":
		value := x.TotalPrunedSequences
		return protoreflect.ValueOfUint64(value)
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_remaining_sequences":
		value := x.TotalRemainingSequences
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgementsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgementsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_pruned_sequences":
		x.TotalPrunedSequences = value.Uint()
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_remaining_sequences":
		x.TotalRemainingSequences = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgementsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgementsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_pruned_sequences":
		panic(fmt.Errorf("field total_pruned_sequences of message ibc.core.channel.v1.MsgPruneAcknowledgementsResponse is not mutable"))
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_remaining_sequences":
		panic(fmt.Errorf("field total_remaining_sequences of message ibc.core.channel.v1.MsgPruneAcknowledgementsResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgementsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgementsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_pruned_sequences":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.core.channel.v1.MsgPruneAcknowledgementsResponse.total_remaining_sequences":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.MsgPruneAcknowledgementsResponse"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.MsgPruneAcknowledgementsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.MsgPruneAcknowledgementsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgPruneAcknowledgementsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgPruneAcknowledgementsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TotalPrunedSequences != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalPrunedSequences))
		}
		if x.TotalRemainingSequences != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalRemainingSequences))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgPruneAcknowledgementsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TotalRemainingSequences != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalRemainingSequences))
			i--
			dAtA[i] = 0x10
		}
		if x.TotalPrunedSequences != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalPrunedSequences))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgPruneAcknowledgementsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgPruneAcknowledgementsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgPruneAcknowledgementsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalPrunedSequences", wireType)
				}
				x.TotalPrunedSequences = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalPrunedSequences |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalRemainingSequences", wireType)
				}
				x.TotalRemainingSequences = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalRemainingSequences |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: ibc/core/channel/v1/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ResponseResultType defines the possible outcomes of the execution of a message
type ResponseResultType int32

const (
	// Default zero value enumeration
	ResponseResultType_RESPONSE_RESULT_TYPE_UNSPECIFIED ResponseResultType = 0
	// The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
	ResponseResultType_RESPONSE_RESULT_TYPE_NOOP ResponseResultType = 1
	// The message was executed successfully
	ResponseResultType_RESPONSE_RESULT_TYPE_SUCCESS ResponseResultType = 2
	// The message was executed unsuccessfully
	ResponseResultType_RESPONSE_RESULT_TYPE_FAILURE ResponseResultType = 3
)

// Enum value maps for ResponseResultType.
var (
	ResponseResultType_name = map[int32]string{
		0: "RESPONSE_RESULT_TYPE_UNSPECIFIED",
		1: "RESPONSE_RESULT_TYPE_NOOP",
		2: "RESPONSE_RESULT_TYPE_SUCCESS",
		3: "RESPONSE_RESULT_TYPE_FAILURE",
	}
	ResponseResultType_value = map[string]int32{
		"RESPONSE_RESULT_TYPE_UNSPECIFIED": 0,
		"RESPONSE_RESULT_TYPE_NOOP":        1,
		"RESPONSE_RESULT_TYPE_SUCCESS":     2,
		"RESPONSE_RESULT_TYPE_FAILURE":     3,
	}
)

func (x ResponseResultType) Enum() *ResponseResultType {
	p := new(ResponseResultType)
	*p = x
	return p
}

func (x ResponseResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_ibc_core_channel_v1_tx_proto_enumTypes[0].Descriptor()
}

func (ResponseResultType) Type() protoreflect.EnumType {
	return &file_ibc_core_channel_v1_tx_proto_enumTypes[0]
}

func (x ResponseResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseResultType.Descriptor instead.
func (ResponseResultType) EnumDescriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{0}
}

// MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It
// is called by a relayer on Chain A.
type MsgChannelOpenInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId  string   `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	Channel *Channel `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Signer  string   `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelOpenInit) Reset() {
	*x = MsgChannelOpenInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelOpenInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelOpenInit) ProtoMessage() {}

// Deprecated: Use MsgChannelOpenInit.ProtoReflect.Descriptor instead.
func (*MsgChannelOpenInit) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgChannelOpenInit) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelOpenInit) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *MsgChannelOpenInit) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelOpenInitResponse defines the Msg/ChannelOpenInit response type.
type MsgChannelOpenInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Version   string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MsgChannelOpenInitResponse) Reset() {
	*x = MsgChannelOpenInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelOpenInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelOpenInitResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelOpenInitResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelOpenInitResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{1}
}

func (x *MsgChannelOpenInitResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelOpenInitResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel
// on Chain B. The version field within the Channel field has been deprecated. Its
// value will be ignored by core IBC.
type MsgChannelOpenTry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId string `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	// Deprecated: this field is unused. Crossing hello's are no longer supported in core IBC.
	//
	// Deprecated: Do not use.
	PreviousChannelId string `protobuf:"bytes,2,opt,name=previous_channel_id,json=previousChannelId,proto3" json:"previous_channel_id,omitempty"`
	// NOTE: the version field within the channel has been deprecated. Its value will be ignored by core IBC.
	Channel             *Channel   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	CounterpartyVersion string     `protobuf:"bytes,4,opt,name=counterparty_version,json=counterpartyVersion,proto3" json:"counterparty_version,omitempty"`
	ProofInit           []byte     `protobuf:"bytes,5,opt,name=proof_init,json=proofInit,proto3" json:"proof_init,omitempty"`
	ProofHeight         *v1.Height `protobuf:"bytes,6,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer              string     `protobuf:"bytes,7,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelOpenTry) Reset() {
	*x = MsgChannelOpenTry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelOpenTry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelOpenTry) ProtoMessage() {}

// Deprecated: Use MsgChannelOpenTry.ProtoReflect.Descriptor instead.
func (*MsgChannelOpenTry) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgChannelOpenTry) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

// Deprecated: Do not use.
func (x *MsgChannelOpenTry) GetPreviousChannelId() string {
	if x != nil {
		return x.PreviousChannelId
	}
	return ""
}

func (x *MsgChannelOpenTry) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *MsgChannelOpenTry) GetCounterpartyVersion() string {
	if x != nil {
		return x.CounterpartyVersion
	}
	return ""
}

func (x *MsgChannelOpenTry) GetProofInit() []byte {
	if x != nil {
		return x.ProofInit
	}
	return nil
}

func (x *MsgChannelOpenTry) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgChannelOpenTry) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelOpenTryResponse defines the Msg/ChannelOpenTry response type.
type MsgChannelOpenTryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *MsgChannelOpenTryResponse) Reset() {
	*x = MsgChannelOpenTryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelOpenTryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelOpenTryResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelOpenTryResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelOpenTryResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgChannelOpenTryResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MsgChannelOpenTryResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

// MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge
// the change of channel state to TRYOPEN on Chain B.
// WARNING: a channel upgrade MUST NOT initialize an upgrade for this channel
// in the same block as executing this message otherwise the counterparty will
// be incapable of opening.
type MsgChannelOpenAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId                string     `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId             string     `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CounterpartyChannelId string     `protobuf:"bytes,3,opt,name=counterparty_channel_id,json=counterpartyChannelId,proto3" json:"counterparty_channel_id,omitempty"`
	CounterpartyVersion   string     `protobuf:"bytes,4,opt,name=counterparty_version,json=counterpartyVersion,proto3" json:"counterparty_version,omitempty"`
	ProofTry              []byte     `protobuf:"bytes,5,opt,name=proof_try,json=proofTry,proto3" json:"proof_try,omitempty"`
	ProofHeight           *v1.Height `protobuf:"bytes,6,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer                string     `protobuf:"bytes,7,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelOpenAck) Reset() {
	*x = MsgChannelOpenAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelOpenAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelOpenAck) ProtoMessage() {}

// Deprecated: Use MsgChannelOpenAck.ProtoReflect.Descriptor instead.
func (*MsgChannelOpenAck) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgChannelOpenAck) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelOpenAck) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelOpenAck) GetCounterpartyChannelId() string {
	if x != nil {
		return x.CounterpartyChannelId
	}
	return ""
}

func (x *MsgChannelOpenAck) GetCounterpartyVersion() string {
	if x != nil {
		return x.CounterpartyVersion
	}
	return ""
}

func (x *MsgChannelOpenAck) GetProofTry() []byte {
	if x != nil {
		return x.ProofTry
	}
	return nil
}

func (x *MsgChannelOpenAck) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgChannelOpenAck) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelOpenAckResponse defines the Msg/ChannelOpenAck response type.
type MsgChannelOpenAckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgChannelOpenAckResponse) Reset() {
	*x = MsgChannelOpenAckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelOpenAckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelOpenAckResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelOpenAckResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelOpenAckResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{5}
}

// MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to
// acknowledge the change of channel state to OPEN on Chain A.
type MsgChannelOpenConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId      string     `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId   string     `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ProofAck    []byte     `protobuf:"bytes,3,opt,name=proof_ack,json=proofAck,proto3" json:"proof_ack,omitempty"`
	ProofHeight *v1.Height `protobuf:"bytes,4,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer      string     `protobuf:"bytes,5,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelOpenConfirm) Reset() {
	*x = MsgChannelOpenConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelOpenConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelOpenConfirm) ProtoMessage() {}

// Deprecated: Use MsgChannelOpenConfirm.ProtoReflect.Descriptor instead.
func (*MsgChannelOpenConfirm) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgChannelOpenConfirm) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelOpenConfirm) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelOpenConfirm) GetProofAck() []byte {
	if x != nil {
		return x.ProofAck
	}
	return nil
}

func (x *MsgChannelOpenConfirm) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgChannelOpenConfirm) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelOpenConfirmResponse defines the Msg/ChannelOpenConfirm response
// type.
type MsgChannelOpenConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgChannelOpenConfirmResponse) Reset() {
	*x = MsgChannelOpenConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelOpenConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelOpenConfirmResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelOpenConfirmResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelOpenConfirmResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{7}
}

// MsgChannelCloseInit defines a msg sent by a Relayer to Chain A
// to close a channel with Chain B.
type MsgChannelCloseInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId    string `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Signer    string `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelCloseInit) Reset() {
	*x = MsgChannelCloseInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelCloseInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelCloseInit) ProtoMessage() {}

// Deprecated: Use MsgChannelCloseInit.ProtoReflect.Descriptor instead.
func (*MsgChannelCloseInit) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgChannelCloseInit) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelCloseInit) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelCloseInit) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelCloseInitResponse defines the Msg/ChannelCloseInit response type.
type MsgChannelCloseInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgChannelCloseInitResponse) Reset() {
	*x = MsgChannelCloseInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelCloseInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelCloseInitResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelCloseInitResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelCloseInitResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{9}
}

// MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B
// to acknowledge the change of channel state to CLOSED on Chain A.
type MsgChannelCloseConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId                      string     `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId                   string     `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ProofInit                   []byte     `protobuf:"bytes,3,opt,name=proof_init,json=proofInit,proto3" json:"proof_init,omitempty"`
	ProofHeight                 *v1.Height `protobuf:"bytes,4,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer                      string     `protobuf:"bytes,5,opt,name=signer,proto3" json:"signer,omitempty"`
	CounterpartyUpgradeSequence uint64     `protobuf:"varint,6,opt,name=counterparty_upgrade_sequence,json=counterpartyUpgradeSequence,proto3" json:"counterparty_upgrade_sequence,omitempty"`
}

func (x *MsgChannelCloseConfirm) Reset() {
	*x = MsgChannelCloseConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelCloseConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelCloseConfirm) ProtoMessage() {}

// Deprecated: Use MsgChannelCloseConfirm.ProtoReflect.Descriptor instead.
func (*MsgChannelCloseConfirm) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgChannelCloseConfirm) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelCloseConfirm) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelCloseConfirm) GetProofInit() []byte {
	if x != nil {
		return x.ProofInit
	}
	return nil
}

func (x *MsgChannelCloseConfirm) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgChannelCloseConfirm) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *MsgChannelCloseConfirm) GetCounterpartyUpgradeSequence() uint64 {
	if x != nil {
		return x.CounterpartyUpgradeSequence
	}
	return 0
}

// MsgChannelCloseConfirmResponse defines the Msg/ChannelCloseConfirm response
// type.
type MsgChannelCloseConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgChannelCloseConfirmResponse) Reset() {
	*x = MsgChannelCloseConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelCloseConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelCloseConfirmResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelCloseConfirmResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelCloseConfirmResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{11}
}

// MsgRecvPacket receives incoming IBC packet
type MsgRecvPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packet          *Packet    `protobuf:"bytes,1,opt,name=packet,proto3" json:"packet,omitempty"`
	ProofCommitment []byte     `protobuf:"bytes,2,opt,name=proof_commitment,json=proofCommitment,proto3" json:"proof_commitment,omitempty"`
	ProofHeight     *v1.Height `protobuf:"bytes,3,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer          string     `protobuf:"bytes,4,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgRecvPacket) Reset() {
	*x = MsgRecvPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRecvPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRecvPacket) ProtoMessage() {}

// Deprecated: Use MsgRecvPacket.ProtoReflect.Descriptor instead.
func (*MsgRecvPacket) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgRecvPacket) GetPacket() *Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

func (x *MsgRecvPacket) GetProofCommitment() []byte {
	if x != nil {
		return x.ProofCommitment
	}
	return nil
}

func (x *MsgRecvPacket) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgRecvPacket) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgRecvPacketResponse defines the Msg/RecvPacket response type.
type MsgRecvPacketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ResponseResultType `protobuf:"varint,1,opt,name=result,proto3,enum=ibc.core.channel.v1.ResponseResultType" json:"result,omitempty"`
}

func (x *MsgRecvPacketResponse) Reset() {
	*x = MsgRecvPacketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRecvPacketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRecvPacketResponse) ProtoMessage() {}

// Deprecated: Use MsgRecvPacketResponse.ProtoReflect.Descriptor instead.
func (*MsgRecvPacketResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{13}
}

func (x *MsgRecvPacketResponse) GetResult() ResponseResultType {
	if x != nil {
		return x.Result
	}
	return ResponseResultType_RESPONSE_RESULT_TYPE_UNSPECIFIED
}

// MsgTimeout receives timed-out packet
type MsgTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packet           *Packet    `protobuf:"bytes,1,opt,name=packet,proto3" json:"packet,omitempty"`
	ProofUnreceived  []byte     `protobuf:"bytes,2,opt,name=proof_unreceived,json=proofUnreceived,proto3" json:"proof_unreceived,omitempty"`
	ProofHeight      *v1.Height `protobuf:"bytes,3,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	NextSequenceRecv uint64     `protobuf:"varint,4,opt,name=next_sequence_recv,json=nextSequenceRecv,proto3" json:"next_sequence_recv,omitempty"`
	Signer           string     `protobuf:"bytes,5,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgTimeout) Reset() {
	*x = MsgTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTimeout) ProtoMessage() {}

// Deprecated: Use MsgTimeout.ProtoReflect.Descriptor instead.
func (*MsgTimeout) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgTimeout) GetPacket() *Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

func (x *MsgTimeout) GetProofUnreceived() []byte {
	if x != nil {
		return x.ProofUnreceived
	}
	return nil
}

func (x *MsgTimeout) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgTimeout) GetNextSequenceRecv() uint64 {
	if x != nil {
		return x.NextSequenceRecv
	}
	return 0
}

func (x *MsgTimeout) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgTimeoutResponse defines the Msg/Timeout response type.
type MsgTimeoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ResponseResultType `protobuf:"varint,1,opt,name=result,proto3,enum=ibc.core.channel.v1.ResponseResultType" json:"result,omitempty"`
}

func (x *MsgTimeoutResponse) Reset() {
	*x = MsgTimeoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTimeoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTimeoutResponse) ProtoMessage() {}

// Deprecated: Use MsgTimeoutResponse.ProtoReflect.Descriptor instead.
func (*MsgTimeoutResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{15}
}

func (x *MsgTimeoutResponse) GetResult() ResponseResultType {
	if x != nil {
		return x.Result
	}
	return ResponseResultType_RESPONSE_RESULT_TYPE_UNSPECIFIED
}

// MsgTimeoutOnClose timed-out packet upon counterparty channel closure.
type MsgTimeoutOnClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packet                      *Packet    `protobuf:"bytes,1,opt,name=packet,proto3" json:"packet,omitempty"`
	ProofUnreceived             []byte     `protobuf:"bytes,2,opt,name=proof_unreceived,json=proofUnreceived,proto3" json:"proof_unreceived,omitempty"`
	ProofClose                  []byte     `protobuf:"bytes,3,opt,name=proof_close,json=proofClose,proto3" json:"proof_close,omitempty"`
	ProofHeight                 *v1.Height `protobuf:"bytes,4,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	NextSequenceRecv            uint64     `protobuf:"varint,5,opt,name=next_sequence_recv,json=nextSequenceRecv,proto3" json:"next_sequence_recv,omitempty"`
	Signer                      string     `protobuf:"bytes,6,opt,name=signer,proto3" json:"signer,omitempty"`
	CounterpartyUpgradeSequence uint64     `protobuf:"varint,7,opt,name=counterparty_upgrade_sequence,json=counterpartyUpgradeSequence,proto3" json:"counterparty_upgrade_sequence,omitempty"`
}

func (x *MsgTimeoutOnClose) Reset() {
	*x = MsgTimeoutOnClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTimeoutOnClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTimeoutOnClose) ProtoMessage() {}

// Deprecated: Use MsgTimeoutOnClose.ProtoReflect.Descriptor instead.
func (*MsgTimeoutOnClose) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{16}
}

func (x *MsgTimeoutOnClose) GetPacket() *Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

func (x *MsgTimeoutOnClose) GetProofUnreceived() []byte {
	if x != nil {
		return x.ProofUnreceived
	}
	return nil
}

func (x *MsgTimeoutOnClose) GetProofClose() []byte {
	if x != nil {
		return x.ProofClose
	}
	return nil
}

func (x *MsgTimeoutOnClose) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgTimeoutOnClose) GetNextSequenceRecv() uint64 {
	if x != nil {
		return x.NextSequenceRecv
	}
	return 0
}

func (x *MsgTimeoutOnClose) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *MsgTimeoutOnClose) GetCounterpartyUpgradeSequence() uint64 {
	if x != nil {
		return x.CounterpartyUpgradeSequence
	}
	return 0
}

// MsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose response type.
type MsgTimeoutOnCloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ResponseResultType `protobuf:"varint,1,opt,name=result,proto3,enum=ibc.core.channel.v1.ResponseResultType" json:"result,omitempty"`
}

func (x *MsgTimeoutOnCloseResponse) Reset() {
	*x = MsgTimeoutOnCloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTimeoutOnCloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTimeoutOnCloseResponse) ProtoMessage() {}

// Deprecated: Use MsgTimeoutOnCloseResponse.ProtoReflect.Descriptor instead.
func (*MsgTimeoutOnCloseResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{17}
}

func (x *MsgTimeoutOnCloseResponse) GetResult() ResponseResultType {
	if x != nil {
		return x.Result
	}
	return ResponseResultType_RESPONSE_RESULT_TYPE_UNSPECIFIED
}

// MsgAcknowledgement receives incoming IBC acknowledgement
type MsgAcknowledgement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packet          *Packet    `protobuf:"bytes,1,opt,name=packet,proto3" json:"packet,omitempty"`
	Acknowledgement []byte     `protobuf:"bytes,2,opt,name=acknowledgement,proto3" json:"acknowledgement,omitempty"`
	ProofAcked      []byte     `protobuf:"bytes,3,opt,name=proof_acked,json=proofAcked,proto3" json:"proof_acked,omitempty"`
	ProofHeight     *v1.Height `protobuf:"bytes,4,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer          string     `protobuf:"bytes,5,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgAcknowledgement) Reset() {
	*x = MsgAcknowledgement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAcknowledgement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAcknowledgement) ProtoMessage() {}

// Deprecated: Use MsgAcknowledgement.ProtoReflect.Descriptor instead.
func (*MsgAcknowledgement) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{18}
}

func (x *MsgAcknowledgement) GetPacket() *Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

func (x *MsgAcknowledgement) GetAcknowledgement() []byte {
	if x != nil {
		return x.Acknowledgement
	}
	return nil
}

func (x *MsgAcknowledgement) GetProofAcked() []byte {
	if x != nil {
		return x.ProofAcked
	}
	return nil
}

func (x *MsgAcknowledgement) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgAcknowledgement) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgAcknowledgementResponse defines the Msg/Acknowledgement response type.
type MsgAcknowledgementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ResponseResultType `protobuf:"varint,1,opt,name=result,proto3,enum=ibc.core.channel.v1.ResponseResultType" json:"result,omitempty"`
}

func (x *MsgAcknowledgementResponse) Reset() {
	*x = MsgAcknowledgementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAcknowledgementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAcknowledgementResponse) ProtoMessage() {}

// Deprecated: Use MsgAcknowledgementResponse.ProtoReflect.Descriptor instead.
func (*MsgAcknowledgementResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{19}
}

func (x *MsgAcknowledgementResponse) GetResult() ResponseResultType {
	if x != nil {
		return x.Result
	}
	return ResponseResultType_RESPONSE_RESULT_TYPE_UNSPECIFIED
}

// MsgChannelUpgradeInit defines the request type for the ChannelUpgradeInit rpc
// WARNING: Initializing a channel upgrade in the same block as opening the channel
// may result in the counterparty being incapable of opening.
type MsgChannelUpgradeInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId    string         `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId string         `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Fields    *UpgradeFields `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	Signer    string         `protobuf:"bytes,4,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelUpgradeInit) Reset() {
	*x = MsgChannelUpgradeInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeInit) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeInit.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeInit) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{20}
}

func (x *MsgChannelUpgradeInit) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelUpgradeInit) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelUpgradeInit) GetFields() *UpgradeFields {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *MsgChannelUpgradeInit) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelUpgradeInitResponse defines the MsgChannelUpgradeInit response type
type MsgChannelUpgradeInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Upgrade         *Upgrade `protobuf:"bytes,1,opt,name=upgrade,proto3" json:"upgrade,omitempty"`
	UpgradeSequence uint64   `protobuf:"varint,2,opt,name=upgrade_sequence,json=upgradeSequence,proto3" json:"upgrade_sequence,omitempty"`
}

func (x *MsgChannelUpgradeInitResponse) Reset() {
	*x = MsgChannelUpgradeInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeInitResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeInitResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeInitResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{21}
}

func (x *MsgChannelUpgradeInitResponse) GetUpgrade() *Upgrade {
	if x != nil {
		return x.Upgrade
	}
	return nil
}

func (x *MsgChannelUpgradeInitResponse) GetUpgradeSequence() uint64 {
	if x != nil {
		return x.UpgradeSequence
	}
	return 0
}

// MsgChannelUpgradeTry defines the request type for the ChannelUpgradeTry rpc
type MsgChannelUpgradeTry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId                        string         `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId                     string         `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ProposedUpgradeConnectionHops []string       `protobuf:"bytes,3,rep,name=proposed_upgrade_connection_hops,json=proposedUpgradeConnectionHops,proto3" json:"proposed_upgrade_connection_hops,omitempty"`
	CounterpartyUpgradeFields     *UpgradeFields `protobuf:"bytes,4,opt,name=counterparty_upgrade_fields,json=counterpartyUpgradeFields,proto3" json:"counterparty_upgrade_fields,omitempty"`
	CounterpartyUpgradeSequence   uint64         `protobuf:"varint,5,opt,name=counterparty_upgrade_sequence,json=counterpartyUpgradeSequence,proto3" json:"counterparty_upgrade_sequence,omitempty"`
	ProofChannel                  []byte         `protobuf:"bytes,6,opt,name=proof_channel,json=proofChannel,proto3" json:"proof_channel,omitempty"`
	ProofUpgrade                  []byte         `protobuf:"bytes,7,opt,name=proof_upgrade,json=proofUpgrade,proto3" json:"proof_upgrade,omitempty"`
	ProofHeight                   *v1.Height     `protobuf:"bytes,8,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer                        string         `protobuf:"bytes,9,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelUpgradeTry) Reset() {
	*x = MsgChannelUpgradeTry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeTry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeTry) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeTry.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeTry) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{22}
}

func (x *MsgChannelUpgradeTry) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelUpgradeTry) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelUpgradeTry) GetProposedUpgradeConnectionHops() []string {
	if x != nil {
		return x.ProposedUpgradeConnectionHops
	}
	return nil
}

func (x *MsgChannelUpgradeTry) GetCounterpartyUpgradeFields() *UpgradeFields {
	if x != nil {
		return x.CounterpartyUpgradeFields
	}
	return nil
}

func (x *MsgChannelUpgradeTry) GetCounterpartyUpgradeSequence() uint64 {
	if x != nil {
		return x.CounterpartyUpgradeSequence
	}
	return 0
}

func (x *MsgChannelUpgradeTry) GetProofChannel() []byte {
	if x != nil {
		return x.ProofChannel
	}
	return nil
}

func (x *MsgChannelUpgradeTry) GetProofUpgrade() []byte {
	if x != nil {
		return x.ProofUpgrade
	}
	return nil
}

func (x *MsgChannelUpgradeTry) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgChannelUpgradeTry) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelUpgradeTryResponse defines the MsgChannelUpgradeTry response type
type MsgChannelUpgradeTryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Upgrade         *Upgrade           `protobuf:"bytes,1,opt,name=upgrade,proto3" json:"upgrade,omitempty"`
	UpgradeSequence uint64             `protobuf:"varint,2,opt,name=upgrade_sequence,json=upgradeSequence,proto3" json:"upgrade_sequence,omitempty"`
	Result          ResponseResultType `protobuf:"varint,3,opt,name=result,proto3,enum=ibc.core.channel.v1.ResponseResultType" json:"result,omitempty"`
}

func (x *MsgChannelUpgradeTryResponse) Reset() {
	*x = MsgChannelUpgradeTryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeTryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeTryResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeTryResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeTryResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{23}
}

func (x *MsgChannelUpgradeTryResponse) GetUpgrade() *Upgrade {
	if x != nil {
		return x.Upgrade
	}
	return nil
}

func (x *MsgChannelUpgradeTryResponse) GetUpgradeSequence() uint64 {
	if x != nil {
		return x.UpgradeSequence
	}
	return 0
}

func (x *MsgChannelUpgradeTryResponse) GetResult() ResponseResultType {
	if x != nil {
		return x.Result
	}
	return ResponseResultType_RESPONSE_RESULT_TYPE_UNSPECIFIED
}

// MsgChannelUpgradeAck defines the request type for the ChannelUpgradeAck rpc
type MsgChannelUpgradeAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId              string     `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId           string     `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CounterpartyUpgrade *Upgrade   `protobuf:"bytes,3,opt,name=counterparty_upgrade,json=counterpartyUpgrade,proto3" json:"counterparty_upgrade,omitempty"`
	ProofChannel        []byte     `protobuf:"bytes,4,opt,name=proof_channel,json=proofChannel,proto3" json:"proof_channel,omitempty"`
	ProofUpgrade        []byte     `protobuf:"bytes,5,opt,name=proof_upgrade,json=proofUpgrade,proto3" json:"proof_upgrade,omitempty"`
	ProofHeight         *v1.Height `protobuf:"bytes,6,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer              string     `protobuf:"bytes,7,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelUpgradeAck) Reset() {
	*x = MsgChannelUpgradeAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeAck) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeAck.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeAck) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{24}
}

func (x *MsgChannelUpgradeAck) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelUpgradeAck) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelUpgradeAck) GetCounterpartyUpgrade() *Upgrade {
	if x != nil {
		return x.CounterpartyUpgrade
	}
	return nil
}

func (x *MsgChannelUpgradeAck) GetProofChannel() []byte {
	if x != nil {
		return x.ProofChannel
	}
	return nil
}

func (x *MsgChannelUpgradeAck) GetProofUpgrade() []byte {
	if x != nil {
		return x.ProofUpgrade
	}
	return nil
}

func (x *MsgChannelUpgradeAck) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgChannelUpgradeAck) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelUpgradeAckResponse defines MsgChannelUpgradeAck response type
type MsgChannelUpgradeAckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ResponseResultType `protobuf:"varint,1,opt,name=result,proto3,enum=ibc.core.channel.v1.ResponseResultType" json:"result,omitempty"`
}

func (x *MsgChannelUpgradeAckResponse) Reset() {
	*x = MsgChannelUpgradeAckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeAckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeAckResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeAckResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeAckResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{25}
}

func (x *MsgChannelUpgradeAckResponse) GetResult() ResponseResultType {
	if x != nil {
		return x.Result
	}
	return ResponseResultType_RESPONSE_RESULT_TYPE_UNSPECIFIED
}

// MsgChannelUpgradeConfirm defines the request type for the ChannelUpgradeConfirm rpc
type MsgChannelUpgradeConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId                   string     `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId                string     `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CounterpartyChannelState State      `protobuf:"varint,3,opt,name=counterparty_channel_state,json=counterpartyChannelState,proto3,enum=ibc.core.channel.v1.State" json:"counterparty_channel_state,omitempty"`
	CounterpartyUpgrade      *Upgrade   `protobuf:"bytes,4,opt,name=counterparty_upgrade,json=counterpartyUpgrade,proto3" json:"counterparty_upgrade,omitempty"`
	ProofChannel             []byte     `protobuf:"bytes,5,opt,name=proof_channel,json=proofChannel,proto3" json:"proof_channel,omitempty"`
	ProofUpgrade             []byte     `protobuf:"bytes,6,opt,name=proof_upgrade,json=proofUpgrade,proto3" json:"proof_upgrade,omitempty"`
	ProofHeight              *v1.Height `protobuf:"bytes,7,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer                   string     `protobuf:"bytes,8,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelUpgradeConfirm) Reset() {
	*x = MsgChannelUpgradeConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeConfirm) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeConfirm.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeConfirm) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{26}
}

func (x *MsgChannelUpgradeConfirm) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelUpgradeConfirm) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelUpgradeConfirm) GetCounterpartyChannelState() State {
	if x != nil {
		return x.CounterpartyChannelState
	}
	return State_STATE_UNINITIALIZED_UNSPECIFIED
}

func (x *MsgChannelUpgradeConfirm) GetCounterpartyUpgrade() *Upgrade {
	if x != nil {
		return x.CounterpartyUpgrade
	}
	return nil
}

func (x *MsgChannelUpgradeConfirm) GetProofChannel() []byte {
	if x != nil {
		return x.ProofChannel
	}
	return nil
}

func (x *MsgChannelUpgradeConfirm) GetProofUpgrade() []byte {
	if x != nil {
		return x.ProofUpgrade
	}
	return nil
}

func (x *MsgChannelUpgradeConfirm) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgChannelUpgradeConfirm) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelUpgradeConfirmResponse defines MsgChannelUpgradeConfirm response type
type MsgChannelUpgradeConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ResponseResultType `protobuf:"varint,1,opt,name=result,proto3,enum=ibc.core.channel.v1.ResponseResultType" json:"result,omitempty"`
}

func (x *MsgChannelUpgradeConfirmResponse) Reset() {
	*x = MsgChannelUpgradeConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeConfirmResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeConfirmResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeConfirmResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{27}
}

func (x *MsgChannelUpgradeConfirmResponse) GetResult() ResponseResultType {
	if x != nil {
		return x.Result
	}
	return ResponseResultType_RESPONSE_RESULT_TYPE_UNSPECIFIED
}

// MsgChannelUpgradeOpen defines the request type for the ChannelUpgradeOpen rpc
type MsgChannelUpgradeOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId                      string     `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId                   string     `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CounterpartyChannelState    State      `protobuf:"varint,3,opt,name=counterparty_channel_state,json=counterpartyChannelState,proto3,enum=ibc.core.channel.v1.State" json:"counterparty_channel_state,omitempty"`
	CounterpartyUpgradeSequence uint64     `protobuf:"varint,4,opt,name=counterparty_upgrade_sequence,json=counterpartyUpgradeSequence,proto3" json:"counterparty_upgrade_sequence,omitempty"`
	ProofChannel                []byte     `protobuf:"bytes,5,opt,name=proof_channel,json=proofChannel,proto3" json:"proof_channel,omitempty"`
	ProofHeight                 *v1.Height `protobuf:"bytes,6,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer                      string     `protobuf:"bytes,7,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelUpgradeOpen) Reset() {
	*x = MsgChannelUpgradeOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeOpen) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeOpen.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeOpen) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{28}
}

func (x *MsgChannelUpgradeOpen) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelUpgradeOpen) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelUpgradeOpen) GetCounterpartyChannelState() State {
	if x != nil {
		return x.CounterpartyChannelState
	}
	return State_STATE_UNINITIALIZED_UNSPECIFIED
}

func (x *MsgChannelUpgradeOpen) GetCounterpartyUpgradeSequence() uint64 {
	if x != nil {
		return x.CounterpartyUpgradeSequence
	}
	return 0
}

func (x *MsgChannelUpgradeOpen) GetProofChannel() []byte {
	if x != nil {
		return x.ProofChannel
	}
	return nil
}

func (x *MsgChannelUpgradeOpen) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgChannelUpgradeOpen) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelUpgradeOpenResponse defines the MsgChannelUpgradeOpen response type
type MsgChannelUpgradeOpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgChannelUpgradeOpenResponse) Reset() {
	*x = MsgChannelUpgradeOpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeOpenResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeOpenResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeOpenResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{29}
}

// MsgChannelUpgradeTimeout defines the request type for the ChannelUpgradeTimeout rpc
type MsgChannelUpgradeTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId              string     `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId           string     `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CounterpartyChannel *Channel   `protobuf:"bytes,3,opt,name=counterparty_channel,json=counterpartyChannel,proto3" json:"counterparty_channel,omitempty"`
	ProofChannel        []byte     `protobuf:"bytes,4,opt,name=proof_channel,json=proofChannel,proto3" json:"proof_channel,omitempty"`
	ProofHeight         *v1.Height `protobuf:"bytes,5,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer              string     `protobuf:"bytes,6,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelUpgradeTimeout) Reset() {
	*x = MsgChannelUpgradeTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeTimeout) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeTimeout.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeTimeout) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{30}
}

func (x *MsgChannelUpgradeTimeout) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelUpgradeTimeout) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelUpgradeTimeout) GetCounterpartyChannel() *Channel {
	if x != nil {
		return x.CounterpartyChannel
	}
	return nil
}

func (x *MsgChannelUpgradeTimeout) GetProofChannel() []byte {
	if x != nil {
		return x.ProofChannel
	}
	return nil
}

func (x *MsgChannelUpgradeTimeout) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgChannelUpgradeTimeout) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelUpgradeTimeoutRepsonse defines the MsgChannelUpgradeTimeout response type
type MsgChannelUpgradeTimeoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgChannelUpgradeTimeoutResponse) Reset() {
	*x = MsgChannelUpgradeTimeoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeTimeoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeTimeoutResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeTimeoutResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeTimeoutResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{31}
}

// MsgChannelUpgradeCancel defines the request type for the ChannelUpgradeCancel rpc
type MsgChannelUpgradeCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId            string        `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId         string        `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ErrorReceipt      *ErrorReceipt `protobuf:"bytes,3,opt,name=error_receipt,json=errorReceipt,proto3" json:"error_receipt,omitempty"`
	ProofErrorReceipt []byte        `protobuf:"bytes,4,opt,name=proof_error_receipt,json=proofErrorReceipt,proto3" json:"proof_error_receipt,omitempty"`
	ProofHeight       *v1.Height    `protobuf:"bytes,5,opt,name=proof_height,json=proofHeight,proto3" json:"proof_height,omitempty"`
	Signer            string        `protobuf:"bytes,6,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgChannelUpgradeCancel) Reset() {
	*x = MsgChannelUpgradeCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeCancel) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeCancel.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeCancel) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{32}
}

func (x *MsgChannelUpgradeCancel) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgChannelUpgradeCancel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgChannelUpgradeCancel) GetErrorReceipt() *ErrorReceipt {
	if x != nil {
		return x.ErrorReceipt
	}
	return nil
}

func (x *MsgChannelUpgradeCancel) GetProofErrorReceipt() []byte {
	if x != nil {
		return x.ProofErrorReceipt
	}
	return nil
}

func (x *MsgChannelUpgradeCancel) GetProofHeight() *v1.Height {
	if x != nil {
		return x.ProofHeight
	}
	return nil
}

func (x *MsgChannelUpgradeCancel) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgChannelUpgradeCancelResponse defines the MsgChannelUpgradeCancel response type
type MsgChannelUpgradeCancelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgChannelUpgradeCancelResponse) Reset() {
	*x = MsgChannelUpgradeCancelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChannelUpgradeCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChannelUpgradeCancelResponse) ProtoMessage() {}

// Deprecated: Use MsgChannelUpgradeCancelResponse.ProtoReflect.Descriptor instead.
func (*MsgChannelUpgradeCancelResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{33}
}

// MsgUpdateParams is the MsgUpdateParams request type.
type MsgUpdateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the channel parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params *Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MsgUpdateParams) Reset() {
	*x = MsgUpdateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParams) ProtoMessage() {}

// Deprecated: Use MsgUpdateParams.ProtoReflect.Descriptor instead.
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{34}
}

func (x *MsgUpdateParams) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgUpdateParams) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// MsgUpdateParamsResponse defines the MsgUpdateParams response type.
type MsgUpdateParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateParamsResponse) Reset() {
	*x = MsgUpdateParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateParamsResponse) ProtoMessage() {}

// Deprecated: Use MsgUpdateParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{35}
}

// MsgPruneAcknowledgements defines the request type for the PruneAcknowledgements rpc.
type MsgPruneAcknowledgements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId    string `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Limit     uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Signer    string `protobuf:"bytes,4,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (x *MsgPruneAcknowledgements) Reset() {
	*x = MsgPruneAcknowledgements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPruneAcknowledgements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPruneAcknowledgements) ProtoMessage() {}

// Deprecated: Use MsgPruneAcknowledgements.ProtoReflect.Descriptor instead.
func (*MsgPruneAcknowledgements) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{36}
}

func (x *MsgPruneAcknowledgements) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *MsgPruneAcknowledgements) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MsgPruneAcknowledgements) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MsgPruneAcknowledgements) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

// MsgPruneAcknowledgementsResponse defines the response type for the PruneAcknowledgements rpc.
type MsgPruneAcknowledgementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of sequences pruned (includes both packet acknowledgements and packet receipts where appropriate).
	TotalPrunedSequences uint64 `protobuf:"varint,1,opt,name=total_pruned_sequences,json=totalPrunedSequences,proto3" json:"total_pruned_sequences,omitempty"`
	// Number of sequences left after pruning.
	TotalRemainingSequences uint64 `protobuf:"varint,2,opt,name=total_remaining_sequences,json=totalRemainingSequences,proto3" json:"total_remaining_sequences,omitempty"`
}

func (x *MsgPruneAcknowledgementsResponse) Reset() {
	*x = MsgPruneAcknowledgementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_tx_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPruneAcknowledgementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPruneAcknowledgementsResponse) ProtoMessage() {}

// Deprecated: Use MsgPruneAcknowledgementsResponse.ProtoReflect.Descriptor instead.
func (*MsgPruneAcknowledgementsResponse) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_tx_proto_rawDescGZIP(), []int{37}
}

func (x *MsgPruneAcknowledgementsResponse) GetTotalPrunedSequences() uint64 {
	if x != nil {
		return x.TotalPrunedSequences
	}
	return 0
}

func (x *MsgPruneAcknowledgementsResponse) GetTotalRemainingSequences() uint64 {
	if x != nil {
		return x.TotalRemainingSequences
	}
	return 0
}

var File_ibc_core_channel_v1_tx_proto protoreflect.FileDescriptor

var file_ibc_core_channel_v1_tx_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x4d, 0x73,
	0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a,
	0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x22, 0x5b, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xde, 0x02,
	0x0a, 0x11, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e,
	0x54, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x13,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x11, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x31,
	0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x43, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88,
	0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x5a,
	0x0a, 0x19, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e,
	0x54, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xc1, 0x02, 0x0a, 0x11, 0x4d,
	0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x6b,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x74, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x72, 0x79,
	0x12, 0x43, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88,
	0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x1b,
	0x0a, 0x19, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e,
	0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x15,
	0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x41, 0x63, 0x6b, 0x12, 0x43, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0,
	0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x1f, 0x0a, 0x1d, 0x4d, 0x73, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x13, 0x4d, 0x73, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x3a, 0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xa1, 0x02, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x69, 0x6e, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x49, 0x6e,
	0x69, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12,
	0x42, 0x0a, 0x1d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x3a, 0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x22, 0x20, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x63, 0x76, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x43,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88, 0xa0, 0x1f,
	0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x15,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x76, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x8e, 0x02, 0x0a,
	0x0a, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x62,
	0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f,
	0x75, 0x6e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x55, 0x6e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x12, 0x43, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88, 0xa0,
	0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x5b, 0x0a,
	0x12, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xfa, 0x02, 0x0a, 0x11, 0x4d,
	0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x55, 0x6e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x63, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x63, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x12, 0x42, 0x0a, 0x1d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x3a, 0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x88, 0x02, 0x0a, 0x12,
	0x4d, 0x73, 0x67, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x5f, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x41, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x63, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xba, 0x01, 0x0a, 0x15,
	0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x40, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0,
	0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x8e, 0x01, 0x0a, 0x1d, 0x4d, 0x73, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x62,
	0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x07, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xfd, 0x03, 0x0a, 0x14, 0x4d, 0x73,
	0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x20, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x70, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x1d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x6f, 0x70, 0x73, 0x12, 0x68, 0x0a, 0x1b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x19, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x42, 0x0a,
	0x1d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7,
	0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0xce, 0x01, 0x0a, 0x1c, 0x4d, 0x73,
	0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x62,
	0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x07, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xdd, 0x02, 0x0a, 0x14, 0x4d,
	0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x41, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x14, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x62, 0x63, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x13, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x43, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82,
	0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x1c, 0x4d, 0x73,
	0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x3a, 0x04, 0x88, 0xa0, 0x1f,
	0x00, 0x22, 0xbb, 0x03, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x1a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x18, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x55, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x13, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x43, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f,
	0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22,
	0x69, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x80, 0x03, 0x0a, 0x15, 0x4d,
	0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4f, 0x70, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x1a,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x18, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x1d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x43, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88, 0xa0,
	0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x1f, 0x0a,
	0x1d, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbc,
	0x02, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x14, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x13, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x43, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x3a, 0x0f, 0x88, 0xa0,
	0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x22, 0x22, 0x0a,
	0x20, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xbd, 0x02, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69,
	0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x3a, 0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x22, 0x21, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x3a, 0x12, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x91, 0x01, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x41, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x3a, 0x0f, 0x88, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x22, 0x94, 0x01, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x75, 0x6e, 0x65,
	0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x72, 0x75, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x3a,
	0x0a, 0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2a, 0xd8, 0x01, 0x0a, 0x12, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x35, 0x0a, 0x20, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x0f, 0x8a, 0x9d, 0x20, 0x0b, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x12, 0x27, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4e, 0x4f, 0x4f, 0x50, 0x10, 0x01, 0x1a, 0x08, 0x8a, 0x9d, 0x20, 0x04, 0x4e, 0x4f, 0x4f,
	0x50, 0x12, 0x2d, 0x0a, 0x1c, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x02, 0x1a, 0x0b, 0x8a, 0x9d, 0x20, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x12, 0x2d, 0x0a, 0x1c, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x10, 0x03, 0x1a, 0x0b, 0x8a, 0x9d, 0x20, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x1a,
	0x04, 0x88, 0xa3, 0x1e, 0x00, 0x32, 0xec, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x6b, 0x0a,
	0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x27, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x62, 0x63, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x69,
	0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65,
	0x6e, 0x54, 0x72, 0x79, 0x1a, 0x2e, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f,
	0x70, 0x65, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x26, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x6b, 0x1a, 0x2e,
	0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f,
	0x70, 0x65, 0x6e, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74,
	0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x12, 0x2a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x1a, 0x32, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x49, 0x6e,
	0x69, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x2b, 0x2e, 0x69, 0x62,
	0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x1a, 0x33, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x0a, 0x52, 0x65, 0x63, 0x76, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x69, 0x62,
	0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x76, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x1a,
	0x2a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x76, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1f, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0x27, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x68, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4f, 0x6e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x26, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x4f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x1a, 0x2e, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4f, 0x6e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0f, 0x41, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67,
	0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x2a, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x1a, 0x32, 0x2e, 0x69, 0x62, 0x63, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a,
	0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x72, 0x79, 0x12, 0x29, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x72, 0x79, 0x1a, 0x31, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x71, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x41, 0x63, 0x6b, 0x12, 0x29, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63, 0x6b,
	0x1a, 0x31, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x2d, 0x2e, 0x69,
	0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x1a, 0x35, 0x2e, 0x69, 0x62,
	0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x74, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x2a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4f, 0x70, 0x65, 0x6e, 0x1a, 0x32, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x70, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x2d, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x1a, 0x35, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12,
	0x2c, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x1a, 0x34, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x24, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x2c, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d,
	0x0a, 0x15, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73,
	0x67, 0x50, 0x72, 0x75, 0x6e, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x35, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67,
	0x50, 0x72, 0x75, 0x6e, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x05, 0x80,
	0xe7, 0xb0, 0x2a, 0x01, 0x42, 0xd2, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x2d, 0x6c,
	0x61, 0x62, 0x73, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69,
	0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f,
	0x76, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x49,
	0x43, 0x43, 0xaa, 0x02, 0x13, 0x49, 0x62, 0x63, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x49, 0x62, 0x63, 0x5c, 0x43,
	0x6f, 0x72, 0x65, 0x5c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x1f, 0x49, 0x62, 0x63, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x16, 0x49, 0x62, 0x63, 0x3a, 0x3a, 0x43, 0x6f, 0x72, 0x65, 0x3a, 0x3a, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_ibc_core_channel_v1_tx_proto_rawDescOnce sync.Once
	file_ibc_core_channel_v1_tx_proto_rawDescData = file_ibc_core_channel_v1_tx_proto_rawDesc
)

func file_ibc_core_channel_v1_tx_proto_rawDescGZIP() []byte {
	file_ibc_core_channel_v1_tx_proto_rawDescOnce.Do(func() {
		file_ibc_core_channel_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_ibc_core_channel_v1_tx_proto_rawDescData)
	})
	return file_ibc_core_channel_v1_tx_proto_rawDescData
}

var file_ibc_core_channel_v1_tx_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ibc_core_channel_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_ibc_core_channel_v1_tx_proto_goTypes = []interface{}{
	(ResponseResultType)(0),                  // 0: ibc.core.channel.v1.ResponseResultType
	(*MsgChannelOpenInit)(nil),               // 1: ibc.core.channel.v1.MsgChannelOpenInit
	(*MsgChannelOpenInitResponse)(nil),       // 2: ibc.core.channel.v1.MsgChannelOpenInitResponse
	(*MsgChannelOpenTry)(nil),                // 3: ibc.core.channel.v1.MsgChannelOpenTry
	(*MsgChannelOpenTryResponse)(nil),        // 4: ibc.core.channel.v1.MsgChannelOpenTryResponse
	(*MsgChannelOpenAck)(nil),                // 5: ibc.core.channel.v1.MsgChannelOpenAck
	(*MsgChannelOpenAckResponse)(nil),        // 6: ibc.core.channel.v1.MsgChannelOpenAckResponse
	(*MsgChannelOpenConfirm)(nil),            // 7: ibc.core.channel.v1.MsgChannelOpenConfirm
	(*MsgChannelOpenConfirmResponse)(nil),    // 8: ibc.core.channel.v1.MsgChannelOpenConfirmResponse
	(*MsgChannelCloseInit)(nil),              // 9: ibc.core.channel.v1.MsgChannelCloseInit
	(*MsgChannelCloseInitResponse)(nil),      // 10: ibc.core.channel.v1.MsgChannelCloseInitResponse
	(*MsgChannelCloseConfirm)(nil),           // 11: ibc.core.channel.v1.MsgChannelCloseConfirm
	(*MsgChannelCloseConfirmResponse)(nil),   // 12: ibc.core.channel.v1.MsgChannelCloseConfirmResponse
	(*MsgRecvPacket)(nil),                    // 13: ibc.core.channel.v1.MsgRecvPacket
	(*MsgRecvPacketResponse)(nil),            // 14: ibc.core.channel.v1.MsgRecvPacketResponse
	(*MsgTimeout)(nil),                       // 15: ibc.core.channel.v1.MsgTimeout
	(*MsgTimeoutResponse)(nil),               // 16: ibc.core.channel.v1.MsgTimeoutResponse
	(*MsgTimeoutOnClose)(nil),                // 17: ibc.core.channel.v1.MsgTimeoutOnClose
	(*MsgTimeoutOnCloseResponse)(nil),        // 18: ibc.core.channel.v1.MsgTimeoutOnCloseResponse
	(*MsgAcknowledgement)(nil),               // 19: ibc.core.channel.v1.MsgAcknowledgement
	(*MsgAcknowledgementResponse)(nil),       // 20: ibc.core.channel.v1.MsgAcknowledgementResponse
	(*MsgChannelUpgradeInit)(nil),            // 21: ibc.core.channel.v1.MsgChannelUpgradeInit
	(*MsgChannelUpgradeInitResponse)(nil),    // 22: ibc.core.channel.v1.MsgChannelUpgradeInitResponse
	(*MsgChannelUpgradeTry)(nil),             // 23: ibc.core.channel.v1.MsgChannelUpgradeTry
	(*MsgChannelUpgradeTryResponse)(nil),     // 24: ibc.core.channel.v1.MsgChannelUpgradeTryResponse
	(*MsgChannelUpgradeAck)(nil),             // 25: ibc.core.channel.v1.MsgChannelUpgradeAck
	(*MsgChannelUpgradeAckResponse)(nil),     // 26: ibc.core.channel.v1.MsgChannelUpgradeAckResponse
	(*MsgChannelUpgradeConfirm)(nil),         // 27: ibc.core.channel.v1.MsgChannelUpgradeConfirm
	(*MsgChannelUpgradeConfirmResponse)(nil), // 28: ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse
	(*MsgChannelUpgradeOpen)(nil),            // 29: ibc.core.channel.v1.MsgChannelUpgradeOpen
	(*MsgChannelUpgradeOpenResponse)(nil),    // 30: ibc.core.channel.v1.MsgChannelUpgradeOpenResponse
	(*MsgChannelUpgradeTimeout)(nil),         // 31: ibc.core.channel.v1.MsgChannelUpgradeTimeout
	(*MsgChannelUpgradeTimeoutResponse)(nil), // 32: ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse
	(*MsgChannelUpgradeCancel)(nil),          // 33: ibc.core.channel.v1.MsgChannelUpgradeCancel
	(*MsgChannelUpgradeCancelResponse)(nil),  // 34: ibc.core.channel.v1.MsgChannelUpgradeCancelResponse
	(*MsgUpdateParams)(nil),                  // 35: ibc.core.channel.v1.MsgUpdateParams
	(*MsgUpdateParamsResponse)(nil),          // 36: ibc.core.channel.v1.MsgUpdateParamsResponse
	(*MsgPruneAcknowledgements)(nil),         // 37: ibc.core.channel.v1.MsgPruneAcknowledgements
	(*MsgPruneAcknowledgementsResponse)(nil), // 38: ibc.core.channel.v1.MsgPruneAcknowledgementsResponse
	(*Channel)(nil),                          // 39: ibc.core.channel.v1.Channel
	(*v1.Height)(nil),                        // 40: ibc.core.client.v1.Height
	(*Packet)(nil),                           // 41: ibc.core.channel.v1.Packet
	(*UpgradeFields)(nil),                    // 42: ibc.core.channel.v1.UpgradeFields
	(*Upgrade)(nil),                          // 43: ibc.core.channel.v1.Upgrade
	(State)(0),                               // 44: ibc.core.channel.v1.State
	(*ErrorReceipt)(nil),                     // 45: ibc.core.channel.v1.ErrorReceipt
	(*Params)(nil),                           // 46: ibc.core.channel.v1.Params
}
var file_ibc_core_channel_v1_tx_proto_depIdxs = []int32{
	39, // 0: ibc.core.channel.v1.MsgChannelOpenInit.channel:type_name -> ibc.core.channel.v1.Channel
	39, // 1: ibc.core.channel.v1.MsgChannelOpenTry.channel:type_name -> ibc.core.channel.v1.Channel
	40, // 2: ibc.core.channel.v1.MsgChannelOpenTry.proof_height:type_name -> ibc.core.client.v1.Height
	40, // 3: ibc.core.channel.v1.MsgChannelOpenAck.proof_height:type_name -> ibc.core.client.v1.Height
	40, // 4: ibc.core.channel.v1.MsgChannelOpenConfirm.proof_height:type_name -> ibc.core.client.v1.Height
	40, // 5: ibc.core.channel.v1.MsgChannelCloseConfirm.proof_height:type_name -> ibc.core.client.v1.Height
	41, // 6: ibc.core.channel.v1.MsgRecvPacket.packet:type_name -> ibc.core.channel.v1.Packet
	40, // 7: ibc.core.channel.v1.MsgRecvPacket.proof_height:type_name -> ibc.core.client.v1.Height
	0,  // 8: ibc.core.channel.v1.MsgRecvPacketResponse.result:type_name -> ibc.core.channel.v1.ResponseResultType
	41, // 9: ibc.core.channel.v1.MsgTimeout.packet:type_name -> ibc.core.channel.v1.Packet
	40, // 10: ibc.core.channel.v1.MsgTimeout.proof_height:type_name -> ibc.core.client.v1.Height
	0,  // 11: ibc.core.channel.v1.MsgTimeoutResponse.result:type_name -> ibc.core.channel.v1.ResponseResultType
	41, // 12: ibc.core.channel.v1.MsgTimeoutOnClose.packet:type_name -> ibc.core.channel.v1.Packet
	40, // 13: ibc.core.channel.v1.MsgTimeoutOnClose.proof_height:type_name -> ibc.core.client.v1.Height
	0,  // 14: ibc.core.channel.v1.MsgTimeoutOnCloseResponse.result:type_name -> ibc.core.channel.v1.ResponseResultType
	41, // 15: ibc.core.channel.v1.MsgAcknowledgement.packet:type_name -> ibc.core.channel.v1.Packet
	40, // 16: ibc.core.channel.v1.MsgAcknowledgement.proof_height:type_name -> ibc.core.client.v1.Height
	0,  // 17: ibc.core.channel.v1.MsgAcknowledgementResponse.result:type_name -> ibc.core.channel.v1.ResponseResultType
	42, // 18: ibc.core.channel.v1.MsgChannelUpgradeInit.fields:type_name -> ibc.core.channel.v1.UpgradeFields
	43, // 19: ibc.core.channel.v1.MsgChannelUpgradeInitResponse.upgrade:type_name -> ibc.core.channel.v1.Upgrade
	42, // 20: ibc.core.channel.v1.MsgChannelUpgradeTry.counterparty_upgrade_fields:type_name -> ibc.core.channel.v1.UpgradeFields
	40, // 21: ibc.core.channel.v1.MsgChannelUpgradeTry.proof_height:type_name -> ibc.core.client.v1.Height
	43, // 22: ibc.core.channel.v1.MsgChannelUpgradeTryResponse.upgrade:type_name -> ibc.core.channel.v1.Upgrade
	0,  // 23: ibc.core.channel.v1.MsgChannelUpgradeTryResponse.result:type_name -> ibc.core.channel.v1.ResponseResultType
	43, // 24: ibc.core.channel.v1.MsgChannelUpgradeAck.counterparty_upgrade:type_name -> ibc.core.channel.v1.Upgrade
	40, // 25: ibc.core.channel.v1.MsgChannelUpgradeAck.proof_height:type_name -> ibc.core.client.v1.Height
	0,  // 26: ibc.core.channel.v1.MsgChannelUpgradeAckResponse.result:type_name -> ibc.core.channel.v1.ResponseResultType
	44, // 27: ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_channel_state:type_name -> ibc.core.channel.v1.State
	43, // 28: ibc.core.channel.v1.MsgChannelUpgradeConfirm.counterparty_upgrade:type_name -> ibc.core.channel.v1.Upgrade
	40, // 29: ibc.core.channel.v1.MsgChannelUpgradeConfirm.proof_height:type_name -> ibc.core.client.v1.Height
	0,  // 30: ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse.result:type_name -> ibc.core.channel.v1.ResponseResultType
	44, // 31: ibc.core.channel.v1.MsgChannelUpgradeOpen.counterparty_channel_state:type_name -> ibc.core.channel.v1.State
	40, // 32: ibc.core.channel.v1.MsgChannelUpgradeOpen.proof_height:type_name -> ibc.core.client.v1.Height
	39, // 33: ibc.core.channel.v1.MsgChannelUpgradeTimeout.counterparty_channel:type_name -> ibc.core.channel.v1.Channel
	40, // 34: ibc.core.channel.v1.MsgChannelUpgradeTimeout.proof_height:type_name -> ibc.core.client.v1.Height
	45, // 35: ibc.core.channel.v1.MsgChannelUpgradeCancel.error_receipt:type_name -> ibc.core.channel.v1.ErrorReceipt
	40, // 36: ibc.core.channel.v1.MsgChannelUpgradeCancel.proof_height:type_name -> ibc.core.client.v1.Height
	46, // 37: ibc.core.channel.v1.MsgUpdateParams.params:type_name -> ibc.core.channel.v1.Params
	1,  // 38: ibc.core.channel.v1.Msg.ChannelOpenInit:input_type -> ibc.core.channel.v1.MsgChannelOpenInit
	3,  // 39: ibc.core.channel.v1.Msg.ChannelOpenTry:input_type -> ibc.core.channel.v1.MsgChannelOpenTry
	5,  // 40: ibc.core.channel.v1.Msg.ChannelOpenAck:input_type -> ibc.core.channel.v1.MsgChannelOpenAck
	7,  // 41: ibc.core.channel.v1.Msg.ChannelOpenConfirm:input_type -> ibc.core.channel.v1.MsgChannelOpenConfirm
	9,  // 42: ibc.core.channel.v1.Msg.ChannelCloseInit:input_type -> ibc.core.channel.v1.MsgChannelCloseInit
	11, // 43: ibc.core.channel.v1.Msg.ChannelCloseConfirm:input_type -> ibc.core.channel.v1.MsgChannelCloseConfirm
	13, // 44: ibc.core.channel.v1.Msg.RecvPacket:input_type -> ibc.core.channel.v1.MsgRecvPacket
	15, // 45: ibc.core.channel.v1.Msg.Timeout:input_type -> ibc.core.channel.v1.MsgTimeout
	17, // 46: ibc.core.channel.v1.Msg.TimeoutOnClose:input_type -> ibc.core.channel.v1.MsgTimeoutOnClose
	19, // 47: ibc.core.channel.v1.Msg.Acknowledgement:input_type -> ibc.core.channel.v1.MsgAcknowledgement
	21, // 48: ibc.core.channel.v1.Msg.ChannelUpgradeInit:input_type -> ibc.core.channel.v1.MsgChannelUpgradeInit
	23, // 49: ibc.core.channel.v1.Msg.ChannelUpgradeTry:input_type -> ibc.core.channel.v1.MsgChannelUpgradeTry
	25, // 50: ibc.core.channel.v1.Msg.ChannelUpgradeAck:input_type -> ibc.core.channel.v1.MsgChannelUpgradeAck
	27, // 51: ibc.core.channel.v1.Msg.ChannelUpgradeConfirm:input_type -> ibc.core.channel.v1.MsgChannelUpgradeConfirm
	29, // 52: ibc.core.channel.v1.Msg.ChannelUpgradeOpen:input_type -> ibc.core.channel.v1.MsgChannelUpgradeOpen
	31, // 53: ibc.core.channel.v1.Msg.ChannelUpgradeTimeout:input_type -> ibc.core.channel.v1.MsgChannelUpgradeTimeout
	33, // 54: ibc.core.channel.v1.Msg.ChannelUpgradeCancel:input_type -> ibc.core.channel.v1.MsgChannelUpgradeCancel
	35, // 55: ibc.core.channel.v1.Msg.UpdateChannelParams:input_type -> ibc.core.channel.v1.MsgUpdateParams
	37, // 56: ibc.core.channel.v1.Msg.PruneAcknowledgements:input_type -> ibc.core.channel.v1.MsgPruneAcknowledgements
	2,  // 57: ibc.core.channel.v1.Msg.ChannelOpenInit:output_type -> ibc.core.channel.v1.MsgChannelOpenInitResponse
	4,  // 58: ibc.core.channel.v1.Msg.ChannelOpenTry:output_type -> ibc.core.channel.v1.MsgChannelOpenTryResponse
	6,  // 59: ibc.core.channel.v1.Msg.ChannelOpenAck:output_type -> ibc.core.channel.v1.MsgChannelOpenAckResponse
	8,  // 60: ibc.core.channel.v1.Msg.ChannelOpenConfirm:output_type -> ibc.core.channel.v1.MsgChannelOpenConfirmResponse
	10, // 61: ibc.core.channel.v1.Msg.ChannelCloseInit:output_type -> ibc.core.channel.v1.MsgChannelCloseInitResponse
	12, // 62: ibc.core.channel.v1.Msg.ChannelCloseConfirm:output_type -> ibc.core.channel.v1.MsgChannelCloseConfirmResponse
	14, // 63: ibc.core.channel.v1.Msg.RecvPacket:output_type -> ibc.core.channel.v1.MsgRecvPacketResponse
	16, // 64: ibc.core.channel.v1.Msg.Timeout:output_type -> ibc.core.channel.v1.MsgTimeoutResponse
	18, // 65: ibc.core.channel.v1.Msg.TimeoutOnClose:output_type -> ibc.core.channel.v1.MsgTimeoutOnCloseResponse
	20, // 66: ibc.core.channel.v1.Msg.Acknowledgement:output_type -> ibc.core.channel.v1.MsgAcknowledgementResponse
	22, // 67: ibc.core.channel.v1.Msg.ChannelUpgradeInit:output_type -> ibc.core.channel.v1.MsgChannelUpgradeInitResponse
	24, // 68: ibc.core.channel.v1.Msg.ChannelUpgradeTry:output_type -> ibc.core.channel.v1.MsgChannelUpgradeTryResponse
	26, // 69: ibc.core.channel.v1.Msg.ChannelUpgradeAck:output_type -> ibc.core.channel.v1.MsgChannelUpgradeAckResponse
	28, // 70: ibc.core.channel.v1.Msg.ChannelUpgradeConfirm:output_type -> ibc.core.channel.v1.MsgChannelUpgradeConfirmResponse
	30, // 71: ibc.core.channel.v1.Msg.ChannelUpgradeOpen:output_type -> ibc.core.channel.v1.MsgChannelUpgradeOpenResponse
	32, // 72: ibc.core.channel.v1.Msg.ChannelUpgradeTimeout:output_type -> ibc.core.channel.v1.MsgChannelUpgradeTimeoutResponse
	34, // 73: ibc.core.channel.v1.Msg.ChannelUpgradeCancel:output_type -> ibc.core.channel.v1.MsgChannelUpgradeCancelResponse
	36, // 74: ibc.core.channel.v1.Msg.UpdateChannelParams:output_type -> ibc.core.channel.v1.MsgUpdateParamsResponse
	38, // 75: ibc.core.channel.v1.Msg.PruneAcknowledgements:output_type -> ibc.core.channel.v1.MsgPruneAcknowledgementsResponse
	57, // [57:76] is the sub-list for method output_type
	38, // [38:57] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_ibc_core_channel_v1_tx_proto_init() }
func file_ibc_core_channel_v1_tx_proto_init() {
	if File_ibc_core_channel_v1_tx_proto != nil {
		return
	}
	file_ibc_core_channel_v1_channel_proto_init()
	file_ibc_core_channel_v1_upgrade_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ibc_core_channel_v1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelOpenInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelOpenInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelOpenTry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelOpenTryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelOpenAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelOpenAckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelOpenConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelOpenConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelCloseInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelCloseInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelCloseConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelCloseConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRecvPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRecvPacketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTimeoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTimeoutOnClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTimeoutOnCloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAcknowledgement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAcknowledgementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeTry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeTryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeAckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeOpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeTimeoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChannelUpgradeCancelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPruneAcknowledgements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_tx_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPruneAcknowledgementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ibc_core_channel_v1_tx_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ibc_core_channel_v1_tx_proto_goTypes,
		DependencyIndexes: file_ibc_core_channel_v1_tx_proto_depIdxs,
		EnumInfos:         file_ibc_core_channel_v1_tx_proto_enumTypes,
		MessageInfos:      file_ibc_core_channel_v1_tx_proto_msgTypes,
	}.Build()
	File_ibc_core_channel_v1_tx_proto = out.File
	file_ibc_core_channel_v1_tx_proto_rawDesc = nil
	file_ibc_core_channel_v1_tx_proto_goTypes = nil
	file_ibc_core_channel_v1_tx_proto_depIdxs = nil
}
