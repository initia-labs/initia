// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package channelv1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Upgrade                    protoreflect.MessageDescriptor
	fd_Upgrade_fields             protoreflect.FieldDescriptor
	fd_Upgrade_timeout            protoreflect.FieldDescriptor
	fd_Upgrade_next_sequence_send protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_upgrade_proto_init()
	md_Upgrade = File_ibc_core_channel_v1_upgrade_proto.Messages().ByName("Upgrade")
	fd_Upgrade_fields = md_Upgrade.Fields().ByName("fields")
	fd_Upgrade_timeout = md_Upgrade.Fields().ByName("timeout")
	fd_Upgrade_next_sequence_send = md_Upgrade.Fields().ByName("next_sequence_send")
}

var _ protoreflect.Message = (*fastReflection_Upgrade)(nil)

type fastReflection_Upgrade Upgrade

func (x *Upgrade) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Upgrade)(x)
}

func (x *Upgrade) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_upgrade_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Upgrade_messageType fastReflection_Upgrade_messageType
var _ protoreflect.MessageType = fastReflection_Upgrade_messageType{}

type fastReflection_Upgrade_messageType struct{}

func (x fastReflection_Upgrade_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Upgrade)(nil)
}
func (x fastReflection_Upgrade_messageType) New() protoreflect.Message {
	return new(fastReflection_Upgrade)
}
func (x fastReflection_Upgrade_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Upgrade
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Upgrade) Descriptor() protoreflect.MessageDescriptor {
	return md_Upgrade
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Upgrade) Type() protoreflect.MessageType {
	return _fastReflection_Upgrade_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Upgrade) New() protoreflect.Message {
	return new(fastReflection_Upgrade)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Upgrade) Interface() protoreflect.ProtoMessage {
	return (*Upgrade)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Upgrade) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Fields != nil {
		value := protoreflect.ValueOfMessage(x.Fields.ProtoReflect())
		if !f(fd_Upgrade_fields, value) {
			return
		}
	}
	if x.Timeout != nil {
		value := protoreflect.ValueOfMessage(x.Timeout.ProtoReflect())
		if !f(fd_Upgrade_timeout, value) {
			return
		}
	}
	if x.NextSequenceSend != uint64(0) {
		value := protoreflect.ValueOfUint64(x.NextSequenceSend)
		if !f(fd_Upgrade_next_sequence_send, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Upgrade) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.Upgrade.fields":
		return x.Fields != nil
	case "ibc.core.channel.v1.Upgrade.timeout":
		return x.Timeout != nil
	case "ibc.core.channel.v1.Upgrade.next_sequence_send":
		return x.NextSequenceSend != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.Upgrade"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.Upgrade does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Upgrade) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.Upgrade.fields":
		x.Fields = nil
	case "ibc.core.channel.v1.Upgrade.timeout":
		x.Timeout = nil
	case "ibc.core.channel.v1.Upgrade.next_sequence_send":
		x.NextSequenceSend = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.Upgrade"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.Upgrade does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Upgrade) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.Upgrade.fields":
		value := x.Fields
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.Upgrade.timeout":
		value := x.Timeout
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.core.channel.v1.Upgrade.next_sequence_send":
		value := x.NextSequenceSend
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.Upgrade"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.Upgrade does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Upgrade) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.Upgrade.fields":
		x.Fields = value.Message().Interface().(*UpgradeFields)
	case "ibc.core.channel.v1.Upgrade.timeout":
		x.Timeout = value.Message().Interface().(*Timeout)
	case "ibc.core.channel.v1.Upgrade.next_sequence_send":
		x.NextSequenceSend = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.Upgrade"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.Upgrade does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Upgrade) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.Upgrade.fields":
		if x.Fields == nil {
			x.Fields = new(UpgradeFields)
		}
		return protoreflect.ValueOfMessage(x.Fields.ProtoReflect())
	case "ibc.core.channel.v1.Upgrade.timeout":
		if x.Timeout == nil {
			x.Timeout = new(Timeout)
		}
		return protoreflect.ValueOfMessage(x.Timeout.ProtoReflect())
	case "ibc.core.channel.v1.Upgrade.next_sequence_send":
		panic(fmt.Errorf("field next_sequence_send of message ibc.core.channel.v1.Upgrade is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.Upgrade"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.Upgrade does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Upgrade) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.Upgrade.fields":
		m := new(UpgradeFields)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.Upgrade.timeout":
		m := new(Timeout)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.core.channel.v1.Upgrade.next_sequence_send":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.Upgrade"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.Upgrade does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Upgrade) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.Upgrade", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Upgrade) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Upgrade) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Upgrade) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Upgrade) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Upgrade)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Fields != nil {
			l = options.Size(x.Fields)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Timeout != nil {
			l = options.Size(x.Timeout)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NextSequenceSend != 0 {
			n += 1 + runtime.Sov(uint64(x.NextSequenceSend))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Upgrade)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NextSequenceSend != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NextSequenceSend))
			i--
			dAtA[i] = 0x18
		}
		if x.Timeout != nil {
			encoded, err := options.Marshal(x.Timeout)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.Fields != nil {
			encoded, err := options.Marshal(x.Fields)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Upgrade)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Upgrade: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Upgrade: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Fields", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Fields == nil {
					x.Fields = &UpgradeFields{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Fields); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Timeout == nil {
					x.Timeout = &Timeout{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Timeout); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NextSequenceSend", wireType)
				}
				x.NextSequenceSend = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NextSequenceSend |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_UpgradeFields_2_list)(nil)

type _UpgradeFields_2_list struct {
	list *[]string
}

func (x *_UpgradeFields_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_UpgradeFields_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_UpgradeFields_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_UpgradeFields_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_UpgradeFields_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message UpgradeFields at list field ConnectionHops as it is not of Message kind"))
}

func (x *_UpgradeFields_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_UpgradeFields_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_UpgradeFields_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_UpgradeFields                 protoreflect.MessageDescriptor
	fd_UpgradeFields_ordering        protoreflect.FieldDescriptor
	fd_UpgradeFields_connection_hops protoreflect.FieldDescriptor
	fd_UpgradeFields_version         protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_upgrade_proto_init()
	md_UpgradeFields = File_ibc_core_channel_v1_upgrade_proto.Messages().ByName("UpgradeFields")
	fd_UpgradeFields_ordering = md_UpgradeFields.Fields().ByName("ordering")
	fd_UpgradeFields_connection_hops = md_UpgradeFields.Fields().ByName("connection_hops")
	fd_UpgradeFields_version = md_UpgradeFields.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_UpgradeFields)(nil)

type fastReflection_UpgradeFields UpgradeFields

func (x *UpgradeFields) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UpgradeFields)(x)
}

func (x *UpgradeFields) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_upgrade_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UpgradeFields_messageType fastReflection_UpgradeFields_messageType
var _ protoreflect.MessageType = fastReflection_UpgradeFields_messageType{}

type fastReflection_UpgradeFields_messageType struct{}

func (x fastReflection_UpgradeFields_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UpgradeFields)(nil)
}
func (x fastReflection_UpgradeFields_messageType) New() protoreflect.Message {
	return new(fastReflection_UpgradeFields)
}
func (x fastReflection_UpgradeFields_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UpgradeFields
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UpgradeFields) Descriptor() protoreflect.MessageDescriptor {
	return md_UpgradeFields
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UpgradeFields) Type() protoreflect.MessageType {
	return _fastReflection_UpgradeFields_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UpgradeFields) New() protoreflect.Message {
	return new(fastReflection_UpgradeFields)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UpgradeFields) Interface() protoreflect.ProtoMessage {
	return (*UpgradeFields)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UpgradeFields) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Ordering != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Ordering))
		if !f(fd_UpgradeFields_ordering, value) {
			return
		}
	}
	if len(x.ConnectionHops) != 0 {
		value := protoreflect.ValueOfList(&_UpgradeFields_2_list{list: &x.ConnectionHops})
		if !f(fd_UpgradeFields_connection_hops, value) {
			return
		}
	}
	if x.Version != "" {
		value := protoreflect.ValueOfString(x.Version)
		if !f(fd_UpgradeFields_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UpgradeFields) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.UpgradeFields.ordering":
		return x.Ordering != 0
	case "ibc.core.channel.v1.UpgradeFields.connection_hops":
		return len(x.ConnectionHops) != 0
	case "ibc.core.channel.v1.UpgradeFields.version":
		return x.Version != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.UpgradeFields"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.UpgradeFields does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpgradeFields) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.UpgradeFields.ordering":
		x.Ordering = 0
	case "ibc.core.channel.v1.UpgradeFields.connection_hops":
		x.ConnectionHops = nil
	case "ibc.core.channel.v1.UpgradeFields.version":
		x.Version = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.UpgradeFields"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.UpgradeFields does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UpgradeFields) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.UpgradeFields.ordering":
		value := x.Ordering
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "ibc.core.channel.v1.UpgradeFields.connection_hops":
		if len(x.ConnectionHops) == 0 {
			return protoreflect.ValueOfList(&_UpgradeFields_2_list{})
		}
		listValue := &_UpgradeFields_2_list{list: &x.ConnectionHops}
		return protoreflect.ValueOfList(listValue)
	case "ibc.core.channel.v1.UpgradeFields.version":
		value := x.Version
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.UpgradeFields"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.UpgradeFields does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpgradeFields) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.UpgradeFields.ordering":
		x.Ordering = (Order)(value.Enum())
	case "ibc.core.channel.v1.UpgradeFields.connection_hops":
		lv := value.List()
		clv := lv.(*_UpgradeFields_2_list)
		x.ConnectionHops = *clv.list
	case "ibc.core.channel.v1.UpgradeFields.version":
		x.Version = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.UpgradeFields"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.UpgradeFields does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpgradeFields) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.UpgradeFields.connection_hops":
		if x.ConnectionHops == nil {
			x.ConnectionHops = []string{}
		}
		value := &_UpgradeFields_2_list{list: &x.ConnectionHops}
		return protoreflect.ValueOfList(value)
	case "ibc.core.channel.v1.UpgradeFields.ordering":
		panic(fmt.Errorf("field ordering of message ibc.core.channel.v1.UpgradeFields is not mutable"))
	case "ibc.core.channel.v1.UpgradeFields.version":
		panic(fmt.Errorf("field version of message ibc.core.channel.v1.UpgradeFields is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.UpgradeFields"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.UpgradeFields does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UpgradeFields) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.UpgradeFields.ordering":
		return protoreflect.ValueOfEnum(0)
	case "ibc.core.channel.v1.UpgradeFields.connection_hops":
		list := []string{}
		return protoreflect.ValueOfList(&_UpgradeFields_2_list{list: &list})
	case "ibc.core.channel.v1.UpgradeFields.version":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.UpgradeFields"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.UpgradeFields does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UpgradeFields) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.UpgradeFields", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UpgradeFields) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpgradeFields) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UpgradeFields) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UpgradeFields) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UpgradeFields)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Ordering != 0 {
			n += 1 + runtime.Sov(uint64(x.Ordering))
		}
		if len(x.ConnectionHops) > 0 {
			for _, s := range x.ConnectionHops {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Version)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UpgradeFields)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Version) > 0 {
			i -= len(x.Version)
			copy(dAtA[i:], x.Version)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Version)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ConnectionHops) > 0 {
			for iNdEx := len(x.ConnectionHops) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.ConnectionHops[iNdEx])
				copy(dAtA[i:], x.ConnectionHops[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ConnectionHops[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.Ordering != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Ordering))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UpgradeFields)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpgradeFields: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpgradeFields: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Ordering", wireType)
				}
				x.Ordering = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Ordering |= Order(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConnectionHops", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ConnectionHops = append(x.ConnectionHops, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Version = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ErrorReceipt          protoreflect.MessageDescriptor
	fd_ErrorReceipt_sequence protoreflect.FieldDescriptor
	fd_ErrorReceipt_message  protoreflect.FieldDescriptor
)

func init() {
	file_ibc_core_channel_v1_upgrade_proto_init()
	md_ErrorReceipt = File_ibc_core_channel_v1_upgrade_proto.Messages().ByName("ErrorReceipt")
	fd_ErrorReceipt_sequence = md_ErrorReceipt.Fields().ByName("sequence")
	fd_ErrorReceipt_message = md_ErrorReceipt.Fields().ByName("message")
}

var _ protoreflect.Message = (*fastReflection_ErrorReceipt)(nil)

type fastReflection_ErrorReceipt ErrorReceipt

func (x *ErrorReceipt) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ErrorReceipt)(x)
}

func (x *ErrorReceipt) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_core_channel_v1_upgrade_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ErrorReceipt_messageType fastReflection_ErrorReceipt_messageType
var _ protoreflect.MessageType = fastReflection_ErrorReceipt_messageType{}

type fastReflection_ErrorReceipt_messageType struct{}

func (x fastReflection_ErrorReceipt_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ErrorReceipt)(nil)
}
func (x fastReflection_ErrorReceipt_messageType) New() protoreflect.Message {
	return new(fastReflection_ErrorReceipt)
}
func (x fastReflection_ErrorReceipt_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ErrorReceipt
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ErrorReceipt) Descriptor() protoreflect.MessageDescriptor {
	return md_ErrorReceipt
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ErrorReceipt) Type() protoreflect.MessageType {
	return _fastReflection_ErrorReceipt_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ErrorReceipt) New() protoreflect.Message {
	return new(fastReflection_ErrorReceipt)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ErrorReceipt) Interface() protoreflect.ProtoMessage {
	return (*ErrorReceipt)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ErrorReceipt) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sequence != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Sequence)
		if !f(fd_ErrorReceipt_sequence, value) {
			return
		}
	}
	if x.Message != "" {
		value := protoreflect.ValueOfString(x.Message)
		if !f(fd_ErrorReceipt_message, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ErrorReceipt) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.core.channel.v1.ErrorReceipt.sequence":
		return x.Sequence != uint64(0)
	case "ibc.core.channel.v1.ErrorReceipt.message":
		return x.Message != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.ErrorReceipt"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.ErrorReceipt does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ErrorReceipt) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.ErrorReceipt.sequence":
		x.Sequence = uint64(0)
	case "ibc.core.channel.v1.ErrorReceipt.message":
		x.Message = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.ErrorReceipt"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.ErrorReceipt does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ErrorReceipt) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.core.channel.v1.ErrorReceipt.sequence":
		value := x.Sequence
		return protoreflect.ValueOfUint64(value)
	case "ibc.core.channel.v1.ErrorReceipt.message":
		value := x.Message
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.ErrorReceipt"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.ErrorReceipt does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ErrorReceipt) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.core.channel.v1.ErrorReceipt.sequence":
		x.Sequence = value.Uint()
	case "ibc.core.channel.v1.ErrorReceipt.message":
		x.Message = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.ErrorReceipt"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.ErrorReceipt does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ErrorReceipt) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.ErrorReceipt.sequence":
		panic(fmt.Errorf("field sequence of message ibc.core.channel.v1.ErrorReceipt is not mutable"))
	case "ibc.core.channel.v1.ErrorReceipt.message":
		panic(fmt.Errorf("field message of message ibc.core.channel.v1.ErrorReceipt is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.ErrorReceipt"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.ErrorReceipt does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ErrorReceipt) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.core.channel.v1.ErrorReceipt.sequence":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.core.channel.v1.ErrorReceipt.message":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.core.channel.v1.ErrorReceipt"))
		}
		panic(fmt.Errorf("message ibc.core.channel.v1.ErrorReceipt does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ErrorReceipt) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.core.channel.v1.ErrorReceipt", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ErrorReceipt) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ErrorReceipt) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ErrorReceipt) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ErrorReceipt) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ErrorReceipt)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Sequence != 0 {
			n += 1 + runtime.Sov(uint64(x.Sequence))
		}
		l = len(x.Message)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ErrorReceipt)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Message) > 0 {
			i -= len(x.Message)
			copy(dAtA[i:], x.Message)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Message)))
			i--
			dAtA[i] = 0x12
		}
		if x.Sequence != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Sequence))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ErrorReceipt)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ErrorReceipt: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ErrorReceipt: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sequence", wireType)
				}
				x.Sequence = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Sequence |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Message = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: ibc/core/channel/v1/upgrade.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Upgrade is a verifiable type which contains the relevant information
// for an attempted upgrade. It provides the proposed changes to the channel
// end, the timeout for this upgrade attempt and the next packet sequence
// which allows the counterparty to efficiently know the highest sequence it has received.
// The next sequence send is used for pruning and upgrading from unordered to ordered channels.
type Upgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields           *UpgradeFields `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	Timeout          *Timeout       `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	NextSequenceSend uint64         `protobuf:"varint,3,opt,name=next_sequence_send,json=nextSequenceSend,proto3" json:"next_sequence_send,omitempty"`
}

func (x *Upgrade) Reset() {
	*x = Upgrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_upgrade_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Upgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Upgrade) ProtoMessage() {}

// Deprecated: Use Upgrade.ProtoReflect.Descriptor instead.
func (*Upgrade) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_upgrade_proto_rawDescGZIP(), []int{0}
}

func (x *Upgrade) GetFields() *UpgradeFields {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Upgrade) GetTimeout() *Timeout {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Upgrade) GetNextSequenceSend() uint64 {
	if x != nil {
		return x.NextSequenceSend
	}
	return 0
}

// UpgradeFields are the fields in a channel end which may be changed
// during a channel upgrade.
type UpgradeFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ordering       Order    `protobuf:"varint,1,opt,name=ordering,proto3,enum=ibc.core.channel.v1.Order" json:"ordering,omitempty"`
	ConnectionHops []string `protobuf:"bytes,2,rep,name=connection_hops,json=connectionHops,proto3" json:"connection_hops,omitempty"`
	Version        string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpgradeFields) Reset() {
	*x = UpgradeFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_upgrade_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeFields) ProtoMessage() {}

// Deprecated: Use UpgradeFields.ProtoReflect.Descriptor instead.
func (*UpgradeFields) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_upgrade_proto_rawDescGZIP(), []int{1}
}

func (x *UpgradeFields) GetOrdering() Order {
	if x != nil {
		return x.Ordering
	}
	return Order_ORDER_NONE_UNSPECIFIED
}

func (x *UpgradeFields) GetConnectionHops() []string {
	if x != nil {
		return x.ConnectionHops
	}
	return nil
}

func (x *UpgradeFields) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// ErrorReceipt defines a type which encapsulates the upgrade sequence and error associated with the
// upgrade handshake failure. When a channel upgrade handshake is aborted both chains are expected to increment to the
// next sequence.
type ErrorReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the channel upgrade sequence
	Sequence uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// the error message detailing the cause of failure
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorReceipt) Reset() {
	*x = ErrorReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_core_channel_v1_upgrade_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorReceipt) ProtoMessage() {}

// Deprecated: Use ErrorReceipt.ProtoReflect.Descriptor instead.
func (*ErrorReceipt) Descriptor() ([]byte, []int) {
	return file_ibc_core_channel_v1_upgrade_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorReceipt) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *ErrorReceipt) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_ibc_core_channel_v1_upgrade_proto protoreflect.FileDescriptor

var file_ibc_core_channel_v1_upgrade_proto_rawDesc = []byte{
	0x0a, 0x21, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x07, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x40, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x3c, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x3a, 0x04, 0x88, 0xa0, 0x1f,
	0x00, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x70, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x6f, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x04,
	0x88, 0xa0, 0x1f, 0x00, 0x22, 0x4a, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00,
	0x42, 0xd7, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x2d,
	0x6c, 0x61, 0x62, 0x73, 0x2f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x49, 0x43, 0x43, 0xaa, 0x02, 0x13, 0x49, 0x62, 0x63, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x49, 0x62, 0x63, 0x5c,
	0x43, 0x6f, 0x72, 0x65, 0x5c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1f, 0x49, 0x62, 0x63, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x16, 0x49, 0x62, 0x63, 0x3a, 0x3a, 0x43, 0x6f, 0x72, 0x65, 0x3a, 0x3a, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ibc_core_channel_v1_upgrade_proto_rawDescOnce sync.Once
	file_ibc_core_channel_v1_upgrade_proto_rawDescData = file_ibc_core_channel_v1_upgrade_proto_rawDesc
)

func file_ibc_core_channel_v1_upgrade_proto_rawDescGZIP() []byte {
	file_ibc_core_channel_v1_upgrade_proto_rawDescOnce.Do(func() {
		file_ibc_core_channel_v1_upgrade_proto_rawDescData = protoimpl.X.CompressGZIP(file_ibc_core_channel_v1_upgrade_proto_rawDescData)
	})
	return file_ibc_core_channel_v1_upgrade_proto_rawDescData
}

var file_ibc_core_channel_v1_upgrade_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ibc_core_channel_v1_upgrade_proto_goTypes = []interface{}{
	(*Upgrade)(nil),       // 0: ibc.core.channel.v1.Upgrade
	(*UpgradeFields)(nil), // 1: ibc.core.channel.v1.UpgradeFields
	(*ErrorReceipt)(nil),  // 2: ibc.core.channel.v1.ErrorReceipt
	(*Timeout)(nil),       // 3: ibc.core.channel.v1.Timeout
	(Order)(0),            // 4: ibc.core.channel.v1.Order
}
var file_ibc_core_channel_v1_upgrade_proto_depIdxs = []int32{
	1, // 0: ibc.core.channel.v1.Upgrade.fields:type_name -> ibc.core.channel.v1.UpgradeFields
	3, // 1: ibc.core.channel.v1.Upgrade.timeout:type_name -> ibc.core.channel.v1.Timeout
	4, // 2: ibc.core.channel.v1.UpgradeFields.ordering:type_name -> ibc.core.channel.v1.Order
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ibc_core_channel_v1_upgrade_proto_init() }
func file_ibc_core_channel_v1_upgrade_proto_init() {
	if File_ibc_core_channel_v1_upgrade_proto != nil {
		return
	}
	file_ibc_core_channel_v1_channel_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ibc_core_channel_v1_upgrade_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Upgrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_upgrade_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_core_channel_v1_upgrade_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ibc_core_channel_v1_upgrade_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ibc_core_channel_v1_upgrade_proto_goTypes,
		DependencyIndexes: file_ibc_core_channel_v1_upgrade_proto_depIdxs,
		MessageInfos:      file_ibc_core_channel_v1_upgrade_proto_msgTypes,
	}.Build()
	File_ibc_core_channel_v1_upgrade_proto = out.File
	file_ibc_core_channel_v1_upgrade_proto_rawDesc = nil
	file_ibc_core_channel_v1_upgrade_proto_goTypes = nil
	file_ibc_core_channel_v1_upgrade_proto_depIdxs = nil
}
