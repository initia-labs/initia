name: Build & Test
on:
  pull_request:
    paths:
      - "**.go"
      - "**.mv"
      - "**.move"
  push:
    branches:
      - main
      - "release/*"
    paths:
      - "**.go"
      - "**.mv"
      - "**.move"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-coverage-upload:
    name: Run test and upload codecov
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.22
      - name: Install openssl
        run: sudo apt-get install libssl-dev
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v4
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: build
        run: |
          make build
      - name: test & coverage report creation
        run: |
          go test ./... -mod=readonly -timeout 12m -race -coverprofile=coverage.txt -covermode=atomic -tags='ledger test_ledger_mock'
        if: ${{ env.GIT_DIFF != '' }}
        env:
          GIT_DIFF: ${{ env.GIT_DIFF }}
      - name: filter out DONTCOVER
        run: |
          excludelist="$(find ./ -type f -name '*.go' | xargs grep -l 'DONTCOVER')"
          excludelist+=" $(find ./ -type f -name '*.pb.go')"
          for filename in ${excludelist}; do
            filename=$(echo $filename | sed 's/^./github.com\/initia-labs\/initia/g')
            echo "Excluding ${filename} from coverage report..."
            sed -i.bak "/$(echo $filename | sed 's/\//\\\//g')/d" coverage.txt
          done
        if: ${{ env.GIT_DIFF != '' }}
        env:
          GIT_DIFF: ${{ env.GIT_DIFF }}
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          fail_ci_if_error: true
        if: ${{ env.GIT_DIFF != '' }}
        env:
          GIT_DIFF: ${{ env.GIT_DIFF }}
