name: Docker

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    tags:
      - "v*"
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"

env:
  REGISTRY: ghcr.io

jobs:
  initiad:
    name: Build Initiad image
    runs-on: ubuntu-22.04

    permissions:
      contents: read
      packages: write

    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    env:
      IMAGE_NAME: initiad

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          push: ${{ startsWith(github.ref, 'refs/tags') }} # push image only for tags
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ github.ref }}
            COMMIT=${{ github.sha }}

  node:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    name: Build Node image
    needs: initiad
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: node

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

      - name: Get base image
        run: echo "BASE_IMAGE=$(echo ${{ needs.initiad.outputs.tags }} | cut -d',' -f1)" >> "$GITHUB_ENV"

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: images/node/Dockerfile
          push: ${{ startsWith(github.ref, 'refs/tags') }} # push image only for tags
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            VERSION=${{ github.ref_name }}
            COMMIT=${{ github.sha }}
        env:
          BASE_IMAGE: ${{ env.BASE_IMAGE }}
