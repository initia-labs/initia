name: Build Linux ARM64

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set environment variables
        run: |
          echo "GOARCH=arm64" >> $GITHUB_ENV
          echo "GOOS=linux" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="v0.0.0-${GITHUB_SHA::8}"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "ARCH_NAME=aarch64" >> $GITHUB_ENV

      - name: Build for ARM64
        env:
          DOCKER_BUILDKIT: 1
        run: |
          # Enable BuildKit and create a new builder
          docker buildx create --use --name arm64-builder --platform linux/arm64
          docker buildx inspect --bootstrap

          # Build the image for ARM64
          docker buildx build --platform linux/arm64 --load --tag initia/initiad-shared:arm64 . -f Dockerfile.arm64

          # Extract the build artifacts using the ARM64 image
          mkdir -p ./build
          docker create --name temp initia/initiad-shared:arm64
          docker cp temp:/usr/local/bin/initiad ./build/
          docker cp temp:/lib/libmovevm.so ./build/
          docker cp temp:/lib/libcompiler.so ./build/
          docker rm temp

          # Package the artifacts
          cd ./build
          mkdir -p initia_${VERSION}
          mv initiad initia_${VERSION}/
          mv libmovevm.so initia_${VERSION}/libmovevm.${ARCH_NAME}.so
          mv libcompiler.so initia_${VERSION}/libcompiler.${ARCH_NAME}.so
          tar -czvf initia_${VERSION}_Linux_${ARCH_NAME}.tar.gz initia_${VERSION}
          mv initia_${VERSION}_Linux_${ARCH_NAME}.tar.gz ../

          # Check the build result
          cd ..
          ls -l
          file initia_${VERSION}_Linux_${ARCH_NAME}.tar.gz

          # Remove the builder
          docker buildx rm arm64-builder

      - name: List files
        run: ls -l

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./initia_${{ env.VERSION }}_Linux_${{ env.ARCH_NAME }}.tar.gz
        env:
          Version: ${{ env.VERSION }}
          ARCH_NAME: ${{ env.ARCH_NAME }}
