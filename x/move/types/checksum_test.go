package types

import (
	"encoding/hex"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestModuleBzToChecksum(t *testing.T) {
	codeBzStr := "a11ceb0b0700000a0c010014021438034cfa0104c6022205e8029a03078206c40508c60b2006e60b2210880cd7060adf12200cff12ca080dc91b08000000040006000f00110015001d001f00220037000108000103040203010001020507000007070000090600000b08000517070200000000061c070100010824070100000126020203010001000c00010001000e0200000103100405010001041206060001031307050100010014090000010516000b0204040105180d050204040105190e0002040401001a10050001001b11000001061e13030108010720140300010621150501080108230016010001012518190203000101271905020300010128191a02030001042906060001042a06060001002b06000001002c1d000001012d001e0203040101191f0002030001002e20000001002f14000001003023000001003124000001003225000001000d0006000100332700000101132905020300010134292a0203000100352c00000101362d2e020300010938300001020100393200000102030403060a070a080a0b120d120e0c0f1710171117161717171f1720172217232f00010a0502060a0505010501060a09000101010302060a09000609000201060501060a080202080201010b06020900090101080202060b06020900090106090003070b06020900090109000901050b060208020103030608020302020202060c0b0701080001080001060b0701090001060c020b0701090005010b08010900020802080304070b0102090009010b080109000b080109000201070b09020900090102090007090107050b0701080005070b0902080208030207080307020107080503060c0a08020a05010b01020900090103070b0102090009010900090102060c0a050a060a08020b0102080208030303070b0102080208030608020803080203080001080504060c0a08020a0a020203060c0a0a020203050a0a020201070a05030a0a050a0a080202010a080202060b010209000901090001060901050a050a080205080206080003060c0a08020202070b01020900090109000107090101080401090011060a0802070805020105060c080003070b01020802080303030608020802070803070203080305060c0a08020a0a050a0a08020204636f64650d4d6574616461746153746f7265086d65746164617461055461626c65057461626c6506537472696e6706737472696e670e4d6f64756c654d657461646174610e757067726164655f706f6c696379144d6f64756c655075626c69736865644576656e74096d6f64756c655f69640b4d6f64756c6553746f726512616c6c6f7765645f7075626c6973686572730d746f74616c5f6d6f64756c65730e6173736572745f616c6c6f77656406766563746f720869735f656d707479056572726f7210696e76616c69645f617267756d656e7408636f6e7461696e73156173736572745f6e6f5f6475706c69636174696f6e0a73696d706c655f6d6170066372656174650953696d706c654d61700c636f6e7461696e735f6b6579036164641c63616e5f6368616e67655f757067726164655f706f6c6963795f746f12667265657a655f636f64655f6f626a656374064f626a656374066f626a6563740e6f626a6563745f61646472657373067369676e65720a616464726573735f6f660869735f6f776e6572066f7074696f6e046e6f6e65064f7074696f6e08697465725f6d7574095461626c65497465720b707265706172655f6d7574086e6578745f6d7574117065726d697373696f6e5f64656e696564096e6f745f666f756e6416696e6372656173655f746f74616c5f6d6f64756c65730c696e69745f67656e65736973036e6577167365745f616c6c6f7765645f7075626c6973686572730b696e69745f6d6f64756c65077075626c6973680a7075626c6973685f76320f726571756573745f7075626c697368227665726966795f646570656e64656e636965735f757067726164655f706f6c69637906626f72726f771d7665726966795f6d6f64756c65735f757067726164655f706f6c6963790a626f72726f775f6d7574056576656e7404656d6974167665726966795f7075626c6973685f7265717565737400000000000000000000000000000000000000000000000000000000000000010520000000000000000000000000000000000000000000000000000000000000000114636f6d70696c6174696f6e5f6d65746164617461090003322e3003322e3013696e697469613a3a6d657461646174615f7630a2060a01000000000000001245555047524144455f494d4d555441424c452443616e6e6f74207570677261646520616e20696d6d757461626c65207061636b6167652e02000000000000001645555047524144455f5745414b45525f504f4c4943593243616e6e6f7420646f776e67726164652061207061636b6167652773207570677261646162696c69747920706f6c6963792e03000000000000001b45555047524144455f504f4c4943595f554e535045434946494544205570677261646520706f6c696379206973206e6f74207370656369666965642e04000000000000001745494e56414c49445f434841494e5f4f50455241544f5239546865206f7065726174696f6e20697320657870656374656420746f20626520657865637574656420627920636861696e207369676e65722e05000000000000001b45494e56414c49445f414c4c4f5745445f5055424c49534845525327616c6c6f7765645f7075626c69736865727320617267756d656e7420697320696e76616c69642e060000000000000014454455504c49434154455f4d4f44554c455f49441c546865206d6f64756c65204944206973206475706c6963617465642e070000000000000012454e4f545f5041434b4147455f4f574e4552264e6f7420746865206f776e6572206f6620746865207061636b6167652072656769737472792e08000000000000001b45434f44455f4f424a4543545f444f45535f4e4f545f45584953541d60636f64655f6f626a6563746020646f6573206e6f742065786973742e090000000000000014455041434b4147455f4445505f4d495353494e473a446570656e64656e637920636f756c64206e6f74206265207265736f6c76656420746f20616e79207075626c6973686564207061636b6167652e0a0000000000000012454445505f5745414b45525f504f4c494359314120646570656e64656e63792063616e6e6f7420686176652061207765616b6572207570677261646520706f6c6963792e01144d6f64756c655075626c69736865644576656e74010400020d746f74616c5f6d6f64756c657301010012616c6c6f7765645f7075626c697368657273010100000201020b01020802080303020108020402020a080208020502020c0a050d030001000103000507002b03100014020100000008140a003800040d0b0001080c020b02040a020605000000000000001103270e010c030b000b0338010c020507050000000f2738020c010600000000000000000c020a00410c0c030a020a032304240a000a02420c0c040e010a043803031d0d010b04140838040b02060100000000000000160c0205070b00010b04010606000000000000001103270b0001020901000000040b000b0125020a010001001b2e0e0138050c020a02290004290b010c030b00110c0c040b030b04380604260b022a000f0138073807310138080c050a053809031d0b0501020a05380a0f020c0831020b08150105170607000000000000001112270b000106080000000000000011132714000001031c0c07002a030c010a011003140b00160b010f0315021500000103213b0a00110c07002104360e011105380b0c040e010c030600000000000000000c050a03410c0c060a050a062304270a030a05420c0d040c0714310112010c090c0a0b070b0a0b09380c0b05060100000000000000160c0505100b03010b0412000c0c0a000b0c2d000b000b0211180e01410c1114020b00010604000000000000001112271900000022084003000000000000000006000000000000000012030c010b000b012d03021a01040000050b000b020b03111b021b01040000060b00110c0b010b02111c021c000200180104010326130b00110c07002104100e010700110107002a030f000c020b010b0215020604000000000000001112271d01000103000507002b03100314021e000001002b370e0041010600000000000000002404360d0045010c030d0145280c040e0341030600000000000000002404000d0345030c050d04450c0c060a05290004330b052b000c070a0710010a06380d042e0b0710010b06380e1002140a0226042b050b060a000000000000001103270b070106090000000000000011132706090000000000000011132702210000020003319d010e01110507002a030c040a02310121049801080c060b060491010a00110c0c070b0410000a0711010a072900038e010b000c08380b12000c090b080b092d000600000000000000000c0a0b072a000f010c0b0e010c030600000000000000000c0c0a03410c0c0d0a0c0a0d230482010a030a0c420c0c0e0a0b2e0a0e14380d04730a0e140c0f0a0b0b0f380f0c100a1010021431022304680a101002140a021109045d0b100f020c110a020b11150b0e140a02120238100b0c060100000000000000160c0c052c0b0b010b03010b0e010b10010602000000000000001103270b0b010b03010b0e010b10010601000000000000001103270a0e140a0212010c130c0f0a0b0b0f0b13380c0b0a060100000000000000160c0a05530b0b010b03010a0a06000000000000000024038b01058d010b0a1114020b0001051f0b00010b04010603000000000000001103270a023102210c06050b24000002000300090b000b010a0411210b020b030b04111e02030000000100030100"
	codeBz, err := hex.DecodeString(codeBzStr)
	require.NoError(t, err)

	checksum := ModuleBzToChecksum(codeBz)
	hexChecksum := hex.EncodeToString(checksum[:])
	require.Equal(t, hexChecksum, "16324a588e78ed4452ef4d9d4d57be38b581a1438e86cd9d891626b856b27d3b")
}
