{
  "swagger": "2.0",
  "info": {
    "title": "ibc/core/client/v2/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ibc/core/client/v2/config/{client_id}": {
      "get": {
        "summary": "Config queries the IBC client v2 configuration for a given client.",
        "operationId": "Config",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v2.QueryConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "client_id",
            "description": "client state unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/core/client/v2/counterparty_info/{client_id}": {
      "get": {
        "summary": "CounterpartyInfo queries an IBC light counter party info.",
        "operationId": "CounterpartyInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.core.client.v2.QueryCounterpartyInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "client_id",
            "description": "client state unique identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "ibc.core.client.v2.Config": {
      "type": "object",
      "properties": {
        "allowed_relayers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "allowed_relayers defines the set of allowed relayers for IBC V2 protocol for the given client"
        }
      },
      "title": "Config is a **per-client** configuration struct that sets which relayers are allowed to relay v2 IBC messages\nfor a given client.\nIf it is set, then only relayers in the allow list can send v2 messages\nIf it is not set, then the client allows permissionless relaying of v2 messages"
    },
    "ibc.core.client.v2.CounterpartyInfo": {
      "type": "object",
      "properties": {
        "merkle_prefix": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "title": "merkle prefix key is the prefix that ics provable keys are stored under"
        },
        "client_id": {
          "type": "string",
          "title": "client identifier is the identifier used to send packet messages to our client"
        }
      },
      "title": "CounterpartyInfo defines the key that the counterparty will use to message our client"
    },
    "ibc.core.client.v2.QueryConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/ibc.core.client.v2.Config"
        }
      },
      "title": "QueryConfigResponse is the response type for the Query/Config RPC method"
    },
    "ibc.core.client.v2.QueryCounterpartyInfoResponse": {
      "type": "object",
      "properties": {
        "counterparty_info": {
          "$ref": "#/definitions/ibc.core.client.v2.CounterpartyInfo"
        }
      },
      "description": "QueryCounterpartyInfoResponse is the response type for the\nQuery/CounterpartyInfo RPC method."
    }
  }
}
