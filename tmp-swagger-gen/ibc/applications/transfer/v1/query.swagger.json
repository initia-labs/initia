{
  "swagger": "2.0",
  "info": {
    "title": "ibc/applications/transfer/v1/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address": {
      "get": {
        "summary": "EscrowAddress returns the escrow address for a particular port and channel id.",
        "operationId": "EscrowAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryEscrowAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "channel_id",
            "description": "unique channel identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "port_id",
            "description": "unique port identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/denom_hashes/{trace}": {
      "get": {
        "summary": "DenomHash queries a denomination hash information.",
        "operationId": "DenomHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryDenomHashResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "trace",
            "description": "The denomination trace ([port_id]/[channel_id])+/[denom]",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/denoms": {
      "get": {
        "summary": "Denoms queries all denominations",
        "operationId": "Denoms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryDenomsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/denoms/{hash}": {
      "get": {
        "summary": "Denom queries a denomination",
        "operationId": "Denom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryDenomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "hash (in hex format) or denom (full denom with ibc prefix) of the on chain denomination.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/params": {
      "get": {
        "summary": "Params queries all parameters of the ibc-transfer module.",
        "operationId": "Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc/apps/transfer/v1/total_escrow/{denom}": {
      "get": {
        "summary": "TotalEscrowForDenom returns the total amount of tokens in escrow based on the denom.",
        "operationId": "TotalEscrowForDenom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "denom",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.query.v1beta1.PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "cosmos.base.v1beta1.Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "ibc.applications.transfer.v1.Denom": {
      "type": "object",
      "properties": {
        "base": {
          "type": "string",
          "title": "the base token denomination"
        },
        "trace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ibc.applications.transfer.v1.Hop"
          },
          "title": "the trace of the token"
        }
      },
      "description": "Denom holds the base denom of a Token and a trace of the chains it was sent through."
    },
    "ibc.applications.transfer.v1.Hop": {
      "type": "object",
      "properties": {
        "port_id": {
          "type": "string"
        },
        "channel_id": {
          "type": "string"
        }
      },
      "title": "Hop defines a port ID, channel ID pair specifying a unique \"hop\" in a trace"
    },
    "ibc.applications.transfer.v1.Params": {
      "type": "object",
      "properties": {
        "send_enabled": {
          "type": "boolean",
          "description": "send_enabled enables or disables all cross-chain token transfers from this\nchain."
        },
        "receive_enabled": {
          "type": "boolean",
          "description": "receive_enabled enables or disables all cross-chain token transfers to this\nchain."
        }
      },
      "description": "Params defines the set of IBC transfer parameters.\nNOTE: To prevent a single token from being transferred, set the\nTransfersEnabled parameter to true and then set the bank module's SendEnabled\nparameter for the denomination to false."
    },
    "ibc.applications.transfer.v1.QueryDenomHashResponse": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "hash (in hex format) of the denomination trace information."
        }
      },
      "description": "QueryDenomHashResponse is the response type for the Query/DenomHash RPC\nmethod."
    },
    "ibc.applications.transfer.v1.QueryDenomResponse": {
      "type": "object",
      "properties": {
        "denom": {
          "$ref": "#/definitions/ibc.applications.transfer.v1.Denom",
          "description": "denom returns the requested denomination."
        }
      },
      "description": "QueryDenomResponse is the response type for the Query/Denom RPC\nmethod."
    },
    "ibc.applications.transfer.v1.QueryDenomsResponse": {
      "type": "object",
      "properties": {
        "denoms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ibc.applications.transfer.v1.Denom"
          },
          "description": "denoms returns all denominations."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDenomsResponse is the response type for the Query/Denoms RPC\nmethod."
    },
    "ibc.applications.transfer.v1.QueryEscrowAddressResponse": {
      "type": "object",
      "properties": {
        "escrow_address": {
          "type": "string",
          "title": "the escrow account address"
        }
      },
      "description": "QueryEscrowAddressResponse is the response type of the EscrowAddress RPC method."
    },
    "ibc.applications.transfer.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/ibc.applications.transfer.v1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      },
      "description": "QueryTotalEscrowForDenomResponse is the response type for TotalEscrowForDenom RPC method."
    }
  }
}
