{
  "swagger": "2.0",
  "info": {
    "title": "opinit/opchild/v1/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/opinit/opchild/v1/base_denom": {
      "get": {
        "operationId": "BaseDenom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.opchild.v1.QueryBaseDenomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "denom",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/opchild/v1/bridge_info": {
      "get": {
        "summary": "BridgeInfo queries the bridge information.",
        "operationId": "BridgeInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.opchild.v1.QueryBridgeInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/opchild/v1/next_l1_sequence": {
      "get": {
        "summary": "NextL1Sequence queries the next l1 sequence number.",
        "operationId": "NextL1Sequence",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.opchild.v1.QueryNextL1SequenceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/opchild/v1/next_l2_sequence": {
      "get": {
        "summary": "NextL2Sequence queries the next l2 sequence number.",
        "operationId": "NextL2Sequence",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.opchild.v1.QueryNextL2SequenceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/opchild/v1/params": {
      "get": {
        "summary": "Parameters queries the rollup parameters.",
        "operationId": "Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.opchild.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/opchild/v1/validator/{validator_addr}": {
      "get": {
        "summary": "Validator queries validator info for given validator address.",
        "operationId": "Validator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.opchild.v1.QueryValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/opchild/v1/validators": {
      "get": {
        "summary": "Validators queries all validators",
        "description": "When called from another module, this query might consume a high amount of\ngas if the pagination field is incorrectly set.",
        "operationId": "Validators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.opchild.v1.QueryValidatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.query.v1beta1.PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "cosmos.base.v1beta1.DecCoin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "opinit.opchild.v1.BridgeInfo": {
      "type": "object",
      "properties": {
        "bridge_id": {
          "type": "string",
          "format": "uint64",
          "description": "bridge id is the unique identifier of the bridge which is assigned from l1."
        },
        "bridge_addr": {
          "type": "string",
          "description": "bridge_addr is the address of the bridge on l1."
        },
        "l1_chain_id": {
          "type": "string",
          "description": "l1_chain_id is the chain id of the l1 chain."
        },
        "l1_client_id": {
          "type": "string",
          "description": "l1_client_id is the IBC client ID, which is allocated for l1 chain, in l2 chain state.\nThis is used to verify the validator set in oracle update messages."
        },
        "bridge_config": {
          "$ref": "#/definitions/opinit.ophost.v1.BridgeConfig",
          "description": "bridge_config is the configuration of the bridge."
        }
      },
      "description": "BridgeInfo defines the information of the bridge."
    },
    "opinit.opchild.v1.Params": {
      "type": "object",
      "properties": {
        "max_validators": {
          "type": "integer",
          "format": "int64",
          "description": "max_validators is the maximum number of validators."
        },
        "historical_entries": {
          "type": "integer",
          "format": "int64",
          "description": "historical_entries is the number of historical entries to persist."
        },
        "min_gas_prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          }
        },
        "bridge_executors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the account address of bridge executor who can execute permissioned bridge\nmessages."
        },
        "admin": {
          "type": "string",
          "description": "the account address of admin who can execute permissioned cosmos messages."
        },
        "fee_whitelist": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the list of addresses that are allowed to pay zero fee."
        },
        "hook_max_gas": {
          "type": "string",
          "format": "uint64",
          "title": "Max gas for hook execution of `MsgFinalizeTokenDeposit`"
        }
      },
      "description": "Params defines the set of opchild parameters."
    },
    "opinit.opchild.v1.QueryBaseDenomResponse": {
      "type": "object",
      "properties": {
        "base_denom": {
          "type": "string"
        }
      },
      "description": "QueryBaseDenomResponse is response type for the Query/BaseDenom RPC method."
    },
    "opinit.opchild.v1.QueryBridgeInfoResponse": {
      "type": "object",
      "properties": {
        "bridge_info": {
          "$ref": "#/definitions/opinit.opchild.v1.BridgeInfo",
          "description": "bridge_info holds all the information about the bridge."
        }
      },
      "description": "QueryBridgeInfoResponse is response type for the Query/BridgeInfo RPC method."
    },
    "opinit.opchild.v1.QueryNextL1SequenceResponse": {
      "type": "object",
      "properties": {
        "next_l1_sequence": {
          "type": "string",
          "format": "uint64",
          "description": "next_l1_sequence holds the next l1 sequence number."
        }
      },
      "description": "QueryNextL1SequenceResponse is response type for the Query/NextL1Sequence RPC method."
    },
    "opinit.opchild.v1.QueryNextL2SequenceResponse": {
      "type": "object",
      "properties": {
        "next_l2_sequence": {
          "type": "string",
          "format": "uint64",
          "description": "next_l2_sequence holds the next l2 sequence number."
        }
      },
      "description": "QueryNextL2SequenceResponse is response type for the Query/NextL2Sequence RPC method."
    },
    "opinit.opchild.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/opinit.opchild.v1.Params",
          "description": "params holds all the parameters of this module."
        }
      },
      "description": "QueryParamsResponse is response type for the Query/Params RPC method."
    },
    "opinit.opchild.v1.QueryValidatorResponse": {
      "type": "object",
      "properties": {
        "validator": {
          "$ref": "#/definitions/opinit.opchild.v1.Validator",
          "description": "validator defines the validator info."
        }
      },
      "title": "QueryValidatorResponse is response type for the Query/Validator RPC method"
    },
    "opinit.opchild.v1.QueryValidatorsResponse": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/opinit.opchild.v1.Validator"
          },
          "description": "validators contains all the queried validators."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryValidatorsResponse is response type for the Query/Validators RPC method"
    },
    "opinit.opchild.v1.Validator": {
      "type": "object",
      "properties": {
        "moniker": {
          "type": "string"
        },
        "operator_address": {
          "type": "string",
          "description": "operator_address defines the address of the validator's operator;\nbech encoded in JSON."
        },
        "consensus_pubkey": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "consensus_pubkey is the consensus public key of the validator,\nas a Protobuf Any."
        },
        "cons_power": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Validator defines a validator, together with the total amount of the\nValidator's bond shares and their exchange rate to coins. Slashing results in\na decrease in the exchange rate, allowing correct calculation of future\nundelegations without iterating over delegators. When coins are delegated to\nthis validator, the validator is credited with a delegation whose number of\nbond shares is based on the amount of coins delegated divided by the current\nexchange rate. Voting power can be calculated as total bonded shares\nmultiplied by exchange rate."
    },
    "opinit.ophost.v1.BatchInfo": {
      "type": "object",
      "properties": {
        "submitter": {
          "type": "string",
          "description": "The address of the batch submitter."
        },
        "chain_type": {
          "$ref": "#/definitions/opinit.ophost.v1.BatchInfo.ChainType",
          "description": "The target chain type."
        }
      },
      "description": "BatchInfo defines the set of batch information."
    },
    "opinit.ophost.v1.BatchInfo.ChainType": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "INITIA",
        "CELESTIA"
      ],
      "default": "UNSPECIFIED",
      "description": "ChainType defines the type of chain.\n\n - UNSPECIFIED: Unspecified chain type.\n - INITIA: The chain type of the initia chain.\n - CELESTIA: The chain type of the celestia chain."
    },
    "opinit.ophost.v1.BridgeConfig": {
      "type": "object",
      "properties": {
        "challenger": {
          "type": "string",
          "description": "The address of the challenger."
        },
        "proposer": {
          "type": "string",
          "description": "The address of the proposer."
        },
        "batch_info": {
          "$ref": "#/definitions/opinit.ophost.v1.BatchInfo",
          "description": "The information about batch submission."
        },
        "submission_interval": {
          "type": "string",
          "description": "The time interval at which checkpoints must be submitted.\nNOTE: this param is currently not used, but will be used for challenge in future."
        },
        "finalization_period": {
          "type": "string",
          "description": "The minimum time duration that must elapse before a withdrawal can be finalized."
        },
        "submission_start_height": {
          "type": "string",
          "format": "uint64",
          "description": "The the first l2 block will be recorded on l1."
        },
        "oracle_enabled": {
          "type": "boolean",
          "description": "oracle_enabled is a flag to enable oracle."
        },
        "metadata": {
          "type": "string",
          "format": "byte",
          "description": "Normally it is IBC channelID for permissioned IBC relayer."
        }
      },
      "description": "BridgeConfig defines the set of bridge config."
    }
  }
}
