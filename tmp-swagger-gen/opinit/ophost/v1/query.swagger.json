{
  "swagger": "2.0",
  "info": {
    "title": "opinit/ophost/v1/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/opinit/ophost/v1/bridges": {
      "get": {
        "summary": "Bridges queries bridge infos.",
        "operationId": "Bridges",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryBridgesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/bridges/{bridge_id}": {
      "get": {
        "summary": "Bridge queries bridge info.",
        "operationId": "Bridge",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryBridgeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "bridge_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/bridges/{bridge_id}/batch_infos": {
      "get": {
        "summary": "BatchInfos queries all batch infos.",
        "operationId": "BatchInfos",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryBatchInfosResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "bridge_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/bridges/{bridge_id}/last_finalized_output": {
      "get": {
        "summary": "LastFinalizedOutput queries last finalized output.",
        "operationId": "LastFinalizedOutput",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryLastFinalizedOutputResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "bridge_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/bridges/{bridge_id}/next_l1_sequence": {
      "get": {
        "summary": "NextL1Sequence queries the next l1 sequence.",
        "operationId": "NextL1Sequence",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryNextL1SequenceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "bridge_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/bridges/{bridge_id}/outputs": {
      "get": {
        "summary": "OutputProposals queries all output proposals.",
        "operationId": "OutputProposals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryOutputProposalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "bridge_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/bridges/{bridge_id}/outputs/{output_index}": {
      "get": {
        "summary": "OutputProposal queries output proposal by output index.",
        "operationId": "OutputProposal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryOutputProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "bridge_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "output_index",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/bridges/{bridge_id}/token_pairs": {
      "get": {
        "summary": "TokenPairs queries all (l1 denom, l2 denom) pair.",
        "operationId": "TokenPairs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryTokenPairsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "bridge_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/bridges/{bridge_id}/token_pairs/by_l1_denom": {
      "get": {
        "summary": "TokenPairByL1Denom queries token pair by l1 denom.",
        "operationId": "TokenPairByL1Denom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryTokenPairByL1DenomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "bridge_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "l1_denom",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/bridges/{bridge_id}/token_pairs/by_l2_denom": {
      "get": {
        "summary": "TokenPairByL2Denom queries token pair by l2 denom.",
        "operationId": "TokenPairByL2Denom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryTokenPairByL2DenomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "bridge_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "l2_denom",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/bridges/{bridge_id}/withdrawals/claimed/by_hash": {
      "get": {
        "summary": "Claimed queries whether the output is claimed.",
        "operationId": "Claimed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryClaimedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "bridge_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "withdrawal_hash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/opinit/ophost/v1/params": {
      "get": {
        "summary": "Parameters queries the rollup parameters.",
        "operationId": "Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/opinit.ophost.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.query.v1beta1.PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "cosmos.base.v1beta1.Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "opinit.ophost.v1.BatchInfo": {
      "type": "object",
      "properties": {
        "submitter": {
          "type": "string",
          "description": "The address of the batch submitter."
        },
        "chain_type": {
          "$ref": "#/definitions/opinit.ophost.v1.BatchInfo.ChainType",
          "description": "The target chain type."
        }
      },
      "description": "BatchInfo defines the set of batch information."
    },
    "opinit.ophost.v1.BatchInfo.ChainType": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "INITIA",
        "CELESTIA"
      ],
      "default": "UNSPECIFIED",
      "description": "ChainType defines the type of chain.\n\n - UNSPECIFIED: Unspecified chain type.\n - INITIA: The chain type of the initia chain.\n - CELESTIA: The chain type of the celestia chain."
    },
    "opinit.ophost.v1.BatchInfoWithOutput": {
      "type": "object",
      "properties": {
        "batch_info": {
          "$ref": "#/definitions/opinit.ophost.v1.BatchInfo"
        },
        "output": {
          "$ref": "#/definitions/opinit.ophost.v1.Output"
        }
      },
      "description": "BatchInfoWithOutput defines the batch information with output."
    },
    "opinit.ophost.v1.BridgeConfig": {
      "type": "object",
      "properties": {
        "challenger": {
          "type": "string",
          "description": "The address of the challenger."
        },
        "proposer": {
          "type": "string",
          "description": "The address of the proposer."
        },
        "batch_info": {
          "$ref": "#/definitions/opinit.ophost.v1.BatchInfo",
          "description": "The information about batch submission."
        },
        "submission_interval": {
          "type": "string",
          "description": "The time interval at which checkpoints must be submitted.\nNOTE: this param is currently not used, but will be used for challenge in future."
        },
        "finalization_period": {
          "type": "string",
          "description": "The minimum time duration that must elapse before a withdrawal can be finalized."
        },
        "submission_start_height": {
          "type": "string",
          "format": "uint64",
          "description": "The the first l2 block will be recorded on l1."
        },
        "oracle_enabled": {
          "type": "boolean",
          "description": "oracle_enabled is a flag to enable oracle."
        },
        "metadata": {
          "type": "string",
          "format": "byte",
          "description": "Normally it is IBC channelID for permissioned IBC relayer."
        }
      },
      "description": "BridgeConfig defines the set of bridge config."
    },
    "opinit.ophost.v1.Output": {
      "type": "object",
      "properties": {
        "output_root": {
          "type": "string",
          "format": "byte",
          "description": "Hash of the l2 output."
        },
        "l1_block_number": {
          "type": "string",
          "format": "uint64",
          "description": "The l1 block number that the output root was submitted in."
        },
        "l1_block_time": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the l1 block that the output root was submitted in."
        },
        "l2_block_number": {
          "type": "string",
          "format": "uint64",
          "description": "The l2 block number that the output root was submitted in."
        }
      },
      "description": "Output is a l2 block submitted by proposer."
    },
    "opinit.ophost.v1.Params": {
      "type": "object",
      "properties": {
        "registration_fee": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "The amount to be paid by l2 creator."
        }
      },
      "description": "Params defines the set of ophost parameters."
    },
    "opinit.ophost.v1.QueryBatchInfosResponse": {
      "type": "object",
      "properties": {
        "batch_infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/opinit.ophost.v1.BatchInfoWithOutput"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryBatchInfosResponse is response type for Query/BatchInfos RPC method."
    },
    "opinit.ophost.v1.QueryBridgeResponse": {
      "type": "object",
      "properties": {
        "bridge_id": {
          "type": "string",
          "format": "uint64"
        },
        "bridge_addr": {
          "type": "string"
        },
        "bridge_config": {
          "$ref": "#/definitions/opinit.ophost.v1.BridgeConfig"
        }
      },
      "title": "QueryBridgeResponse is response type for the Query/Bridge RPC method"
    },
    "opinit.ophost.v1.QueryBridgesResponse": {
      "type": "object",
      "properties": {
        "bridges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/opinit.ophost.v1.QueryBridgeResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryBridgesResponse is response type for the Query/Bridges RPC method"
    },
    "opinit.ophost.v1.QueryClaimedResponse": {
      "type": "object",
      "properties": {
        "claimed": {
          "type": "boolean"
        }
      },
      "title": "QueryClaimedResponse is response type for the Query/Claimed RPC method"
    },
    "opinit.ophost.v1.QueryLastFinalizedOutputResponse": {
      "type": "object",
      "properties": {
        "output_index": {
          "type": "string",
          "format": "uint64"
        },
        "output_proposal": {
          "$ref": "#/definitions/opinit.ophost.v1.Output"
        }
      },
      "title": "QueryLastFinalizedOutputResponse is response type for the Query/LastFinalizedOutput RPC method"
    },
    "opinit.ophost.v1.QueryNextL1SequenceResponse": {
      "type": "object",
      "properties": {
        "next_l1_sequence": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "QueryNextL1SequenceResponse is response type for the Query/NextL1Sequence RPC method."
    },
    "opinit.ophost.v1.QueryOutputProposalResponse": {
      "type": "object",
      "properties": {
        "bridge_id": {
          "type": "string",
          "format": "uint64"
        },
        "output_index": {
          "type": "string",
          "format": "uint64"
        },
        "output_proposal": {
          "$ref": "#/definitions/opinit.ophost.v1.Output"
        }
      },
      "title": "QueryOutputProposalResponse is response type for the Query/OutputProposal RPC method"
    },
    "opinit.ophost.v1.QueryOutputProposalsResponse": {
      "type": "object",
      "properties": {
        "output_proposals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/opinit.ophost.v1.QueryOutputProposalResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryOutputProposalsResponse is response type for the Query/OutputProposals RPC method"
    },
    "opinit.ophost.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/opinit.ophost.v1.Params",
          "description": "params holds all the parameters of this module."
        }
      },
      "description": "QueryParamsResponse is response type for the Query/Params RPC method."
    },
    "opinit.ophost.v1.QueryTokenPairByL1DenomResponse": {
      "type": "object",
      "properties": {
        "token_pair": {
          "$ref": "#/definitions/opinit.ophost.v1.TokenPair"
        }
      },
      "title": "QueryTokenPairByL1DenomResponse is response type for the Query/TokenPairByL1Denom RPC method"
    },
    "opinit.ophost.v1.QueryTokenPairByL2DenomResponse": {
      "type": "object",
      "properties": {
        "token_pair": {
          "$ref": "#/definitions/opinit.ophost.v1.TokenPair"
        }
      },
      "title": "QueryTokenPairByL2DenomResponse is response type for the Query/TokenPairByL2Denom RPC method"
    },
    "opinit.ophost.v1.QueryTokenPairsResponse": {
      "type": "object",
      "properties": {
        "token_pairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/opinit.ophost.v1.TokenPair"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryTokenPairsResponse is response type for the Query/TokenPairs RPC method"
    },
    "opinit.ophost.v1.TokenPair": {
      "type": "object",
      "properties": {
        "l1_denom": {
          "type": "string"
        },
        "l2_denom": {
          "type": "string"
        }
      },
      "title": "TokenPair defines l1 and l2 token pair"
    }
  }
}
