{
  "swagger": "2.0",
  "info": {
    "title": "cosmos/autocli/v1/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "cosmos.autocli.v1.AppOptionsResponse": {
      "type": "object",
      "properties": {
        "module_options": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/cosmos.autocli.v1.ModuleOptions"
          },
          "description": "module_options is a map of module name to autocli module options."
        }
      },
      "description": "AppOptionsResponse is the RemoteInfoService/AppOptions response type."
    },
    "cosmos.autocli.v1.FlagOptions": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is an alternate name to use for the field flag."
        },
        "shorthand": {
          "type": "string",
          "description": "shorthand is a one-letter abbreviated flag."
        },
        "usage": {
          "type": "string",
          "description": "usage is the help message."
        },
        "default_value": {
          "type": "string",
          "description": "default_value is the default value as text."
        },
        "deprecated": {
          "type": "string",
          "description": "deprecated is the usage text to show if this flag is deprecated."
        },
        "shorthand_deprecated": {
          "type": "string",
          "description": "shorthand_deprecated is the usage text to show if the shorthand of this flag is deprecated."
        },
        "hidden": {
          "type": "boolean",
          "title": "hidden hides the flag from help/usage text"
        }
      },
      "description": "FlagOptions are options for flags generated from rpc request fields.\nBy default, all request fields are configured as flags based on the\nkebab-case name of the field. Fields can be turned into positional arguments\ninstead by using RpcCommandOptions.positional_args."
    },
    "cosmos.autocli.v1.ModuleOptions": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/cosmos.autocli.v1.ServiceCommandDescriptor",
          "description": "tx describes the tx commands for the module."
        },
        "query": {
          "$ref": "#/definitions/cosmos.autocli.v1.ServiceCommandDescriptor",
          "description": "query describes the queries commands for the module."
        }
      },
      "description": "ModuleOptions describes the CLI options for a Cosmos SDK module."
    },
    "cosmos.autocli.v1.PositionalArgDescriptor": {
      "type": "object",
      "properties": {
        "proto_field": {
          "type": "string",
          "description": "proto_field specifies the proto field to use as the positional arg. Any\nfields used as positional args will not have a flag generated."
        },
        "varargs": {
          "type": "boolean",
          "description": "varargs makes a positional parameter a varargs parameter. This can only be\napplied to last positional parameter and the proto_field must a repeated\nfield. Note: It is mutually exclusive with optional."
        },
        "optional": {
          "type": "boolean",
          "description": "optional makes the last positional parameter optional.\nNote: It is mutually exclusive with varargs."
        }
      },
      "description": "PositionalArgDescriptor describes a positional argument."
    },
    "cosmos.autocli.v1.RpcCommandOptions": {
      "type": "object",
      "properties": {
        "rpc_method": {
          "type": "string",
          "description": "rpc_method is short name of the protobuf rpc method that this command is\ngenerated from."
        },
        "use": {
          "type": "string",
          "description": "use is the one-line usage method. It also allows specifying an alternate\nname for the command as the first word of the usage text.\n\nBy default the name of an rpc command is the kebab-case short name of the\nrpc method."
        },
        "long": {
          "type": "string",
          "description": "long is the long message shown in the 'help \u003cthis-command\u003e' output."
        },
        "short": {
          "type": "string",
          "description": "short is the short description shown in the 'help' output."
        },
        "example": {
          "type": "string",
          "description": "example is examples of how to use the command."
        },
        "alias": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "alias is an array of aliases that can be used instead of the first word in Use."
        },
        "suggest_for": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "suggest_for is an array of command names for which this command will be suggested -\nsimilar to aliases but only suggests."
        },
        "deprecated": {
          "type": "string",
          "description": "deprecated defines, if this command is deprecated and should print this string when used."
        },
        "version": {
          "type": "string",
          "description": "version defines the version for this command. If this value is non-empty and the command does not\ndefine a \"version\" flag, a \"version\" boolean flag will be added to the command and, if specified,\nwill print content of the \"Version\" variable. A shorthand \"v\" flag will also be added if the\ncommand does not define one."
        },
        "flag_options": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/cosmos.autocli.v1.FlagOptions"
          },
          "description": "flag_options are options for flags generated from rpc request fields.\nBy default all request fields are configured as flags. They can\nalso be configured as positional args instead using positional_args."
        },
        "positional_args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.autocli.v1.PositionalArgDescriptor"
          },
          "description": "positional_args specifies positional arguments for the command."
        },
        "skip": {
          "type": "boolean",
          "description": "skip specifies whether to skip this rpc method when generating commands."
        },
        "gov_proposal": {
          "type": "boolean",
          "description": "gov_proposal specifies whether autocli should generate a gov proposal transaction for this rpc method.\nNormally autocli generates a transaction containing the message and broadcast it.\nHowever, when true, autocli generates a proposal transaction containing the message and broadcast it.\nThis option is ineffective for query commands."
        }
      },
      "description": "RpcCommandOptions specifies options for commands generated from protobuf\nrpc methods."
    },
    "cosmos.autocli.v1.ServiceCommandDescriptor": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "description": "service is the fully qualified name of the protobuf service to build\nthe command from. It can be left empty if sub_commands are used instead\nwhich may be the case if a module provides multiple tx and/or query services."
        },
        "rpc_command_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.autocli.v1.RpcCommandOptions"
          },
          "description": "rpc_command_options are options for commands generated from rpc methods.\nIf no options are specified for a given rpc method on the service, a\ncommand will be generated for that method with the default options."
        },
        "sub_commands": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/cosmos.autocli.v1.ServiceCommandDescriptor"
          },
          "description": "sub_commands is a map of optional sub-commands for this command based on\ndifferent protobuf services. The map key is used as the name of the\nsub-command."
        },
        "enhance_custom_command": {
          "type": "boolean",
          "description": "enhance_custom_commands specifies whether to skip the service when generating commands, if a custom command already\nexists, or enhance the existing command. If set to true, the custom command will be enhanced with the services from\ngRPC. otherwise when a custom command exists, no commands will be generated for the service."
        },
        "short": {
          "type": "string",
          "description": "short is an optional parameter used to override the short description of the auto generated command."
        }
      },
      "description": "ServiceCommandDescriptor describes a CLI command based on a protobuf service."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}
