{
  "swagger": "2.0",
  "info": {
    "title": "cosmos/nft/v1beta1/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cosmos/nft/v1beta1/balance/{owner}/{class_id}": {
      "get": {
        "summary": "Balance queries the number of NFTs of a given class owned by the owner, same as balanceOf in ERC721",
        "operationId": "Balance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "description": "owner is the owner address of the nft",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/classes": {
      "get": {
        "summary": "Classes queries all NFT classes",
        "operationId": "Classes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryClassesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/classes/{class_id}": {
      "get": {
        "summary": "Class queries an NFT class based on its id",
        "operationId": "Class",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/nfts": {
      "get": {
        "summary": "NFTs queries all NFTs of a given class or owner,choose at least one of the two, similar to tokenByIndex in\nERC721Enumerable",
        "operationId": "NFTs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryNFTsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "class_id",
            "description": "class_id associated with the nft.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "owner is the owner address of the nft.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/nfts/{class_id}/{id}": {
      "get": {
        "summary": "NFT queries an NFT based on its class and id.",
        "operationId": "NFT",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryNFTResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "id is a unique identifier of the NFT",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/owner/{class_id}/{id}": {
      "get": {
        "summary": "Owner queries the owner of the NFT based on its class and id, same as ownerOf in ERC721",
        "operationId": "Owner",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryOwnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "id is a unique identifier of the NFT",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/supply/{class_id}": {
      "get": {
        "summary": "Supply queries the number of NFTs from the given class, same as totalSupply of ERC721.",
        "operationId": "Supply",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QuerySupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "class_id",
            "description": "class_id associated with the nft",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order."
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.query.v1beta1.PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "cosmos.nft.v1beta1.Class": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id defines the unique identifier of the NFT classification, similar to the contract address of ERC721"
        },
        "name": {
          "type": "string",
          "title": "name defines the human-readable name of the NFT classification. Optional"
        },
        "symbol": {
          "type": "string",
          "title": "symbol is an abbreviated name for nft classification. Optional"
        },
        "description": {
          "type": "string",
          "title": "description is a brief description of nft classification. Optional"
        },
        "uri": {
          "type": "string",
          "title": "uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional"
        },
        "uri_hash": {
          "type": "string",
          "title": "uri_hash is a hash of the document pointed by uri. Optional"
        },
        "data": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "data is the app specific metadata of the NFT class. Optional"
        }
      },
      "description": "Class defines the class of the nft type."
    },
    "cosmos.nft.v1beta1.NFT": {
      "type": "object",
      "properties": {
        "class_id": {
          "type": "string",
          "title": "class_id associated with the NFT, similar to the contract address of ERC721"
        },
        "id": {
          "type": "string",
          "title": "id is a unique identifier of the NFT"
        },
        "uri": {
          "type": "string",
          "title": "uri for the NFT metadata stored off chain"
        },
        "uri_hash": {
          "type": "string",
          "title": "uri_hash is a hash of the document pointed by uri"
        },
        "data": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "data is an app specific data of the NFT. Optional"
        }
      },
      "description": "NFT defines the NFT."
    },
    "cosmos.nft.v1beta1.QueryBalanceResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64",
          "title": "amount is the number of all NFTs of a given class owned by the owner"
        }
      },
      "title": "QueryBalanceResponse is the response type for the Query/Balance RPC method"
    },
    "cosmos.nft.v1beta1.QueryClassResponse": {
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/cosmos.nft.v1beta1.Class",
          "description": "class defines the class of the nft type."
        }
      },
      "title": "QueryClassResponse is the response type for the Query/Class RPC method"
    },
    "cosmos.nft.v1beta1.QueryClassesResponse": {
      "type": "object",
      "properties": {
        "classes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.nft.v1beta1.Class"
          },
          "description": "class defines the class of the nft type."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryClassesResponse is the response type for the Query/Classes RPC method"
    },
    "cosmos.nft.v1beta1.QueryNFTResponse": {
      "type": "object",
      "properties": {
        "nft": {
          "$ref": "#/definitions/cosmos.nft.v1beta1.NFT",
          "title": "owner is the owner address of the nft"
        }
      },
      "title": "QueryNFTResponse is the response type for the Query/NFT RPC method"
    },
    "cosmos.nft.v1beta1.QueryNFTsResponse": {
      "type": "object",
      "properties": {
        "nfts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.nft.v1beta1.NFT"
          },
          "title": "NFT defines the NFT"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryNFTsResponse is the response type for the Query/NFTs RPC methods"
    },
    "cosmos.nft.v1beta1.QueryOwnerResponse": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "title": "owner is the owner address of the nft"
        }
      },
      "title": "QueryOwnerResponse is the response type for the Query/Owner RPC method"
    },
    "cosmos.nft.v1beta1.QuerySupplyResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64",
          "title": "amount is the number of all NFTs from the given class"
        }
      },
      "title": "QuerySupplyResponse is the response type for the Query/Supply RPC method"
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}
